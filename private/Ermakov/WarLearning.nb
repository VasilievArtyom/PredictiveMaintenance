(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    815497,      15595]
NotebookOptionsPosition[    812670,      15539]
NotebookOutlinePosition[    813046,      15555]
CellTagsIndexPosition[    813003,      15552]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\Alexey\\\\Downloads\\\\Imitator.csv\>\"", ",", " ", 
     "\"\<Table\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7931969213448753`*^9},ExpressionUUID->"31858f0d-b669-41b0-9910-\
fd993653cf00"],

Cell[CellGroupData[{

Cell[BoxData["data"], "Input",
 CellChangeTimes->{{3.79325613126964*^9, 
  3.793256136138092*^9}},ExpressionUUID->"32f9ed4f-ebb5-45d7-97c4-\
fecc9dc489b9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "57584", ",", "0", ",", 
             "40.288083286470815`", ",", "33.93230177063006`", ",", 
             "39.73575498619657`", ",", "38.30158267190793`", ",", 
             "40.073533576815535`", ",", "41.28580523936745`", ",", 
             "35.061031348334964`", ",", "40.668987347268406`", ",", 
             "40.56074847158265`", ",", "46.460082959867414`"}], "}"}], ",", 
           TemplateBox[{"2399"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{76., {3., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{62., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 2, 33681263852383365027, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{74., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 2, 33681263852383365027, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{54., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 2, 33681263852383365027, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{94., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{94., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[33681263852383365027 === $SessionID, 
   Out[2], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.793256138772271*^9},ExpressionUUID->"bd800e2b-96ba-4f61-82fa-\
5a11fdde143f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", " ", "=", " ", 
  RowBox[{"data", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{";;", "2401"}], ",", " ", 
     RowBox[{"6", ";;", "15"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793256191589304*^9, 
  3.793256245275467*^9}},ExpressionUUID->"7e66a058-fad4-460b-ac93-\
bdf04c4918df"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "40.288083286470815`", ",", "33.93230177063006`", ",", 
             "39.73575498619657`", ",", "38.30158267190793`", ",", 
             "40.073533576815535`", ",", "41.28580523936745`", ",", 
             "35.061031348334964`", ",", "40.668987347268406`", ",", 
             "40.56074847158265`", ",", "46.460082959867414`"}], "}"}], ",", 
           TemplateBox[{"2399"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{76., {3., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{62., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 3, 33681263852383365027, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{74., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 3, 33681263852383365027, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{54., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{54., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 3, 33681263852383365027, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{94., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{94., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[33681263852383365027 === $SessionID, 
   Out[3], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.7932562496854315`*^9},ExpressionUUID->"25ced6d1-5c9c-4579-b84a-\
d9a6d18d705c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"traindata", " ", "=", " ", 
   RowBox[{"data", "[", 
    RowBox[{"[", " ", 
     RowBox[{";;", "1600"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"validata", " ", "=", " ", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"1601", ";;", "2000"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testdata", " ", "=", " ", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"2001", ";;"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7932563027220297`*^9, 
  3.7932564169382095`*^9}},ExpressionUUID->"8dc89dcb-b2cf-48cc-bb0d-\
703e7db75b3c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainset", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Drop", "[", 
        RowBox[{"traindata", ",", "None", ",", "1"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"traindata", ",", "All", ",", "1"}], "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "traindata", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testset", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Drop", "[", 
        RowBox[{"testdata", ",", "None", ",", "1"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"testdata", ",", "All", ",", "1"}], "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "testdata", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"validset", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Drop", "[", 
        RowBox[{"validata", ",", "None", ",", "1"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"validata", ",", "All", ",", "1"}], "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "validata", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.793256427370055*^9, 3.7932564463720655`*^9}, {
  3.793257102590083*^9, 3.7932571071339273`*^9}, {3.7932573635437927`*^9, 
  3.7932573945683384`*^9}},ExpressionUUID->"9ced0bfd-2193-439b-9d3f-\
f7c115e818b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "traindata", "]"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<1\>\"", ",", "\"\<2\>\"", ",", "\"\<3\>\"", ",", "\"\<4\>\"", 
        ",", "\"\<5\>\"", ",", "\"\<6\>\"", ",", "\"\<7\>\"", ",", 
        "\"\<8\>\"", ",", "\"\<9\>\"", ",", "\"\<10\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Training data\>\"", ",", "15"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "testdata", "]"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<1\>\"", ",", "\"\<2\>\"", ",", "\"\<3\>\"", ",", "\"\<4\>\"", 
        ",", "\"\<5\>\"", ",", "\"\<6\>\"", ",", "\"\<7\>\"", ",", 
        "\"\<8\>\"", ",", "\"\<9\>\"", ",", "\"\<10\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Testing data\>\"", ",", "15"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "validata", "]"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<1\>\"", ",", "\"\<2\>\"", ",", "\"\<3\>\"", ",", "\"\<4\>\"", 
        ",", "\"\<5\>\"", ",", "\"\<6\>\"", ",", "\"\<7\>\"", ",", 
        "\"\<8\>\"", ",", "\"\<9\>\"", ",", "\"\<10\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Validation data\>\"", ",", "15"}], "]"}]}]}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.7932574378302555`*^9, 
  3.793257506671576*^9}},ExpressionUUID->"becc78a1-b968-4632-a5db-\
3938411db8f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
wcrHyN/Ewd33VxUnUXyggAOfY6k5hb7kr+AgRPdykR2f0UspBw2TvmUakv+4
ggOP+fKWvgaM3qs4qP3dpfpjMtGzdL21cg4JVzH6rZe2t3bAvwXtZN9J1++z
qL19IMOt0v06Hmc84A7xOwfHZrvzpj5i/XdzMGqb+86je8n/H45j0+p0o3XY
eGXDcftl65GrweQPCMdwlVlbykk/UAiHTgbHa70VxSvCsXOHD/9TAqNXtXBc
vKNUFXBI/39YIxzVe0J+TDFi9KoTjuLbXu5tURSvDMd9yYBhvwax88AoHA8K
5wYvrGbtmYSjOX3ix44LrD+LcIztH5qyRYbsy3BEZu8Y/fwZ+94xHMI+h1cO
NWbl7uGwvxb/ssOFzcc/HHNtQwoDa8h/GI5uteAfruTPiZPOt7Man8m/xA3H
D89zzvr32HpKwnH3dv+eqv/iXeEor/P8syiFfV8QjkOTLWb0IfukJBzTJI/u
nB/Cvi8NR2WwZm7BRvJfhSM9v/p3fS3tfzhm7XU7oxJA8jwcSyx7Zc6NYLg+
HLHVHTZ7yJ5oDsfoEUb9Vk5nuDUcXctHVvXUk74TjjFvp3C+G7L+u8PxL9O4
3NyA5H8E1qj7jDZQYlg2ArskKYVuX8keikDhqQSr966sfYUIZC65NMg+l/wj
EbAbmm4WsoTRn1oEnHsGD6k4Q/6SCAzU4f9OUmXyVicCMaV2DYZiVo4InDnz
85JEhulDRtLylgbe/PWM3k0icKdyh5fMb/a9RQReW1v2KrxF+lUE3IuX7wkq
ZeN1jID6r+rFKo/Z/N0j8CVrbouWJsP+EVAeqd9oQ/4MTgSW6YUr98lg9BAX
gVkzJq7ZP4PROzcCCn3vDy67z+hLEoF7ar2VG3bq/w9nR6BN1+HELRtG3wUR
0L97vU5dhpWXRCCyxGr4VvI3l0bg5gKXpoLnZL9FIN3uWJ/pO1j/VREwNThc
ruLHymsisDzuUxT3BaPPeun6GK9cc+MZ6XcROBj158PiPQy3Sscbqrk+6gjp
exFYZC4fqFRN/B8Bs89fOD6jSf+NxMubG69tXsTqy0ZinUdkSs5J0ocjsTr2
q8rbTex7hUgUZZYpyoXT/keiOLpeOL6Crb9aJIYqPX2mG0fnZSROJBSXvLzG
ynUicejRwy9ZjnR+RsKu4POKJsr3MJK2l+X36vJWhk0i4bD2/S1xIOvPIhKl
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
8N7eGj6YxsNJQZCdfUHWFfL/peC1Ht6n0/nGTcHYpUGTe1N+liQFRk2JB21n
U35eCn7N7P4tPk/6fwqslAr1Eym/tSQFRy32vRhew8pLU6Cl9FxsT/ZzhfR7
ue3pNyUMV6XgsdLGvSoXyP+bgiUzUxcXkL1Tn4LS+ZF9/TNI/qegYvKAz1co
ntqaAuXpdod/Lyb9LwUjJe/qHxI9dqfg8pvJn5/TfQyZVCjOPuzU8I7O/1Rw
duU+wDaK/6QieaVp+59C2v9UPBH14lf3p/1PxebbEs5tsPmqpUJmS8PwVZtp
/1Mh+/7azBtc1r5OKjK2bNmfTv5BpCJW5+f5C5QvaZQKY/Ggl5YC2v9UTLBV
d5Ujf6FFKrpCx83UG0f5halYsVDDWLyQ5H8qLg4OGPiG7l+7pyLXalZCM93v
9U/F5H69Z05Up/1PheEqX6+ALpL/qVil9l37iwHtfypUQ/IvVvJJ/qdiWPpL
h6oPFP9LRZ8RGaHnKB+4IBXB3XoOShOZPCxJRdP6Gct+dTF6LE0Ff4VLRFQX
yf9UDFr5d2FLMsX/UrFJ5uxAdcqPqElF/RzO3IXLSf6not+UQN27syi/IRXX
t6+acnYGxX+l+zXpNZaMpHzHVChFJBpbuhH/S8ef0Fvz737Kf+fi+7CAB7K5
DPflImaS9f0CXToPuDhZtdL82GM2XzkufoTEbowPIPrg4uXhfpmdFF8cxUXR
kc5IvZlkL3IRq5m1KJHs2Ylc9C+2HfTxJ8WPuGj2MBoff4DhqVz0jna5+qqE
4klcvF0te/Qx+cfVuZiyqm/lObLHNbi4P0m31yC6767FxYoPkUqWlP+qw0XY
tikPxlH+lh4XX8euTvj6gewPLoYamtclUTxqBRdq2Z/qPNrIHuXiW/PVEcVx
bL3XcrFscs2PzbtIP+Win+0+FXs6z025eBz6b92VMjZ+C+l45w3rLMxm2FLa
/tZKk8/3yX7loq72/pcSym+150JY/azobDQrd+Qi2PfiAaVM1r4LF6m+vv/k
yV525+LJktN3bk9k57E3F0t+rYryMGDj9efin9H0mrN72XiDubgWuza/Zhvl
33ChURi+6IAx6z+Ki0cjvl7K1CZ5yMVte4UbF5QZfyRxEV0bn974ivwjXNR/
2XhzZymTL2nS/XLvCTgbR+clF12q4x+L2th5mcGFUuyLITmr6fzkIkHUS1dm
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
gKrNn6wf9H6EiwBjNoz5uZdH/i0BlBqsPfUd2PfeAnA/3rp8yZd97y9A5dh/
TS2bWHmwACmbi553DKb8VwHkVrzfVEb5hlECJKreqn99gfhfAO+D3Un3xrDv
kwTYcPvuoJPT6L6aADatL/IyyP5LE2Diwi9NbRcoX0qAupNj1/3awugvQ4Be
y+95bj5K/lMBdNN95X59ZPUPSulBt0opYDT5UwUIrLL/0kzxj2IBjoTUS7bz
Kb4iwN7kQZsN/zH6Py3A2ZnlbcN4ZG9Lx9eRdlI0kNH3BQH+Tfc4dpDovUL6
vbLaIoPpDF8XYOA5udp3wygfQ1r/vcq96XT/746UHnVfhI3uT/dtBRh7YtLf
plI6/wXodK3K0NzG5Hu9APJWRUEpwYyfmgSw9LndZHaC7HcBhCP5KbV0f/e1
tL++T/QLoymfV0rPh1uHfKL8449S+gi/HL3xL+n/AuQNLxzdaUH8L4Ctd4P5
GXqvo1tK/1qbbvQuY/vXI0CUvMW2ByTvZNJwU/ujyluKV/ZNw/mUuugays+Q
TcPl/aNPedH7BHJpEBltjKi7xOhZPg3jzn3mTFvO6HlUGhq/BXVn92f1FdLw
6U/f2S8nsfoT0xC9OeaFw0y6X5OGdbU1iotbWf9T03D67xHrGls6/9PQp3S8
/ZO3rD31NBxQOfLW1oO1p5GG/FyjpZcHM6yVhv5+vmaDhhH/pyFP6BrdtJxh
vTSE/tmV3fGM8o/SsPhq/Du5lUwerUjDn/qa7ceJvo3ScGrk4tW+Dxlem4YF
MhEKAfS+nEkaVHi9s7ZR/r6pdP1mvWxaNJ3Of+l8U61EiT8ZtpSOb+HuETn0
PohNGtZGVx9Jp/vd9ml4uyUp7r/3kRzTcDbS1v0mxddd0mC34u2oxeR/cE+D
y6DUbdfovql3GkwGPPz58RDZ/2mY2fmsuZpP9n8apn6SHZvjS/mv/7/+LjLp
Rax+VBo2pvTKW1xP8bA0TG+oH3Kyjc03KQ2beSsS56qx+tw0BKmtnKNI/qQ0
6X5nbVLSpPYkaTgU4/BIqYSNJyMNc28Epj/Ip/d60jDeeVnnNCWGD6ahbbzP
+yo+5VOm4f0wi4I40oeL0/Dt3Nr79mT/laTB/+s+G58WNt7TaRj4zuXRpEsU
b5HSj9fL0+mUT3khDTvL/5qF0v2PijS8Kq2e1kXvK11PQ+v10Z/vgdFflXQ/
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
uKc=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw9XXdcz9/3z0p2ssosQmZRiMKzRSiSJEmivfde7/a7/e69RWSWrGSFIgkh
yiw7FEXILAm/9+/xuefbPz2e3X3PuOeec+4rtW2+ls495eTkIC8n9/+///tp
X/rde1TR+g6A/QHxM1zTFomMGFbAxrplOV75xgwror+/Y8vCnssZHo7BdSfH
5zUvY1gZz2dpDDB/YcLwWBi4fDwjsSGsikkvD36Wb6H+JiK+xcE3z4KwOrgT
B1/LrCc8BQ67OSmXexHWwFilwePDvlB/06H61jCA+5zGn4lNm4pN5g8zZXg2
LkbMGdR/zAqGteD+67PGkBzCc5DxUWnrl+VUfy6aXlcGu4cT1sauY397iOQI
6+BRKC/uUhatfx7uVS87niug8ecDqvVpLiMIL0B06tMh5rto/rpY83LwZVUV
mv9CjD74p2XWCMKL4G6cs9zMnrAe+Op399Y4EdbHxaFTg2wCqP/FEJ/M8o4a
S/NZgtcrX+p2KBFeigj9S/Ybn1B7YO+CabyMQQxzgK4JZ4LuTaf+DPBi0PG1
r5vZfDkGqM+adEO5kOZviG6HRLmWl1RuiNMXzx/T+N/4RuB8F8Y8UmH7xTHC
JqtDGiLllazcGFUBh1oaOtn+c4xxxbyl9xw5oocJjq4yHDB6FrU3welTzxQG
KVL5Mgx1XKy7/xsbj7MM6VfqhhztReMvx6tvP4sKxrL1cJZj67zEJOs/tH5T
RAp7K+pbUbkp0otXPxytQutfgVlpJ2YnXqXyFbDc6zrz/R6i/0okxulXdPWj
+a/EN0ejHvyxq1j5KmjHe3IqdrP1clYhdMjQGfcGUbkZguOu1AXKMcwxQ2tj
TcHr7bQ+czx43Wdx1Vbq3xw/+w2+teI7la/GoWUPVx4QU/lqyOlx+0wVUfka
aE4KuMALpv1bgwM77+sE5tP+WGDyDaPQGYYMwwIOh/dfdm0mfrDA7bdjom4f
ZrjCAnYKz5N162n/1uJWp4n+Pwe2P1gLvS1JRTc2U/u1GD3lefLNFMYfFWsx
lPNaOf8H7a8l1t/drfilldpbQjnsnENYG83XErtCnO7PVGP7U2GJGRO9F6y/
Tfu3Dm3ZqqG3h6xm7dfh8sHQ67nPzVj7dXBSCedPXMdwxTq8vivfi7ef2lth
QYlBhPNwhmGFts4lf3RUiV5W2H//ndGE9Ww/K6xwXjDC4cL/9MF69JObbhyq
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
y9UP8muGkH8lAX9mxF+/SvarWwJu9lI/8+EWnbcJWJn79ONIyu8JS8CGeOGu
vwp0/ibANu3exTQDJr/cBNgPXXHg0ia6jydA/dtKp5QvJP8JCHl3aqDPO/L3
J6D57eMlRWlsvwsTsGfsr9fyJ8heScC61yWKx/yJ/rL5Wh1orOsg+yUB3j99
DSdZMH6pTkCPvbYnQ3zJn5EAu0bewtOlDDckoNFScefBLrJvEuBpe/lL/UuG
WxJgPtz9V31/5q9oT4D+y8xT494wfutMQOisy9d+92JYLhHfl4Q0lEvZ/BQS
MXh3aW3nIvIHJWJzg1rpmr9svcqJ8IopH9ktIv9gIjbd3qcOZbZ/GokYFm1S
7bqM7bdWIvYcX2QYUkv6PxHcPUEaey1J/ydCZ7tS5D49w/+waSKO25x0uzWC
9H8iEt4c3rtwH8M2iZj5Z89Xj0i6XyRiw5fBPevdWX9uieh1v1+f9HKG/RLh
wtlYe3QS0T8RAY2rksopvslJRNoQh8lRC0n/J2JbbPDDo/p0/ieiwapxXYor
0T8R57yH5uXSfuQn4rd48MM0itcUJiJjzJTnt8vZfhbLxt96pt56KPPPliZi
gPlxv1M/KD8iEWsM5g74O5vkPxHvLmkqqN4g+sv2c4mBZ31fon8ixhjGjDZc
S/KfiIXcr0bVJiT/iYie1PPP6m667yVi5zs5SWsbyX8i+FNN/JooHi6XhF0h
vj4dPJL/JIxZbjlt5yqS/ySodV3Sd+5g+6+chAYT7b0BYvIPJcFY3u/XUj+G
NZIgGX6uehCH/AVJCP7hzU0bTvRPgu/rx0dvbCf/cRJMp20LG5zN5mOahFjX
U7qfkug+lQQU9e0xt5S1t0mCq/Ti7gDKj3RIgs8+xamr7xD9k5Bu97Wxgebv
l4TciVf3/3pg+B8OS0KYavbiFycY5iRh5k/v8//iGOYm4aOrcI5tM2vPS8Kv
5Ize8hRvl8rWa+Do6DOb7PMkuH3sW2LwmeHC/19v9J2R99j6ipOgM/DIsnO2
jB6lSVD9/s93hhWd/0lQCLjB157NcHUSVhbdVbn8ktWvS4JFL25eMslXQxKa
tH++vTeM4plJ6NlHYezFLQy3JKFid6XNyjCifxIEh264bVpL9E/C7b6/Qo2O
UfwnGSnH148xp/YKyXh8NPS3zl66DycjpNiyxUrE9l85GUUzPhlusyP/QDIK
+mbMzd7O1q+RDInqXL7bGfIXJKPtchv3Np/tn24y9PcdOb44i2EkY8uohOiS
MQybJmPeYS2jDBOGLZKxIdFod3dvhm2SsTXz/gXneIYdZJg/4JszxafdkmE8
3j2VO4T8jckQ72t62X2OzScsGctV9riP6mL1OcnYPeW9TtlvVs5NxnajtUvn
fWTlvGR8PqdVeXMFw9JkFPdcVtSD+Ds/GcolQ8edJf9WYTJyp6vFLaL8h+Jk
NE0b/OhNEtl/svZrPl9Rn0P392ScKXq/aHoow9XJeD6uZXM95b/WJSN7boFr
kAbJfzKMfi3VrIgk/Z+MhhWpF26PJPs/GZqC4AhHuk+3J6PnaGFY8j/WvlNG
3+fWmSf9yP5PwSrFhS/Nfcj+T4FWirihzJnsvxQUdYqrJpH/QDkFtyf9sw6P
J/s/BdPqTuo6LyX7PwW+/h9UlcrI/k8B137fekEFyX8KTlZ9ei66RPo/BTO1
nqQlFLL9NU2BY7dr557TpP9ToPxJ70TKP7L/UxAWKx6vUMnKHVLQNyT29Efi
F7cUuHhHPjkzjWG/FJg4iAcllzEclgIj809nDAQMc1Lgj/Xhx/JYf9wU8BQb
Pr7JJn90CjzThzSYh7PxpSkYPKrnAX8Xyvf5//VvGDXTkdUvTMHEK+meIzQp
Xiubj/TLp/6fmD1TmoLtPZ/kzdWl+G0KRi279yX/CNuPatl8ir5vfH+bza8u
BckrrzpOmMNwQwpck8PtNc4y3JiChEEPV//ox3BLCoJmt0tGUn5aewqsAj/v
yV7L5tOZgtSTIVadfSj/iIuai0/G5d9g7RW4mDNUiXc1lmFFLka/6qF2XZnR
U5mL3MNlL3poU3yYi8/dUY0PDzH+0OCietqp97wNFC/mYnnI7DxtigfpcnHF
tDb27xLyH3GhPGhVRPdZxk+mXOxNO7dedwf5U7nwTr6heWswwzZcHP34pG2i
P8WXZPMx6NXPyI2Vu3Eh2Dt8+715ZP9zYVHldXgY5YuHcVEAF93dZC9zuBjh
2m1QeIHu/1xsPbX/csEWuv9xMbxlzOxNJaw/KRc7FtkO7JPCcD4X4WvbSpRV
WX+FXEzbcbTlq4Duf1xUaReFa9B8SrnQ+Kp9cK2U5J+L6eb9g12/kfxzMbg8
wbvjE53/svmFffPteEf2Pxe24a3X7BbS+c9Fxa/lm3bVs/m2cLFifvGLBZRf
3s7F4t4/J2pW0f2Pi9535NqXhVD+aCpePZYE5BWQ/KeiY1LcAudWkv9UxO68
XyIQs/6UU/FxzRM5580UH0vF9kvj3wRQPq1GKvaXlB4MIX+2ViqwsuNSaRrD
uqnYu/SmRqg3s4eQiuknb3ypmcz0l2kq5DXFu5q66f6Xiqo9TycE96X7Xypq
+jxsUO5D+YipePnIaUNrPdE/FUntHvHylB/olwrLiIlPGk4x/gpLhddniFZR
PignFaue+g2oo/sDNxURN1teHC4nf1wqFAQdazbRexOpbL82b7LJJf2RnwrH
t5GXlEQk/6nI/PK74MgGkv9U3Mg0er/Ll+Q/FWq+8zp39mL+tgrZfisVPztR
wvxt1bL2b6dGZfdkuC4V6etu/swtY/GihlQcGnBtevIu1r4xFfM3SLjKfKY/
WlKxefRpJb9/bH7tqWh7U9rf3ZuVd6aCs1w1U16Z3vOkQb++bOS6L2z+Cml4
vku719oBFA9Lw6bkzL4zc8j+S0NHbV3IkR2sf9U0pK2doRURSed/GkpHthr/
/s3KtdKwMCtS/FSZ7bduGs5rimZI35P/PA3CihkzL7mT/ZcGl2vTfbWPkf8v
De++ZLf2pfwwmzSM+xAt9DEm+U/DwLqJ79eQfLqloTzvaq2ZA+MHvzSMHfGv
Tt+H/H9p+Jp/QuFjJsXf09Ba2+nsaE7yn4Yqc8+J5lyS/zSEH/1kLzBgWJqG
4rlTufVdZP+n4XC/SsMxlE9bmIbZCQlXv5ZRvCoN8p+0A78Ukf0n2z/7UXk/
yJ9YkYZPfwesnQi2P9VpSM6IVFk+mOG6NJhth0LzcYYb0nCn2SOx3ZryGdOw
M+PrRf/fDLekIWzW3LN+HIp3pOGv9TvrzBy2n51puL3w4IOPFkT/dHzvYbCs
H8VbFNLh/V7rl8llhhXTcWJ+H68PFP9QToec+hEddROKj6TjwO8dez4tZvU1
0tE7YpPCmyKy/9LhNOfYb+WdrL5uOspfp3l1TiP6p+PibdXZ656x9ZmmI6rP
tIv1eqT/0+Hom/lA9Jjtp006PlT02DJ5P9E/HW0D215eJPq6pcMgPstsyWfy
/6Zjl/VEm8wSuv+lg1fnl7qH3iNw0rHixMsXj8ke5qYjOfPDj/kOdP9Lx9Hp
4fWPD9D9Lx27HVqyr1H+Un46UobqLu8uI/2fDpu+H3LPz6D7Xzpiy9YEumsw
/Veajv2T/yi0GZP/Jx0DhmlajKZ86Op0WK2ecWnUadL/6XB17LpivJH0fzpu
1s0fFupO/j/Zfkye8rh6Aun/dGxvu/qSa0z2fzo+DuwOQTjZ/+l4t8fRMaOQ
7n8ZWOn2NHZrJtE/AzOGGajsjqL7XwY2X9xu9Ga84X9YOQP6Y83rdpC+U81A
3rxFdgdf0/0vA51dU0ySz5L/JwNByiN9LAPI/yNrfzB3qjfFm5GBDyUj9AoW
kfxnYID9adXl50n+M6C3fLvaYC7d/zKw59/THmvVKL6WgX6F5Qbb+Ay7ZWC6
acibANLvfhmw+jr6ZwHJU1gGulXSAh/X0Hu1DFzfpee5/Bzpf9n6PfTi7sux
+rwMNOZonvYcRfKfAZuH833fpZL/NwPJHk+219L7v8IM/OtrVe9/i+z/DFxp
vflx/SuS/wyYCVS9XrmS/ycDgaMW63VuI/9PBkYeWffyOr13qsuA/7/9P1vq
if4ZmDvw6qHTFUT/DMwqiXT7Q/mdLRn4ols161cT+X8zMHN6c68VZI90ZiDs
hr2G/R+Kf2fi1LVr93wyWblCJuY5Hj+uuoz1p5iJ57YPzr71YfysnAn3pvfn
bek+oZqJC8eaJ3SRf0ojExHHIt/8zx+slQlDI73dqpS/o5uJb2vvvPiWQu9t
MuEmmO+kQ/aFaSaGlt14mzGb4omZOGLq0uGux8ptMnEgI8KonPzrDplINAzd
K2kj/Z+J4kcmneMeUr5NJjYc7vK6sp7JW1gmkq4OmRW3it6vZEJTb+TRlDI2
H24mIp2WHP13kbXnZeK2+viarn9k/2XipLFL/6UzSf4zMerKovDOd6T/MzF3
xsmTejeI/pmobRaP0rVn/FSaiaJlB45696P3UJmoK54zcRzdT6szUaCzSS1j
keF/uC4TT7t6W3vSe6+GTOz89eBXqTzlt2Qic+Abf88EJm8tsvUZLZi2x4ny
fWTzn1g8ZvoD0v+ZuKwu/K39k/R/Fs7wqnq+cmRYIQt1kWOy3meR/Gchdkb+
CvFVhpWzUFBpPVP1NcOqWVipVT/A4xed/1mokpz+MCSI9H8WRua5V/1YRed/
FnpPflirIiH/Txay5R+dcxaS/Gch/++W91eaSP6zMChNpe/dW3T+Z0HziUqc
C703dsjCwOeenkuvkP7Pwnl5/ysrEsn+y0K13BfFV+/J/svC1LZlWm++k/2X
hS+TFwnkvpL8Z6Ft2OD0Z/TelZeFQK/rpndyyf7LwmJO65zwZ/TeIAutwfNr
qqZQ/C8LSnK+m8voPC7OgprYUTpyNsOlWXjryU842kH5C1kY4DG0ZMcsVl6d
hYmWfpcOCdl4dVko13KWnu/PcEMWuPWDBGbalN+QhU3FGmnfDQz/wy1ZWKuq
PCuklu5/WbB9NKxjXQwr78zCvUVvlZU4DMtlI/P56H5Ff0j/Z6PP5VnbSzdR
Pkw2DAbfyozZxfZLORuXoxzb2sn/pJoNr8NehpLBbP4a2Zi+5ezLjQvo/p+N
0gtNvUcQ/+lmQ+mm8pAQK7r/ZyOv1+n76Vw2H9NsTD12mDuO3n9YZEP1XUn2
UluifzbeTL5kt/cV6f9sDOgzev5FJ9L/2ZA6m+SB3mP6ZaP/ciMdK3OifzYM
m0breXiQ/ZeNdwG1A27Fkv8/G/t3nVruMIbO/2zY+24fx3lL+j8bHwaflNtK
8eH8bNzt2mn0nuLLhdkoNL629jG9nyrOhtmZspq/k+n+l43m+1xJJeUnV2Qj
YXC/cdKd5P+TjTcyZWzbZMpnyoay8o8iqRLDDdk41NXHfDvlUzdmo2D6tYv/
i0+0ZIN/Ju+r5zeK/2RjUKT5xssjSP9no2jun92NZM/I8aB2L0JnTyzDvXnY
d7Xl6lHK71DgYcpa7WlHJzI8kAcd6bPH7z0pX4SHB8vXzEr/x/ZjOA/xSeKY
zCkMK/NwITdePvo845exPLgM3fbXr5PiBzwcre/1WIXWp85DhUuXekgexRN4
qOvXVDk6heGZPAzbUVviQ/5sLR4mKTm1rrdj5To8XGr3WDWS7HldHgprVvql
P2Pl+jxc4/V6WkLxMfCwOiRlzdPlrNyYB+8ou6YvFC815SEkRJ075xA7D8x4
OCDUnmnTROcTD3urM67wHRm24kF6auu983zyV8j256anxi96v2HHg9/lhyHJ
amS/8nBsuJyFAuXfOPGwsjdmHeeQPuNBvvrmm/GHWf9ePNwruj7dqBedbzy0
3bwzUOssO7+CeIhzcno+OIDhMB6E8V4be9kwHMWDw+Znreo0fw4PJY36006e
YOWJPLzqof74RCqdhzwsiR7c0zqX4QweIg71FF+5z85THg935HzcI8kfIORh
tpv7y/RzrL6Uh1vaXwvUgth8d/JQOrXC7CDl4+fzcHzymWelMWx/9sv4L79T
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
meL/APWWjC8=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
mvt0OtHfEw729+5Xv6HzYyOm7Da2372Wfa+5Ed943We2+dF5shEaaxN+3M5j
9V02wn2vd8zE3XS+bETO+ZQEVX/WXtFGmI8Oa1ogz8ZTtRETU3V3Lr5I89+I
rd49898a0/y94PNgzvaDfxg/aHph35qPf/UekDzwQntRh+Oba2x9XbxwfryS
weKptP5eOLvUY2l9FaNfkReiGq6sqfhO8toLw7ZovF0+iuFmL/Sz5gyM6c+w
nDeW/fvHfXqFYU1vhA0pf8ZLZRjeuO7fe/GZh9S/N571eh60R4f698aDyCtB
yiLGX0XeaFw82Pc+8WuVN+QnRx9x3sS+b/bGh9bGw+9HkfzfhItvVpV1qbHv
NTchxPbfr1ch1P8m7G6ZHrTejZW7bMKNH14n3xxj5ZxNOBEv0l1xlvF70Sb4
n1Fb5v2A5r8JUVPkNIfH0/w3wXC68q+coTT/zVC67rAl0ZPmvxnvRuf3dn/L
xofNyKwZ+XPiGkYfl80IXzPaffFSOl824+PE05Ov6jD+LNqMV3M+VG3tYrhq
MxR07NwFN4j+m+FS/OjX+K9Efx8obHxQmNFC8s8Hr36rlbanEv/7YNHFw9cX
rCH564N460O61S7Uvw/2fLTZ9FWLja/IBxbtz0Z8mcb4p8oHfIvTLiERJH98
ELbg0r2V3tS/Lyovzg3JzqX95wsl21+32yeQ/PXFpNyHct/XMH528YXmRTPd
oQuJ/32xKGfdshOexP++aN9WMHrEVJK/vghevfliqwb7vtkXKXOGbK5eQPJ3
Cy6FlrxzuUX7bwuGPZcLDf5N/W+Bmt8JxeQC6n8Lpj0Y+33KT5K/WxDy5bn+
Uzda/y0oND/054gKyd8taL4wZvurt2x9mrdA6NP32F8p6W9+8PsiMjnUwPhT
0w/LbOS6s/yJ/n44cWG9acdlM9a/H36dzFfvuY34zw9lA3O23cwi/vMDP3pk
augVkr9+2Lg6ynfAF6YPNfvhiu2kdcm9SX/yx+fYYb5aUQxr+iPmscWZqBji
f39Y7xu66/IEVu7ij9+d/ob5g0k/9Mc87qjsRy1M/yvyx0Cx1YaUP6y/Kn/U
i7uCBW/Y+Jv9UXc+9YHjLYblAtBYGZLl+IHNXyUAzWHKtyY9JHkUgMrRMb9D
qxnWC8Dzzo7uez1JPwjAfo/a4N2+DNsGoMv21MkjpD+4BODklg83a54zHBAA
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
pP9lQWkad4EXxX/qsvD7SPXdrgS2vxpk7RU0LsxSI/0vCxuH94v2P0z7Pwuv
5Et6uz2h/Z8FWLRk+5xj+7U7C39fnTB9L0f5D9mI68oJVQtk9RWzsarN10Bg
SPs/G/HN3Gzdd2w8GtmoVUw0CvlF+arZaIsSj9J9TfI/G62iwimtPhQvysbs
Pdtzo1PI/5+N6YemyA2xofhJNqzszApGxjB+sMyG3ojz/kcoHm2bjb2L/iar
7jT7H3bMhrqKjff6dMZvLtnYOntMuF9Phr1l7b+5VXa6lOJN2ejXe4z2xyDS
/7KR63Oo+4sBxR+zYXvKYwV3B+l/2Vjza9C6oT0pHpONUbsC06acZuOXZkNc
U3J91QPS/7Pxs2bjt9CP7PuybFhcrp+8ZSCd/9kYlLtux8sTrLwyG8edzsx2
o/uRVbLx7z+MvbR+tdkwPTj1od8Mimdn49ekz6tnmTPckI3Q3eHR+ylfvjkb
+17GvbpF+ZRt2Vi558dv+6Xk/8mG94Zj7xQMGe7Oxue80ccyiyn+mQPddt7C
BS9YuWIOzp97N13zDcUDc/Dj4AWrv58Y/2rkoFhz4trjFN/WzMHQdUn9Sx6w
cu0caCZdihhO/KKXg0MRrn59dpL8zwHHtaVwMJ3nyIFLPaewP533ljkYraG0
Rusm5ZPl4OZb0z16f1m5Yw6WSM/Z3HlI8Z8cDKxbtFA5lPy/OVDXf3FtXiud
/zlQW/x+9VQtxu8ROZCzKd1VsILxOycHKnaZy0y/0/mfA5tzqcrmf8n/n4O9
ymlSOcoPlObgmLnL7d2Uz1aUg+X9RscJp7D1LJONZ+pcbtBCon8OBnzyylz1
ifFfZQ4enFEMnPSd7kPlwKfJxGP9JIZrc9BY9l7p0EfKZ8mB7+sXhnFhTJ42
5MDb6MLjFZQv3JyDBfpPeyjlsvyVthw4q+lU/bpk9j/cmYOnLzbK1XSw9rtz
0HvtDK4SxVvlcjHJw3X+U7o/oJiLpi9dc8T7GFbJhULR/mui+wxr5MLbfW+v
vSKGNXPh8yHrhIjPsHYuXiYNy77oxrBeLuoW9udPbyL5n4vtG68NuHaP5H8u
uvoVdmdHk/8nV2a/reH9pnxr21zknTCT60f5CY65COjd0KStTOd/LvafyXuh
U0j6fy5u308evs2E/L+5eHvGX2cn5a9E5OLO8vHrW70o/zYXhl2qLVsdWfvp
uUgu81CYdJnsv1xss7QynkfxLWkuIl7M9ZgwhfITc3FwVukwD0NWvywXpWvz
4gbWMlyRC9cZb0TWE4j+uYC0fdlmZaJ/LvwXbL2V+Ivon4vFd83q8jdSPDsX
A/6+/DOhna1HQy5mHjzqMYPi0825CPr7YLPnWYbbcvHc48eakQNY/c5czBv1
VX8D2bfduVg2Z7RAw5T8f3lImcgJjx1O+n8eNPWnLDk5hPIh8jD449DkwmzS
/2XfJ6sW3xpG9l8e0r14P068Ivs/D67PXJftofsienmo3rfLbdFYon8ePvmn
nnexIf9vHrLLfOWaDrLxW+ZBtK79ZEgo5ZPkwXOPnmC+Efn/8/ArfpniwNlE
/zxsLdvA05xF/t88JM2zDGyneHlAHtx6LT7mdZDOf1n9BeU3Eun+AycPmW5R
5Y5C8v/m4YLmr6VzL9L5nweHPgXZ7Z60//Owe3+vAWs30/7Pw709ef43SB6X
5aFwX9daawnla+Zh0I67bVruFP/Lw6EFscPUKd+iKg/3NYrKpJS/XJuHj3bb
5rdzKZ8nD3Wu1cN1u8j+y8MTm8k7i7vJ/5uH3KedkyKbSP7nIa6kPe/bL7L/
8mCwWG67TGP7H+7Ow6vBRywKNOj+Hxd63y4+DvrNyntx0dhbfcm3//xBXGxo
Un817RCjd38ubqnuTlF7Qf4hLi66Fd+O2MawOhc1X+Vnvab7SxpcHJ6qZLon
gOGRXKRV7hxb0IPyS7hYtGvMtU0rWX9aXIzv4ymtzmXtaXNx22PjkpPTGNbh
QuTQq+fEq8RfXGxPW3Gw1oZhAy66xnjP7fZg/RlycfbXsOt/jzBsxIX/GYX2
TTzSP7hQlxRfekjxMQsuwqrXn49PJX2UC+9J04+XUv62NRf71s71G3yA9FMu
to7ZYbWuhn3vwIUcb5FSkRPxKxeW9lm+/bMZXsfFoPuH7wsoH9+Fi/UDpf36
bmflHrL1i9o+eDDlW3hzIV0wI+OwJ+vPVzbfwbm95haSfstFopP7q5N0PyaE
iyTBk3NWapTvwMWqew6vNr1m5TFceIVvjJ7nS/FPLqws3vQwpfyIZC4mPZka
0EXnaToXJzek6L8xZDibi5KfZ8LVprDzk8tFyxf3wo+n2Xku5OLt9n0Zi8wo
Xs5F9pz3I6WEC7mInRMif4Xit0VchEcPXCv9wXAJF/dnbH+2me7nlXER2ZIS
4R7Pysu5GBm2fv5k0h8quHi6wLTVgOLjx7h4Zbnqt1wF5VvI+KX9seEEio+f
5SJQlGXybweLx1VxsWvZy3/me5l+cJkLc5stoYPsKB7HxYeyHbH7LVj7N2X8
P+jMbaPpZJ9z8YlvObtFn61vPReOEaemlzuTvsZF/Ui1nQfJHmnkYvL6+K97
yR5p5iKqevDYfLpP1sqF8omO7nMdjP5tMn5TepPVEcL4pUPWv6PD4aiFJN+5
4Nc6ihpczf6Hu7g4FNCzfMVUsvdk/KLX/nPDQaYv/JbRN/uE4Qx/pi/I8bDy
bLHT3+ns+148FMVKhoLybxV50D0WMcDOnPXXnwc1tYFnlcl/qMKDyzC/lVNI
fqvz8DNv5LzHHRQv4kH1eOHrfbasfCQPY0r85YcsZViThxxl+2cRpP9r8RAY
IVDK66TzhIdtzhvf3xUzrCNrP2nC6AqKZ+rxYPf8+tw/l9h6G/Awv+KhUQq9
d2HIQ4brCD/3WYw+RjyM1Hv7PYbuR4OHQ1HXsnOl7HsLHmJM7WedJX+LJQ+r
1e2nrnFi9LfmYd6ZG5OMv5B/igfLI9sXcug+hAMPUXN5y+WHUb4CD5vi+l//
/IThdTz8ulW1wpL8MS48rCgpOlCswrAHD5NrFMLGDWH86M3D7a8TyxIjWLkv
D4Uc4cpTDpRPLxvfhUl75j2i/c+D76sC8WSafwQPXRn9dNP6Mhwjo5eyQu++
FA/l8HDtyNQF9ToMJ/NgLyo/9XoQ2cM8lFY+jX7rx/gxm4fztvpmiwspPsLD
DIOFSt8o31fIw6juO/LvZpG+xENLWGmknBajdyEPfrqjY0L70n1lHoxnDt96
sY2Vl/BgaG1/q18N2VM8pG5pXnWb8uPLeZiVNC9rfCbDFTwMt4l9X/6S4WM8
NNqLRqx7SPYWD+t2mA59ZsrwWR64ZbPkQPcBq2T85fp6aOVhNv/LPAx0u6Vh
M4zOYx7SMxKSepA9dJMHt7a+H+bZkH3Og1PD2qTLVoz+9Txo/BkbZPSe9j8P
DTPWDVExYriRh++fw6XLlen85iFsYLfxAMo3a+VhZ0YFL8uH4jk8/MXI+Wp7
GP07eHh+MvecaxbdZ+MhKKn7csx+xi9dPHSmhjvPiCR/Hw8+f00ebLvG+OU3
Dz20LuoIblP+Dx9mdr/TzPLZfHrxcXFoxsO5xmx8inwsTDbKdyX/d38+uIMO
DX37ns5/PsbHSuPyYtn6qvPRR3/CCqu75C/iw2pXSJ9NpM+O5MNcfOX8PbI3
NPnwLRMeeLWI8YMWHyff/zr5/S7Fk2Xl3YMlm8m/pcPHuFMNGa+2sv70+Gi6
/WWQGt1fM+BjlfmdcZVpdP7zMVZn5q+dKxh9jfh4J3/twHPK5wUf+ivjQtvz
WLkFH0fHLZWWjaV4BB+TSp90Vrxj87XmI2ObT/CVEjr/+XC7J3I66sjWy0FW
f+O6PgZ039uRj35z9uQ9If/mOj5S/zWVfjKm9wRk7Xc36moqMezBx+Camm3x
lK/kzYfi0MsTPvZg5b58RF0V9txA93ED+AjY+mtRqzHtfz5aDcZm5JO/OoKP
l9EZ+ZemMvrH8JEf5aBaeILu3/Chvbmzas98Vj+Zj4byZwrmpygfhg8743Oq
d+l+SzYffTl5f8flkX0so2/hJ86PataekA+jiM8fqpUpX4aPqvGGVzW/MFzI
R+arhDzRa8afRXwox914rjWB8XMJH1M+paYGchk/l/Eh/8m9ZNoW9n25rL9j
U5cuIn2jgo8U+5kXh0hY/8f4yBnqlfuX5H0lH3Ovnr5iRfGps3xcTlzm3LGK
4u98qMd7KP2Vo/3Ph8+SW3YZ5I+s5cO+osFIh+zVmzL+GyFffaqN7DM+WiYv
SPP4ZPY/XM/HMoNdr+eQf6qBj973h1nJtu3/cCMf3db6Xb0pn7iZj/fdBp/2
ObL6rTL+DX5a/oTka5uMX97a/TxsROe/DBsNVVuoxvi7kw+Hle9+u05k5V18
NEb9XbKL8m27Zfy4s9jFg+6j/pbNr2SAjf5/738I4HOhb3XgXtL/BeBURW9M
p/trigLMrNNUn5lI+1+A9zHrVbxPsvZUBLDREZettSX9X4DLK4Y5NNwg/V+A
3F41XfvWsPGNFGDyIwv3veqUPyBAXsGDkJR2th5aAsTnrL5nc4XyCQRoWOv4
uR/FO3UE+OtR2H1uDun/Agx+a1D4LJeVGwiwprp5e6EX5RsJ0H18ec3MYPa9
kQDf7b28O7LJ/yBAO2+sqTLZmxYCLLj5aUbravJHClCct2n1I8qPsRZgqdeR
NcE0PlsBzPgrffd7MOwgm99P/+3KyuSvEOCSfMxEf6q/TgDfyh0+t84zersI
4J64XcQfSvq/AMduGVoJFpM/Q4B/NgPFjTvZ+voKcOfo+I7OyXSfRoATi5qC
PFwYfUIECL3pHHJsOdm7AkyP2jssnd7vihFArfjBiL6U78sR4Mksk9sRx1l7
yQJ0Hf8+7wLlz6UL0LPq3LX6WQxny/jh1eJ5587TfR3Z+j2w+dRaQ/tfgOVB
Cd1uxmz/SgVYt8KvVzrlKxQK8Ltwuua/Q6T/C5A0bHudbxCrXyLAn8Ck9H10
H7BM9r1+2RjfT2x+5QIMU3au2itH94EF+PHTwbA7lo3vmABrF842v2VN8VbZ
elS4rtr0j63/WQFOrmxqViF9ukqAPhd7HDeheM5lAY5WrBnTeJjRp1aAkNtb
Z3QFsv18U4CaF9+urZ5G/jkBeHvCHGbnM1wvQL9nbo+/LmT0bBDg+azttw0+
sPE0CvDqYdv9qlOk/wuwY/jpu/vInmsVIPrnjt6lZB+0CTBUotLfj+5jdQiw
7Ylvfjbtt04BTBTqn1fvZv11CbBCtTtt9UCK9wqQOPGZ0qM1DP8W4PT3yvEr
zOj+jxD1r9tn3yZ7vZcQob7D1j0k/4aiEPNPCm6PmkD7XwithAHBaq10/gux
fOrTDW50XqoLEfA7RcdjIeMPDSGCn2iqeD1j5SOFOKjZung43W/SFCK6e+rB
m4sZ1hJi7ei9z9ZkMqwthPzorU2v6f6TjhAL3tgMu0P+aj0hFh8/sWSWBsMG
QlicWf9Bx4P1ZyjEKumcnp703piREFxXp4b31XR/VwjHeRePTaLz0UKIWSsj
PN6aMn61FKJYXff4EnpfzFqI3c9WP3Gi+zW2QvBGL7rVuIX0fyHsbmdft+vP
xu8ohHFatal8KJ3/QrzqIeVUTKb4lRCa8jYzTvRl4/MQYm9BTceJIrL/hTjp
PTBgrBnjV1/Z94K3i3PiKL4pROG3sWein5n9D4cIsezFwGvJZyjfTYgn/R8K
dSk/M0aIW88W/LDUpPinjL5bWud91GTlyUKYz+o+WerN7iemCxHzffqLSht2
3zBbiLoBalPzz7D+uEIcnfbl2+Yc0v9l/YXFj1pC/kmpEIcP67fkk35eKKuv
Wi948p//XAjbuB0//DhsvUqESPkjWjxiBu1/IQpSjm2peMNwuRCbfRbqO9P9
6Qohyv8N6+kfz8qPCZH0e1fB9UEUb5PR121B0uDJDJ8Voof9PYeeIyn+JsSI
JGsNTxtWflkI/grN1SB7rlaItvbQImXyR9yU8bNpp7c/vXdSJxuvqnVdmxfj
l3ohcmaYKauconidEDffeo3YtJzhRiFqxQcsDr9g+k6zjD9i+4uiqxl/tQrh
OXlX/zs9GG4TIvXR7/GHhpL+L0SJtUJ6ML2n0imE2v5vknf92Hi6ZPtzzeVb
VdmU7yXECc9Cv68/2Xr/FqL/05naoPe65EQQ3RtadZ7yXXqJUCG17NtSQPnA
IrhMNNVrtmb811+GB8hNjZOj/CAREjh1XN5Rxk/qImxW7CPX7wvjJw0RTPPy
+zvRfdyRIgiyl/3Kp/d6NEV4WR2+9U43w1oi+H6c/XFaC/NPaIugk1G3fuxs
Ov9FOHrHsMeN3pRfJkKLiglHJZjOfxFi8nvePrGNzn8RLhzalWf2wex/2EiE
uCl/AhXJ3oQIA4d2fF78mo3fQgT5iv1rTeh+iqUImkeXaqaS/WEtQtOhwbxY
ygewFWF6nNbHl6NYuYMIC2pE1nMo3ucoQuKn6eWerXT+i/D7ys0ldaSfuIig
Fl8eep/0Hw8R1ncZe28if6u3COG9bXtMo3xNXxF8lnLC1chfGiDCo+KqzruD
6PwX4W3Zaj/PPgxHiGA89UNOKb1HFSOCVtTBzj+edP9JBOujA4u3q5P+L0Lm
zolPY/NI/xfBTE79gK8zay9bBEXNl74Ceo+TK8Lant9SHD7S+S+CZa7T+5oA
0v9F+DrhfdbXU+T/k9GjdcH1Q3SfqkhWHtKiIzKh81+Es62/lidRfkiZCD+q
tbyeHGfjKRdhuKhE6esX8q/L6Hfacf14J9L/Rdg76N2wyxq0/0X49XfXm6rZ
bDxnRXg6M1M/kt4TqBLh1io1UWIX7X8Rng8dElFE+US1IhT5FP4a9JL2vwhR
GVYfAuspP1uEVZMWPL9ynfa/CPGS+Q096f2CBhHGyo04F5vL9nOjCM0Flrb8
/97nEGHLUbec+XT+tIqQNbe0xzNnsv9F4PU/1vGM/AkdIuz8Mj2wkPw5nSKY
ZJr/uafK6NMlgtU4r1w50h+7RTivJ3eilxXjn98ifN9zru+A/+7/ijFq1GvO
WHr/opcYj4dcrI5YR/mAYqQmvPJ+9cTsf7i/GG1Op3Pt1RlWEaOi4VjAqHK2
f9XF+J1zYNHJRvL/iTHJXv/sg//8/2L8OF2zNrKN9H8xetyrtbWm+9ZaYmSU
1N9qp/cttMU4regw73UKWw8dMeR2LzS90EDvMYhx4uFbh4e1jB8MxNh5nO+5
m977NBTj+lH5Py/t2foaieGtGXAmIJTiz2Is/lcx7tMqOv/FePhn2693Myke
LYazy4mX1hfZeKzFSNprpe5M7yHailHfvOWi1iSGHcTw0HmpdWYg2f9i7Dm6
9slAd4bXycZfbaDUk943chFDf5vc0CR6D85DjBF9rkZKzEn/F0NXM2p3Jb2f
7CtGVk8LtTEBtP/FuPMn9elmut8XIobZ5U8FVp20/8W48c32S7I/wzFiSGdc
F80m+44jxsvX9a+lXgwni6HxJHJUbibdh5LRb9es0QlhZP+LoaN9cZDdaLof
IYbi/C3/bgxgWChGteW1OxfmU76kGBGTM6Y+A6tfKFufl89/TaL8zCIx4p2O
Lo0kf0mJbD3s12Y4kf+jTIypCvvFG7JJ/xdj9zileD890v/F4M5+8yZgHcPH
xBgS5ee+m/KDKsW4MOPV+9XU3lkxyqtrhJcmUPxNjNJny60r6P2ay2KEhXKf
H6L3hGvF+CxJUezRytq7KUZU+91Y3QbKzxBDac6yk1x677hejPbEjW+E9B5Z
gxhWF2KG2pO+0ijG4J3vUvwaWX/NsvUu3TD8F70X1CqG65g+ciYkj9rEsN7e
y/rkcCY/OmT0eHqkOJvu23WKMXrXrXuWsXT+i/HILOl4TgJrv1uMxovKO3kr
Wfu/ZfyclS7UraT8bwn8zsY+6HmW8VMvCbYUXXuN/RQPluBAa+GbJRRv7S+B
RevPcMyl+0ESLB1qPCad7meoS1Ds6nfvDt1H05DA2HzvWhWSDyMl0BnwXOu6
gN1v05Tg4fArOuFlDGtJ8Lbr1Lqdt9n7GtoSTAnccPM7vX+rI4FJ5PAt0/cy
rCdBRPnJrFnh7HsDCSbfcbmYH8f6M5RgV2TsmptjGTaS9Tdn3eyN9F4KJNi4
ton7fCed/xLs/xpv/f09nf8S6A6bE5h+hNW3luDYjfWnHNcz/cRW1j8n+vWF
GlbuIIGzeczYm6MYdpQgudY3Z3Eb+36dbDw1aZlaygy7SDDhvZr+B3c2fg8J
qk68vPoxmunf3hJcirT/Ooj0b18JMsznlJsW0/0GCdovKp4yf8P6C5HAYPqw
mtSbDEdI8GXeCcM1M0j/l+DH8d0BBdsp/0kCxb59l3ufYPRKlkBy9Oav61qU
DyVBT0s3henOrDxbgrM6O04eJfuYK4HyoDRp8AzGH0IJYpUWjHH9QvclJBjy
o63qJeVbFEpwO2ubyTA+3Z+U4NuRRXua97L+SiTw9lq6+rwS5VNIMD7q443N
9P5luQQXJ7n/WU35AxUSNOLV0b/v2Hock7WXOLTeluKvlRLY5eUEXO8i+1+C
u5N2Pwij+45VEiyc/tghnu7vX5bgqnnK+Ef03nOtBOY6LpaeNgzflOD0hk8a
oTS/Ogn0hgq+5u9muF6CZ3k95z77z/6X4IjVHKEc+cMaJXD5EMg7vYzytyUw
MjYfffAZw60S9PC06zhI8Y42CQYcyzxWOZXsfwkOfxy/dm0/8v9JsHvR5O8z
LpL/T4KKwT/uNLmT/S+B9tXH81TJX/lbgsLBfTpbTjL6yUkReOnC29HmFP+T
YjqvcLumI+MXRSlqVE5qOxkw3F+K2sN9z/3zZt+rSLFe9cizjxzS/6WwUbRv
mkrv+WhI0dHPMOss5d+NlCJ5h5FS8Dg6/6UQbO2a9bo3xf+kEO8SSi3pPVlt
KZpuGE6UJ/+mjhQbW7cuuU/v4+lJsTpugJm0J1sfAykO97jg3UD5CIZSWPrH
yVv/pPi/FOuGmM9so/cgIMXUmxn3fOl9cwspvhU7rQlqYd9bSuEmSYltVmXY
WooW40/c4yPpfooUBw0c4nPGM+wgxXjf54OVhpL/T4q6jQldmyifaJ0Ue3YH
Fp7oSfq/FNl6fwx+0ntIHlJ8nqDrOdueYW8pFhvvemlpzbCvFAUVbbeMY+h+
oxRh/0yu7vzFcIgUnl7B8yX0PnWEFG+yvzQZkL8hRoo+u5wHbR9D579s/cYM
N3xF76EnS3G7/qhqFsUP06UYKmw6orCa9H8pfLOSR3pT/h1XCuXu5gNnBRT/
l+Jq0tSHXxpJ/5ficcm3WEPKryuUwvtG9ZMBpeT/k4KnK5+1dQPTh0ukSO1X
spu3hvz/UmRG63fkG5P/XwqDqYNmNZL9XiFF1JyPXvkbSf+X4tWixz+tDpD/
X4r26wUh5z3o/JetzxCH7PQz5P+XYqTf0hVe9P8QLkuxPHC5QDmGrV+tFJvm
pvFUl9P+l9HDL8UkvJTem5HxR6zB3SLKH6mXompLtmv0X7qvI0X5aOOFif0Z
bpTiwJbC3dyT9D6XFAuir83L/cz2V6tsvUdvUJPPYLhNtt4L41c7zmXnRYeM
v/VGlZ1ZRfd7pLAQu0x02sq+75LtZ/n64cPvUr6XbP/O/pVqXkj6vxQTPG+c
HG5J538+qoPejr4wcjH+D4mVlok=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
mselhmzWInswCK2FR5elFTGsH4Rv08J6H2gkfzkIY151chWVWbt1EFZ25Id8
2kzyT9Y/0aM4LZbuPwh3Mo9kcu1J/stwSXWMWiXxfxB2PF2SlhBO/lQQ/tyf
Oii/iOGiICSpfG/UPEb2RRA4M1pvrF5B8j8I567UNv8ZQPZ2EPZE5c3MS2H0
2BYEq+gd+fKDyP8LxsWPl+ySB7DxlIORNM8jMrQna9cMRn3fo80u1kx/6AfD
YEXbg76dRP/BqHJZdFErnvW3DobjzKzB4fpsfpdgWO7c3hB2je2PE4zXXnct
JrfT/QfD7aTi9YPqDPOCcf9H31XTrMmeC8aaHWMq4wsZPRUFY+HJqk/Pz5F/
FYw7ZvcqClUZrglG1Mc01WQzRu9NwTg5cPMq3hCS/8GIX5f5VnGMMdt/CIoP
jHBzWs7oXTkEp7W31ptaEf2H4JzXz3dHNRjWD4HwuNcPwTnWHyEY2xapX6/O
5rMOQeP1Vc0ByuQvhiCrQ2V4aTabnxOCZc92OHYXsP4yx/RfpVLwEH2GeSF4
Vj14t4OU4bwQyH/4YDZ7FZu/KATWI7X7DDIi+yoE7zasahBKGa4JwT63t0u9
PpK/G4Iq9L/QWs7GawvBgXcvxvysZt/LheLvbfexN6No/6EQd8+3fXyS9dcM
hdzELzY91BnWD4X+EfswD1uGEYq9QSG/dFyY/WUdioNWdxfsmU/+SihcLTeo
9ehi7ZxQ9M49OESBvueG4uSk6WOUji9i+w/FlrCUG1OPL2T7D5XRzxa18KsM
F4ViiHFKaeg49n15KM4s+Ovwr3k+238ohq0/a1ByhH3fFIoetec+OE2l/Ydi
6x/O3UqyN+XCsPfDPof+M0n/hyFtSq5HYA+y/8LgYZ96cXkW6f8wVGes9/3R
h+RfGA7WG3dVjCb9F4Ypb2NGVE0lfykMRp8+ZLumk/4PwwHnMzsVi8h+D8Na
1xLHjiDi/zDUZuoenxZA8j8MJmNEx7eaMnlRFIar5z5k84xJ/4UhOlZjW40v
6b8wLBizqk3/HsNNYXgfWdjXaTLJvzBMkp9RcfY++T/hsPyX/2kSxf+Uw7G1
0bNZ/zrtPxzDZzZc0M5g7frh0AkvHzh/P9l/4dj+ZFyLdX+GrcMRsyPRpiuL
+D8cnKvIW7GKyQtOOLZE+Fc61zF5wpX1f2Vz/etmpj95svYldod+q5I/H44b
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
NXqfnyk7f4NElHgfnDqM/Bsk4qI0VHuXD8Pmiei/66Lilwnse+tEBFaNeOu6
l2H7RHzW/vBy9ELKxyaiQ9f2ThuHYc9EeO/aufWrPPuekwjOxCK76n1svSGJ
ePA64XnpIKpvTER0/0RH9w1sv8mJcI4/3zQylrXzEnHv/Pws21o2vjQRhyoM
nQ7okH+eiHZLm/39/Jn+KEiEnuXAzj9ryf5PxJWPlio558n+T4RnxIR7y7dQ
PWMiln3ssd+xmuGqRHQajNx7VZX4PxG6rk+HdhYwfqtLxHmNNRN1qsn+T8RY
p3C3Nblk/ydC2k/5FxTJ303EwHl2XTVvif8T4dhTP1CO8utySZi+Kuxgmxmb
TyEJ/ed73vgzkOR/EgYc9ugx8inZf0kYkaNiO53qkzWT0Pqvq2sAnYdOEkLv
ve3rSPku/SSMbXOevvoE6f8k9PkTlNArjOorknDO4N49Dofdl3kSLs6u5Ywn
+8M6CYkDr7Z0BTL+s08C90VH+NFvJP9l8719Jn+/N/veMwmnNVsXD81l7Zwk
lBzZOMKBw9pDkqDjsmLl7kEMc5NQqrypIMKBfZ+chPcTB/bR3cgwLwk8fuU+
dScWn5ImQb5v5IJDZ6neJAn7DONe7DJk4xUkITZ0WFxFKOtflATTSQuGl15g
/UuTYMt11zUifVeehLlKk5wtqP6lKgmfKq/MMXZn51GThDdHqqYeO87Gr0vC
T5HZ/f/xS5PsPn55zkxoZ+O/k53XnZzT+n9Y/LctCbMrslp8Yll9V6dsvB2m
+T9iqf4lGZ89Yie9WMHGU0hGTu+bra+yyP5Lxu9NvR0NKD6lmox2n+KWf6ep
XiIZlXNetmpSPbFOMqrnm+YMHkv50mQ4W3RlWbWydoNkrBm9MOVZJPn/svFX
xJ0cakT+fzLOfrF4UzGe9bdOxuJhD/anUP2ifTJ+KHy/nilP8ZVkZFjmfnlI
+tozGVqxE/7NoPwsJxnRdmbHnuwm/Z+MvdJuuzvk33GTEf5yUFVgBMPJyeg7
/6XZzPXk/yWDJ6e8RLOO9H8yUBA8/O9nys8l43nPquFz5xH/JyNSED7f/hHl
65Lx+FPFQ9tjrL00GS2XU4f7WZH8T0Z3d+WiK1TfUJWMeY53cgf5Uzw3GftP
6W4VDiL/Lxk7t1iIH1B8uikZcwdFtVdUk/xPRi8VlLzrZuO1JUN+/PsDrg/I
/0vGT7ebUf3/914jBbP6Dhj5lvxHhRS8OLCwy4Xi9copqNZ3Gvr1Cdl/KUhd
9jj4pw3VR6Tg4hnLsERLJj90UjB4m0qgxX4mr/RTsOd1/NmWcva9QQqm2Ris
NdtE9ZUpkORI9oc+Zt+bp2B63JXYwhzy/1KwJjFf+/l6Nr59CtZV7/aIo3ik
Swoa5NcOV7Wh+E8KUma9UXKgeitOCn6NqT7Tm/LFISkweXlp1D+Q/Z+CJMVL
3VOsSf6nYJUK12l5Lsn/FMxu/D1VyZ3kfwqMfs44LlA1/g/npWDDMsfwQacY
vxek4Ih/2MHH5O8UpUCjqZeSvCfrX5oCPes3g/o7sf7lKeh1wtLcToPhqhQ4
epb2Nn1J+awUuJzorZmTysavS0GfGgOfRKr3aErBky0uNT93kf+XgqnO3O2D
L7Lx2lJQfMR4xnQea+9Mgc+nCRdPPqf8dyoefDbISPrCvldIBW+x6lF+AMPK
qZg5LtnqSRPDqqlo/qF7dL8z6f9UVMX3m2wykZ2fTiqurNE+f68vyf9UVJw+
HqDzlJ23QSoWL3twGueofiQVBbb/dl1byb43T8WXs8rbrNQpnp6KN8a+29NW
Ef+norBPn2UXD1A9XCqyVr7U+Ej1l56y8V73c/YJZJiTCqUGOa+jvRl9hKQi
58w0vYJyyr+m4pv7Qc7PVPL/UnGqzGbD8msU/0uF0UgblQd9Kf6TimV3Sn1+
W5H/l4oeZ4LbXJzI/pftb7lmcN8S0v+puDdj4rNGZfL/U9GezrnhPZLql1Jx
vUNf8wWtryoVa3e+d1xM89ekYvrJ8WlHTxH/p6LfsGDvLiOK/6Si0/d2yZWl
rP1dKjLXqF/qvEL8nwqFeREfPf/H/6mYXz4oas4lsv/SoPIKy6ckUfwnDarf
np3aFcz6K6ehn/ml0kWtpP/TMOGw4LOGPdXHpGHd1vdddrtI/qfBaa9vzD5j
8v/S8HfXyGuv6P2PQRr0l4afXNVE8j8NCc4eB9MHsfM0T8PJypCmc9OJ/9Og
Z6i7JGol8X8atpXlfD1J/rhLGgQx7h4LJrF2zzQsslRZvXorxX/ScOS9xyFl
J4r/psE5+lLGxR4U/02D+8Eo+3eGrD05DXO7LTVm3ib/X7ZeR70ToyjeI03D
E9stj7uNKT+XhrUfy2a3/C/+k4YBV9e/M77A2ovS8GKMxYaqQibvStOQXyjw
jaL+5WmocrI0XvyS7L80RNxPLqqMIPmfhkkTM7b51NP9y8bnrDkwK5ruPw0x
z/y+RoCd57s03I8p1I90YOffloYDxzwyDW8yfupMQ9v+hL/3Z9D7i3Ssj06f
7UH2rUI69EpF6lnE78rp0G36HMvLofhPOgQ756dXDKX6gHQsLltZqKvCvtdJ
R/huO/ulu6heIB2vlHdI11xi7QbpGOG+u31GC9l/6VCRO+xWMZL0fzr81s8c
YhpP/J+O+dF//425wuSNvWw9t4sWuoym/Fo6fNt/jNRaR/5fOvI7G//9ovc2
nHQ0TLrTXDWU9H86Cvwv795A8ombjqfRRdP1KD6dnI6YdGuOQTH5/7L96BU5
9KT6L2k6lpldHH6V6pHy0uG+ZordnYGk/9Nxt9F7a5+rpP/TMe5w/YNeWqT/
0zHXfejql9sp/i/bb9GQ3dNqGK5Kx6X9jt8OutD9p+PIV1V9+WyG69JxZXmW
zdMBlN9OR3aZ55CZlA97l46i7SPr9Mop35eO+D4/dUfR+6XOdAwwbvigd5zy
3xlQP7z8kuEPhhUyoNiqmpL2l+z/DBi0/W55fpLRv2oGjo6Wmz9eQvo/A+d3
Fw+eu5b8/wz89rWuG0L2gX4Gtpyaf+b3VkbvBhnIvx0fwfUk/Z+B4dOXz7ks
IP2fAZcHmtvfbyf+z8ByUfPfveeI/zPg25C24MkG4v8MLPKqTld5RPo/Awkh
WRFndSn/k4Fa+wdjh4rY+YdkINJSV28p1U9xM/BebeGtHXYU/8nA3YTHQxLp
/QsvA98wZ+f4V4y+pBmIutESY7CM6jMzwD1b8juK9HtBBrTQ49GFPcb/4aIM
3Ll/V09tCMOlGdBfeyaqjPLl5Rl4YNXaY8duNl6VbD2veerO59l4NRkIqdi3
8elBhusyYOaw51fAa6rvzMAmzzq9cf6k/zNQmRq29Crl/9pk97E8+M1yFfL/
MxC/vW3UTYqfyGXK7EN1l7Q5DCtkYl5dyMVCd/L/M9Gx0GPlIFey/zPReG2S
83HKh2tm4sz2lQF7tcn/y8Rh/8kBbatI/2fidZCKSooZ2f+ZqLkVO9LBnOR/
Jnx3f665SO95zTNRNtatgkvrt86EmsF0zc+zSP9nYtdCi7AfAyn+m4lrws0a
K6h+3TMTkkG2oziFZP9l4sDbd/P5VP8Zkgnhb6OP/ah+j5uJ4cf913TsJf7P
RKq6sUGvL2T/ZaIrKa3/n96sXZqJ3k+NVkrtGc7LRI8ffccPo3hIQSaizb69
qzpM8Z9MzL1SMv6UBcOlmSh4pOWzr5H8v0zMl7bY7aqm+8/EoUale9eL6P4z
MXXD19V7qX6pLhM+K2r2evwg/y8Ta+325U34yPC7THwwzpqfkMW+b8tEdvjr
fXOekv2XiciuoslmB8j+y0LrkM11apRvVZDhI0mT/5ffVs7CoD+/Bo6k93iq
WYjoXnxr5UO6/yxcX+smnEP5PJ0sfGwMWbDBn/K/WRC4uqtEk71pkAXPiWoS
5yK2PmTh35z7xjPovZJ5Fsy//J6xheqRrLNg/GvBHsVQ1t8+C4+fZfarl6P4
j2x9NSenTaF8tGcWFvV5efn5Icq3Z6FY2SHj7nbK/2WhpmJqXSXJe24WfhbW
7bjBYfMlZ+GUZumf1010/1nQNK7U/FzJzkeahQ9yP/z+UL4wLwsLtRuVAw+w
8QqyYCddrRerQfm/LPSK/f3+7P/kfxaOzDy03Wkw+X9ZUBvrn9+YwcarykLF
1QPPU+n9dU0W1CecuX+L3i/XZWHa++PnO8pI/2dh8mwLy1Nc0v9Z2FiDg3+p
XrtNNl715GsprcT/WWheP+qaI/GDHA9Dl4lW629kWJ6HaY5/Gv8pET3wIP11
JSCsD8OKMnyycHX9coaVeWjjG5rarmN4KA+F29foVdkyrMrD+vce/BKSD+o8
XH/i+fUS2X+aPOj3zO35LJBhLR64dtOn65J/oCP7vl+eyonv7Hx1eZjZc5ti
kpDoi4feX23GPSJ/bRYP3lGtnD+ULzLgQeljqWdCJ8MLZePHHBuzo5bqd2T7
nZuxIWcKwyY83F+Vr9Gf4gnmPExpeLY6UoPJFyseRFnXay4VUHxadh5aPp9n
vGff28rmtzUZaHKM8lU8GBz3U/Cj9+aOPKTo+Q2eHkjxax4Ev0velfZn7e48
DAlKHdE/gbV78lAd+vr6QCc2nw8PEzocSu9Hknzj4WnnvOMqz5k+DODh6OtL
DalqTF+G8OAx6EbyW6oXiuBh//CUKwpVZP/yYGGoc7v9Lvs+Xrb+U29WKp9l
OJkHTsoajiO9B0rn4fPu3Kw+Rkxf83i48bDUbdUohkU83LWb39eK6h2kPGy+
cyLv4CeGc3mwlzu+6XET5U95WPCp80GiGrMH8mX0dHiY/vdYNl4BD6sPzq4L
XsK+P8ZDXea9vA92lF/hwXA9r/6uHttfMQ+q46p/9g0nf4uHHBftU6Mt2Xld
4KFZeFJ10nbiP9l5aQ0J9VvPzv86Dw/77HCt38zOv4oH7WPzV1+nepZqHpyK
p3/ffJXkMw8+57Zena3JcC0Pf4yvvz/UQvE62Xnr5D8op3hkAw/rbE5ZZJuT
/87D4rnXWyusGG7m4WLRc7eigxTP4yH8QL1uager92zlwexTyuaIBSye18aD
nsY0vfbuef/hDhk/7AxO5Rw3+A938jD2rusGRS7DXTxMlttV82oBw3J8eI/8
2TiwnsUL5fk4YGS1zOkHm0+BD7djNSdWW7L1KPLx+Cf/tdla1q7Mx/kzTbzS
IQwP5aPv2gkPr5uw9anywVkz72x3COuvzod62h2rh0pUX8vHl87xo+t6sfPV
4qPyw7CZ5p8on8CHdsaLdUHHGNblY89wYYAZ1ffr82E8tOlo9Rd2n7P4cN08
oLk3+aMGfPSMybfoUmX3v5APk4606rEkb8DHFj+1Fv5Hhk34qDou92juI/a9
OR82P0v2TA5g9GXFR/Mp+YlnjtJ7Hz6c5b2PcZMYtuWjtrPudHQQ2at81Ezu
m9TjDcOOsvOq03E2onocFz6OJ+cbaC9n7e58LM6ZrCl/h/xZ2fkfKtu/3ZJ9
78PHhwz79rYr5N/yYVnRrn4nkeEAPgqn2SFCk/xdPpSHPf+0bSbrH8HH4SMz
1XOfUf09Hz5+fZ8f02Y4no95KmNP9XMj/pf1v53aWrqU9U/nw7p2Wu+y7ayd
x0eRw0K9bTdYfxEfT35azLtN9fVSPtQutU963Y/hXBn+bVz72Iv4n4+zc/rM
cprG2vP5eBRjHB84mOU3CvhYMX2zfcg/1n6Mj9TVp/pF3mf9i/iQzPs+zZre
BxTzsW5x7FKDDraeUj76ib2+KZ1l93OBjwePPsRUJ1L9BR9xJqETlvRi+Lqs
/YFlsU0U5eP46P3dKNifw+itmo9x+46azeFTvR0fqzRsFKImMPqt5aNMO/nn
lsFkr/OxY/ZTOZO1xv/hBj66rs4IvrSP7Dc+xiy8ePkI+dPNfNhJxL//CMme
42OT+igNZy02fisfoy77bZwpIf3Oh65qvUHBS4Y7ZOupn3xPQr/n0snHlRXW
dVfofWgXHyuX5Rk1kH0iJ8CI+/vbmteS/hcgwbKttft/9UACPJ4wpHXBSzae
ogDz3v0ZuZ7e8yoLMKD47pc5C0j/y3Crwy198r9VBaiuv/Rp20f2vboAN6PF
4svdpP8FmCB+f6jQld2XlgB57puawui+dARYMmfd7olDWLuuAHE1saq9A8i/
FKDi3hmbKxkMzxLgzQD/noOCKN4sQKu/rVxlKdMvCwUYv8p2T0sHvd8QYGh0
66mt9HshJgIoT9ll+5PqT80FsAkIuzW2hfhfAL/XR/trz6D3LgIYdA7ud1yL
+F+A3EbVSd9WU72iAMXrxfMMyN90FIBTPm5oHuVvXQQIu+a6fBTlV9wFyOjz
5eZaE4pnCDBx3OVz7vT7ID4CTOVfvHZukPF/mCPAljLR+xWU/woQIDh5q2sh
1UeECDDtjtyepR9Z/wgBFEa/85w1hepPBXhyXTSq4hfrHy9Akqu5nzzlm5IF
qF/Y31PzAhsvXYDvg+70dC6j/LgAq3Uu1XSMYOsRCTBWc0YPCz2GpQKo9V9r
uJLyt7kCLFM58GT/I/q9AAE26MpZt/qx/eYL8HrTKNul68melq331gOu0m/W
fkwAns68Obd8yL8SYO4Ne8XJ9D6hWID1fyfMzR5P/pYAk+bk7unQYO0XBFDy
O+5tQPUo5QJs3VtsFjGP9L8A5XJRFm+JXqsE2PXE7+ryC8T/AvQIOlb5xZfi
swKkTVbbcnkRw7UCBIjHPW2ZyXCdABt7Tpx3merpGmT03HJp1M7hFL+R0d+p
nB2n6b14swApty/WPJYyefZOhu+5q86cyHCrAC6nhq8bTvUhbQL89Uj/OdWP
4Q4BAu8MXX9gB6PnTgH6qnU1ftRl9N8lwP2EA08OjaT6DyHqb72vHUv1IfJC
OD5VOb9kFuWDhUh70zNnxHq2XkUhrBe90b5F7yGUhXi/2Npk212236FCuHtH
ukY8JH9RiIyHkzd//k32vxDGlrcXt0WT/yjE0urBV+Po9y20hFhiPzrnaxTp
fyHiVXK3TtI0/g/rCqE0be3U1aspvijE81ql8n7FjD5nCaG5923RxhUMGwjR
vswzvNGc9V8oW28Lr2rcNIYhRJCXvPEjCcMmQrxNbZ/SQu+fzIUYYJr8e3Qa
w1ZCjNp8V5f3mt47CHFtRk9xL3uGbYWozsib6f+N6pWEOLVpSpRXJMOOQuy1
rwiuVaT8tRCv3KLOv3zL9usuhFrwTVEN1XN4CpFlum/pTfJXfITY9fd3zEI6
L44QU7QeDQv+wL4PECJpYauc5xfyd4VwUdl6ecov1h4hxLEJtxvullH+Swhz
06UqVR7s+3ghtpVkWZ2OpniYEAKO/jx/qs9OF+JplK2zLuU/eULscem+euMD
6X8hdA3612eWULxciLOtc/sUU31DrhCmFUMK+tvT+z4hPs89/DRoIuufL8QO
xVv/NttSPkWIIfGmxT2rGT4mxLJzJSVTM6i+Uog2788dW1aQ/S8bv7f5vrHD
2fylMqzzoCF4MsMXhOBW7Kl8pEDxd9n9LlkcFbKPtV8XYsRrXwfBZqrHE+Kg
veaEKFuGq4X4Ny1i74+r9N5AiKiPU21Ha7DxaoVwsHO0vzmG2S91svNK7JDb
V8baG4To+TkoyvsW/R6CEHd0xetEGew8moWwfDi391IfiucKMTGo7/Eoqi9s
FSJ3j6TtLL2PbxPC79PG2adfMH7rkPGTlfLkv+Q/d8r41/70i94Ur+oSQrq9
xaO3IdX/i3DfaVFEMb3vkRfhbQ+tpHZ74/+wggjW3Tvw7BSjX0URkprvxpeQ
PlAWocFmSUj6dNY+VISltz47S3ZSvZAIQd/Ml3HK2PjqIsy/vWGQNdXbaYpw
9LHXFP1HDGuJ0K8yODprEeWTRMhcs2TPD3pPrSvC8cf5Kh4nKb4oQlzliMa1
2gzPEmHV/JEni0ifGIggd3x5K28jwwtFMB3xIN5Knux/EYzPLdb9sY+dp4ns
PDbWb9eg+ndzEQ7s3rS+jN7PWIngk/LkyQ6Q/hfht/XYlJWK7D5tRZgw/kTv
pC1UryzCBr1dY8wpH+4ogomCb4NGO9n/IoxUOb7RhuxrdxH6GMyrOV9M9cwi
KK21EitWkP0vgrB8YGuiDr0nE6H93J3QtxsYDpDN9+ZyY/UfJu9DRHh32XRe
SDNrjxBBR9908eER9PtoIhz843I0LoaNHy/C/vjFeW4FZP+LUK287mpZMttv
umz9F8pey9Pv1fFEuJcgXf+Zfo9PJMJ3247d/SmfKhVBq+5YT183dt65Ipy7
dfeI/AaKn4nwdE/jME2K1+WL0DblfWM6/d5cgQgVp1VPjDAg/S+CQ96pkTFU
31ckwrizisMFO4z/w8UilI7fGbZwBqPHUhl9Xh9i7qrC8AURpuXEVxsdZt+X
i/Bwo8mpBfT++7oItZt1X8VVMlwlgsVlrvLkO2y+ahHq8ws/j1hF/r8IgXcL
c+LK2fprRbhWtnbRlbsUrxOh557M70Pp9wUbRLiyNyY9ajPF72T3d/m0IncZ
w80ihDVYFWv4UTxPBO85LZO1Yln/VhEGdf374/yF7H8ZP8aLlwWRfO8QwSVZ
KXhlKOV7RXjm7LUwjfipS4QAj/kFmhQPk8vG0YXXfYdSfF8+G6+F9dxNrZQP
zMb0Ds/KaqofVMzGwcTEzY6XqD4kG1VX7j1qo99vG5qNKLce54dQvkw1G+0i
nZl/9jCsng1z5WcVcnMpf5yNadt3To24SfG/bBwo5edvVSH+z8bM3aEnXxB9
6WZDPW1sPyMFel+QjcaYBGnWDzberGzsqqn26EXvOQ1k4z1SCvem32tcmI3R
mZUfZ5nR+61sDPW7E1AzjPz/bJl93rP061uqR8hGxKljvc5QvNMqG3kXzi9Z
RO9brbNxOIdv0J/ee9lmo2nxovRIyo/bZ6PIraV/WDjZ/9kyelzbh0f61yUb
H3qWjJ9Kv2fnng2j6mfqSj6Uz5Cd7wS9Pa5U7+Ij+77Sd5btOPL/Zff3Xakk
SkD+fzbW7Tr6vl8O+f/ZMJ6yzmHaU/L/s/Gjx/Yjdx4S/2ejVTW31EmeyYt4
2XnM54ef+sy+T87GVule+Zh8iv9ly/wVA/OU6ZQfz0ZyuEvmoFji/2y0HTnc
9p7qiaTZGG8X8G3FHuL/bORe2DP4f/ZgXjY0NH8bvOoi/s+Gtf7OHYbtxP+y
+7LovtsrjdHjsWwszh3TJ4V+f7AoG5d6/eC3DGf8XZyNRRv6XFlL9YKl2cju
3fNFPdXLXMhG6oCPGxUyKf+WjYHRDptPLmL4uowek3XiKswYrpKd7wkFkwdz
GK7Oxjjn670/03uFmmzoe8d5Piik+J/sfFsLlZ3Uyf/PhqGGs/nNO2x/Ddkw
Uyl5PYJ+P7MpGxkOdoVbr7H9NmfDJlVL64Ala3+XLeN/m650+n2e1mzcOelW
YfKC8nvZWB8Y92HkUoY7svFIhfvtTyMbrzMbQy5uC5xD+cEu2fl6q29QpPe7
cmIMn/1g3WKq95UXQ13BPGD0L8oHivFk9/pRozXJ/xfj2Kq0a68l5P+LEdz+
ISLCgPhfjMw7S/6203sLVTEWO4/MnEb6Ql2MFQ1TlK0L6f2AGKrr3c/ZU3xZ
S4wlQQ0/79cw+tSRtW89dbfzJbOndMWYAf2ZX4WMXvXFmHrlQNOxB+z7WWJs
eWC0u68S5ZvFKPm86fgEet+5UIxLP+8NPEb8ATHebP2eeY9+n8FEjD2ukwYn
1lH8T4yWi6d1dhH9WokR6zFugel9ep8oRugYm2KfFnYetmIcKroXuUqN4v9i
NNT0ji7pze7DUQybqW0evyif5SLGQmebf15R7D7cxVAsuBuVM4LqWcUQHlaU
nLvG6M9HjDOdtQXxV6m+VXa+9v+ydlN+LUAMtQPm3WqVDIeI8ahH248XsWz8
CDFS3e1X3ZlM/r8YPuMl17ves/Z42X571ifv3czak8UwfA5BVCJbf7oMR+Ju
vQO9VxVjb7V1r4geDIvEmP7pRs2SX2w8qRiOUfKB0+n3KHLFKAwxfBhmQ/6/
GGVJsyecD2E4X4yT4bu8HCn/ViDG2Clyugsp335MjOdVD27t2UX1dWIkHe4K
3rGV4WIxDk94Nfc11aeVihHy+VuzgzX5/2IEmZaXfK4i/1+MbdzgIPf95P+L
kV77xjzoA/n/YoR7dEcGkL6sFmOwcqAwh34Pq0aMwJ4f9zwheqgVw8Hd8rtx
E73XEsOy/3GOZBOjpwYxfo/XmXxchfS/GCcelc9No/d4zWKYp4gDtlhRPZcY
3+4tbU2h/EyrGF7zwg960+9dtYlR/L0k500x+f9i/BrWw8iI6kE6ZfzZ+/UC
K/r9qi4x9t3+oDGjD73/lMA8U+/M0izGL/ISfLYpFzuYMawgQSvP3cxiINMH
ihLs1iodfktC76UlSL/bfL+b6lWHSvC2TTckj0/1ohKssZ3/qIFL/C9BgNEX
zUjKz2tKoDx0m84+Z4a1JLi9W/WOlpD0vwTlW4KllpWsXVcCR855g+4LVF8s
wY6mxV+6qH5tlgRnDO2rRtPvTRnIsN0gy7pxpP9l+019P6FwAL0/kWB2zY+U
RrJXTCS4qj/gwX11sv9l7Stj7TfR+yYrCUYNvGBcTr9PaS1b/9sL0zaTPWMr
Qajapl9KVF9gL4FqpVrdbPr9ckcJVq0VJsy9SvpfgiHrnH+oUTzEXTb/MrcH
rkSPnhJM7Kfq8798po8EOgH2RytyqL5Zgk05HR2mVN8cIIHfrfODm4ZTvZME
OQesnt+sY/wQIUH1r/umt6m+mSvBpcBd19MOs+/jJejm9U7yp9/3SJbgXPd5
2wCqv0yXYMDtzRfa+VQfJYF951OPWKonFkkQEnG+48pwqpeWYN+Swd2mjgzn
SmDR8fvXmiH0fkqCcIOu3sX0e+35Euy1PZrz5DHVU0mwsHHVrOBA8v8l6HXI
sKJ/T8qvS3AvrUHhwQi23mLZ+u3K/66leFSpBCrNih/n9qP8nwQHdPMnGdHv
a5VLcL+o5KhJB+t/XYJFD5c9f072VpUEE+J/i2bR79lXS1Dy73TWlECK/0mw
suRb/z70+/O1EvRYv+pkdxzF/ySYXjmDo0n2XIME/V3GTx6VT/wvgdnDs9I6
+r2FZgm+3D1TsI7er7+TIOihl08L1be0SqBxe2C/b0TfbRK4vkxU3Ee//94h
waceh2zHerDxOyXg+ziVGGqR/S+Bgt303+FUDygnxddbOVfvdjL6kJei5oR6
vaYGwwpSaP4edqWY/B1FKb67Sfo8O8Gwsuz7l/EJY/YyPFSKO8sT+16h96iq
svbrfsf1qJ5AXYpjzyPXGxVS/E+KwQlXyl6T/6QlRZ9r1cEiU8r/S9EuV/VC
35zy/1KY9BadcutH/r8UAYs5dqX0ezWzpDh9TrU7lvLlBlJ8UopN3lLBxlso
xSHtcxcb/1L+X4rqJuPADRbE/1L03V707MFReo8mRf96xfAMer9lJUWwZvOq
P5OJ/6U4XD/W5z7VJ9hKIeHO901eQfVKsvXIHf2wj+LTjlLYj+ke7JRD+X8p
gizUhBsr2Hm7S+EYGHX/ZzW9Z5KiVGfFqeKBFP+Xgl8csPoq2csc2XgOQ3ov
oN8TCZAi7O+Ony8Vqd5JiuxFr17qODMcIcW0joN9dP9X/yaFtGHFROtbbP/x
UkRMddpUyKF6aCnmpNh8bab36ulSGE/q7Zf7mPx/KTiPzN/0v8z0gUgKU7eS
S7oGFP+T4vW3w2m9HCj+J6M3a92owGTK/0kxv7HceRnVw+ZLsdO2sna4JrPv
CmT3IbTO20LxkGNSjHDxd0q2pfy/bL/1p0LOllH8T4o9Ssrfdx2k/L8UE0SL
xiUvIP6XYuXFsKKn9cT/svO+7TRx2HF2ntel0MiZP9mb7OcqKaa8mnXuVyn5
/1K43Ly2YegB4/9wjRTyAe53XnQze61WCueygN43tSj/L4XnKrVnWRaU/5eC
p9Ajok6Ofg9UNr4ww+0q/d5VsxSt9unRiXWU/5MidajWiKtdrH+rFJkcVe2J
9HvwbVLkLk55tGUsa++Qnd+ZT3+7lajeSwrxuBidExPZfrukuF3dmH07hfJ/
O5DvM2BS3AAz/B8jgZm4
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
wdjvDm3OFD/VCsE06RmmmY4k/yHoUr20aCHF2yxCkGd/fn/ALJL/EGw6+1FR
Lp997xcCj/tNH7/cJf89BAcF023cyZ/nhMDH9IHN58fkT4Wg6kjv8De5JP8h
EN90HFZxkfyrEMR6O/Se8GP0+hAIej5cUZtP6w+BDccz6tktJo9dIUi5+vbq
TDOS/+1IjRumuiic0RW2Y9hHAylvRZL/7Qj9UBW6+jiTd63tGLjxqnd1Ht0P
tqN3+4VPu01J/rdD6W/fsZMfs/k5bseKxfxMBYq3+m3HlSULhI6ttP7tcPf9
3X9BKdm/7diarnGxfg7xfzuKOvtFLPIl/m+Hdh8Hh3F8kn9Jf6eqtu1NIPnf
jlNWwUvO+JD8b8cLnVNd+tNJ/rfj0cWQkNAEQ7b+UDwOlZrP45L8h8L2yGzO
PFmS/1Coh2Yd5O9g/oZWKJIu/Xp5/zP5J6FYMVh92boG1p9FKNYOPPdo3zqG
HUNh6C5TdMuMYb9Q6Ize9Dapl/yXUHwvaez7juKTnFDc0T+2PWQv+VOhsJ6/
pPEwj9GLQ/G7xKBGzZDiKaE4F7PzvVkai5/UhyK5cHZlYzPzf9pCEaX4trW8
gNG7QiHW61d1rw+Lr0iFYWv/EYFf5jKsEIZ7mvunPl7DvlcLg6NM/7aY+oVs
/WE4ttGyr/Mzfbb+MES/7OFor9Zj6w9DR6n39BlxjO4YhpJ3JzKr9Zh/5heG
APOcIUvdGT02DC2Lh/28V8X654Qh7Lnh2VcVumz9YVDG9tO/JzNcHIbZkw6N
HRq4gK0/DA1buUtXKs5n6w+Djpv5MPkaHbb+MMTVIvrcdVp/GBw+fLx6/y/F
b8NxQGqgb2I9449CONZ5XHI4pkjxiHBYGncsXzuV7H84Ts52jbk6lu5H4ShU
f3Rck7BFOPaebX3hGk3xinDMnnlIvrSD9ecXjpLQA8t9FUj+wzHx1ZpBU/eR
/IejrM/aRaIj5P+FY/dWs582cxm9OBy8A5n33qhSfCccV+fu9DxP/mp9OF61
i259HUD3nXAkaMdoffBj9K5wLL/xJn7HRYr/R8Be8cLEylVsfgoR4Kg1Tzj7
g+JhEai65V8u84/RtSIQN+d32sx4Ov8iwH9qH5tE+msRgb/ti1su5tF9LQL9
VZQ2OK8i+xeB8RoTUk5Pp3xHBN79+Vgy5TE7TzgRyLth9P6PLMP5EdiaoC8l
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
/5eMLeMFH4Io36ibjFeNDu5bKH+KZOzqXaVRsobJr0kyIh+EhZoNpniCBEsv
OHXkOMNWyeBsrBozn+77jsnQdvkw9aYC2f9k3AgJPhF2ibX3S8YGu6elslfZ
/EKT4dxd7uXlRfUryZgcWPYu1pfsfzKWvZwmP6uC0TnJGGC5eYjHDobFyTCP
77f3rz7dz5PRsvDm7WPnyP+XrDe1zjiezsviZBzZbaur0Mr4UyaZz6LJDllj
yf9LxkytkzbmUQzXJuNqtk7V8kzK5yQjK654y4gu4r9k/QrG5RMWsXxmWzI2
5mivG+LJ4tOdyXgy4PqIjENMfrqSYXR9bcufwQx3J2PnJb79lRq6/6bgWf+P
1cUP2XgyKXh7bqWDym0mPwop2PR1lOMBym8qpcD4lvbI2CDS/xRcS6g8UnqD
ycvUFMxYIXw7eBfFS1JQYH1dGE3xDt0U1C0y/9aUS/l1Sf/vji7910T+XwqO
KL+ckRZl+B+2SMG3f0urIx8Q/1OgNMVe3ewJxZdSsHdTeND6WoY9UqClMKHe
eCzxPwVxTbXmYVtYf6Ep8LLhjlXyp/x9Cl6eW7t2fDn7PjUFuZyd+w2KKR6d
ghCpj9IlXiw+LE7Bz48T0w8coXx7ClZYHA/JmM7aF6XA38dSK8iJ0YtToLpE
tOhZPxZPLkvBAe3jTRxNNp/KFHRdXFDX/zr7vjYFxRZlW/znMlyfgh2Gew7Z
3GX9Nadg1Yfwt2VqDLel4L1O2ymOM4snd6bASrzoYEMFiyd3SeY/YtNkhVAW
L+5OQfrD2ZpHx7P2UqkIrNo4z/0C608mFfP/DJ80aDnDCqlIv1V7e7Mzm69S
KiaM5C1LdqZ6mVSsCis5Hn2W8XdqKjzcF835OZT4n4rr/Gs755I/q5uK53uu
3F92kOLHqdA07x+VRfFWk1SEzXsUpSxL+bRUfFC0mO/+iu5/qeBcCTHeN4/q
kVLRr7c7/98A1r9HKsxaOge3OlG8ORWFL3Puz9/A2oem4rWmk1HKdMq/pyJL
WU9quALDqal4pHl4fB7dNzmp+DZx+I41lM8Wp2JmR+kxoxjS/1Scf9hyfo4t
a1+UCq7qprKXJxguTkVrgM24RSrk/6ViR+HoHa8eUf4+FQ2yox9VvGDta1PR
5DZ5+sP/xXNSsTrk5vXhVuT/p+L+33aV5VQv2ZaKkszIgflm7PvOVFx8WX6g
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
kkg=
           "]]}, {
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw9XHlczN/3Dkm2hEoIRZYIIZTII0kqKaIsESqV9n1v2qd9ZprNnoQiZM8e
pRKRJaIkSxRF9hD95vf63PP1j9fTXd73nnPuPesdrS0+K116ysnJQUFO7v//
/+9fx8KWgaNNRXmmYH/A4Q51twNqSxlWRF+hfP3+DMLK2IhGnWfDLRhWgcmh
6er8a8sYVodBe7GV/CpzhjXgsHjnM7UpNF4Tz0d8OXXJgPBYmG3O3Nu2yYxh
bdjcynfVe0h4As6GaRYPW0V4EpLCkmf8saL5J6PeUfgrYRp9XxcmGyY5fo0k
PA1Hvxz8WbSW1quHQA2/joi+hGfgyoOJejEZNN9M3L0wUyvClvAsHPX6pzxw
AGF9/FCOOtt3CeHZUF30URqVRvuZg56jLnkNO0h4Lsx+jg1/rUTYAD/EWkm6
qwkbIikl9d6to7S/edi5+3WAhzthI7iMfj7O/88Shudjeq3qxiH/o+cCjKlb
9Dd3I63HGC6BZ0fa7qf2hXhSaJQ4/hTNB2w5W9wBJ4Y5wKzGX2NfmVP/RfD+
OLe28if7HmcRNh/cOONENH3fBD826q/v34PaTbDs7/rvpUtp/GIcdFsxLqee
Yc5iTNXnDckvJn6Y4s7iDYXW6QxzTFGR/NiwaTG1L8GOKR8UJ4xn++EsgUaP
WXeKv9D+zOBk9+5WuTm1m2Fqe+Td2Xr0/aWw1Vlnf5vozVmKip5FDhb7af/m
8J/WZFZznNrN4aWg0nFdkcYvw/a1EzakfaD2Zcjf2veo6USSFwt8f+lw1fog
wxwLuFqWyx/ttmLtltD0+D5MaSLDHEv8FugWj3pkydqtoJQzsPmZD8McK5zI
sFfvHUzzL0duokn7pFiafzmGrY48OWMHjbeG9kDPiwbN1G6Ne+6lgz4Z0fgV
GH3jtK3gGNF3Bfacjvt06jPRzwYxwyUtyv0Zhg3WvrPQ27uS9muD+gPKitOr
GS6xQbntvsvls2i8LSpf+1dN+0rjbbHgtmDzV3nihy3k34ie3beg8bZ4OEV6
78F54u9KvJ8pNi84yjBWInAR79ALJ6LHSoiOXLot/L6cjV+J86f2z1VaYc3G
r8Kmtncrc2sZfbEKl8z1rQK8aPwqTFwrHjByO6NHySr0n3DSsOV/37fDlrH/
zJsaaf120Ho0ISZmLa3fDh3Hf+2ZMYDWbwfxPQOfA2kkP6vhdrK3487FTP6x
GpvPXNHTyGL3J2c1ptQOeMoftpiNX42rC3psKk0wYePX4JBL0bmvZovY+DUY
McvJpNsWbPwalA/61uz21piNXwOrY0utu3cyLGePW4mpUDqwgI23h2pbv6ta
A43YeHscXLZh5jEtQzbeHv8arIdomcxl4x3A58iJlH7OYeMdMODf56XcTbPZ
eAeM1tU/nLiLrafEAV9PDTIa9mIhG78Wz/J96yZGsnashel1p9vy/rT+tdiY
csJWfzXtfy3UJXv/qTmSflmHtXduLozKYfTEOkQNvn2maD3dR+ug/i6lf+dJ
hkvW4cSwfZqffYj+6xHS+rGis5DxB+vxQTwxw38P8W89ts6wMjEdy3DJevQV
uOtsyyb53QBVjYxTS22I/xuQ6LzT1sSIxm/AV8N94zdJaPwGTIxMXKVkRPeD
IwZa5JtxvtP6HVG40XuzyiVavyOsOrjz6wRMPkocscP/Q9+cKXR/bsRhZZ+V
Y1IYPWTaNG5gV/MOA5KfjajePPWgsJPhko14MvGXfP57ot8m9PnMtUyto/Gb
8MXj38IaZTq/m9Av5ws3oonotwkv+y+wPVZK63dC29G8wYW7GdZ0QtA1i5kZ
3rQfJxyrvlSgnMD27+SEuT8MA+cTvThOsHPr1DhhwXCOE7yd1KpPqrHzVeKE
nTtuHpglZrjJCTsG5Iksm4n+m/H+w7rwyA+sXXMz1pfvMT4fTud5M5a8TYrv
LmLn2Wkz/j477b1Dj+7TzWjo/Mg19WM4ZzN4pW1qi+VY/xLZ/HJSZftF7P5o
2gw3X8GZdctXsO9vgYXF4mOT9rH7RHML7NMrowQJrD9k+MzURYHtbH6nLTB6
kPDkvjN9fwv2mXHcH61n38vZgiVbniWsjKP7ZgvWl+zS0RlF+98CQanhpwNE
T7mtMP3krbw0lOi/FdtmprcuNST6b8UekyWl/eSZvDhtRfmQ8ninOnaeOLL2
bf8W7O3BcM5WtCe+Drh1kd0nJVsx59St6a0l7Dw2bUWOYP1X11EMyznjV8+F
i81esftD0xkd/Cu9RhwxYd93xvrpbjoKJ9j8Ts7wd6/S87/G2jnOyJ5Y89q/
lX0vxxl1v3JU+7uRvDrDMvichdVHtp8mZ+TOXJqVPpfkzwWlnWe6cqtZu6YL
9L8bJPhup/27IObvGqc36ay/kwvOWmXExm4k+XbBmP5P2keeYfTNcYGPQc7I
o1HEf1l/pcCcef6MX00u8Lys79XUm/SnKzbYXknRm8qwpivCptxYVrCC+O+K
L3ej5JKCif+uGKcgaHw7mPjvCp+YPSlTVxH/XZE7Sqe9/C993xVztNQu6o9i
uMkVJ9SjH1+4Rvp5G/5NdrJSTmdYcxsmaP9Mu9qDYWyD2tcSFwsOfX8btnr+
+J5zlvTbNnR9eG64JYetN2cbmteV7jMqZfJcsg0xg/ulr2oi+d+GKKUtF7WI
HnJuWNX3yZtpK2n/bsjXNwvJU6Hvu8F56kWFMA9GXyc3bD5lW+mVS+ffDZPi
Ywc+OML4keMG6byHb4fMpPvGDSf3nld/ksDkt8kNqQde3X+cSPeXOwY8DlDe
fpDJl6Y7rDZeSB82mmG4Q2vIhkMvd5uw77tjnXTX4LGeTN447uilaXXAsZHJ
c447pqiUuySsYf1L3NHi6lrR8YH1b3LHn7rVL20MWbucB6bNMH3Tps2wpgc2
pNgt+bSJ9LkHisu6u270IPnzwIIeZnI1OrR/D1R/ir9wppnkzwO6o9yuHCf7
sMQDjWYPFo2uYv2bZN9beup9SyKd/+3o5X9394UtdP9tR4j8krY68iewHY8G
X3rsVUL373YsitCe6xZN39+OfdLm3QdPEf23I73hwrhHs8he2Y5rK+pmaQbR
/bMd2kd0l8WOJfnzhJ5tx3IlDZI/T8x+sOv+sg9MHuCJhY8u9fULZ+1Onngy
2WyKqwHJvye0tM4rBgeR/Huisqi875rftH9PbNFXvdC/neTfE93L40Z82kz2
mxfG9uJzXwUx+dT0wm+j58Gx6XT/e2Hn+3V7Q1Po/vfCjUtzXrz5nz3shY1t
abMH/yP6e6HivE3qPKJviRc+dvRL1p3M6NEkm99s2Uc3NbIfvDFfeCL/UxDj
t6Y33KZdd7jLIX3qjZWTfD7NMKH7zxt729KPvw0wYd/3xtTnyXYHBtL9542b
L9+XLBeTveQNXlVxSHc/un+94Tdu6V7V6WQ/+aB/z671PXRZu6YPDnWPcsob
SvagD6ySgi9HbmL9nXxQaPr++3YDZv9xfPDytmbLopXM3svxwfgVk192LWX3
eYkPpr6wOHEjna23yQfT0y+p1gcxLOeLaRqrX1Y/Z/tV9oVLQdmQrADSR77o
rlqz9/oShvV84auRM7Z6FNlbvph0tr76O9lLNr6wt/K9KMwjefXFuZ/73tgN
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
/GPtPA4c2tz/+igyLOWga9Hb3UfBvp/DQVngJ6dTlJ/J5+Bju5r2t/+dVw48
n3275z2LyUsxByszo4p3nSD9xcGI2RvvzAtj8lXJweGqWd8c9cmfk9HzSy9p
TB2TzzoZvf2nTKxbTPFsDqba7Kvcco7Jd4tsvR1zHLK4FO+Q0T9DU89pNOvf
ycHlFQubbzyh+F8sahNV5EWzGVaMxZXYH1Iu3Q/KsfAxv9xPk/I76rEYdHik
0v0Ouh9j8WHf1VmtwYwek2LxZ/rbTW8pfqYXi3/qacWPtzL5NYhF3NZWXmkb
xbdicexKCU9Ghv+weSzmaJUu3HGP9beJReLwOfs9Ndh8DrGIUZi7PvK9yX/Y
KRYb70fp7KJ4sVss3MrPCkY5s/6+sRi3ICS04yzxPxZvWpTS57ST/x2Lg71H
7l5XzfbHjUV/Q57CxkeMHjzZ93IKzv9tYfyQxuKS/BW/O1fpforF1heOI6dR
/iA/FtanhjZn+zD6F8XCon7nHiWKtxfHwqPz6thV9ZQfiMUav1qdTfGsf2Us
ph3WUmkzY7gmFmedy/tOGsFwXSzat0xQH0b+e1Ms+v3Qf25Uw3CLjL49bkU3
WDLcEQu5yf0SUjYS/2NxcvSU7tcZ5P/HYdDQX/1eZrP1KMbht59v0FiqT1CO
Q1zywdkW+ay/ehxqO8JnWPxhWDMOLnf3i4s62fomxSG+yDuOS/6+XhwebzBr
s1rPsEEc/pyKq8+aRP5THIb8ufZtawKTX/M4jN61+M+PIRRPiIPPqvHHtG+x
9TjE4dCqX1OKdpJ+icPb1I4nx62YvLrF4bDxpd+pWyneEge1uppDZ3oyfofG
QfHz6mHLKP7LiUPa0NU/1pUxeeHGYbPX65BNlhSPi8O9laURm9VM/sPSOPyd
tzU/2pX8kzjo6n3S7zrJ5Ddf1j9x7uD5YyleF4cDtTMrzbsYLo5DeNGP8Xkt
ZL/EIctFeLmwkeHKODxv90s42s2+XxMH687I9OGv2fmqi8OdNZpWWgEU34hD
leMI7etmDLfI9td7u90H2l+HbH159Q0RlE/ojEP1xi9dquso/xYPpRN1Jfvm
M6wYj1Hj5ruconoH5XhwPdwr1/ag8x8PfUut+p/zKD4WD15lkMPiVtY+KR5O
Mzd0He5F9kI88hZcLNqvwPhjEA807jfJraH4cTxMjBKDp29i2Dwetw22/7mt
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
mKf7QX0b1U82yejPS9YKIfuwhYvGC4sFD9Qo38vFX67agi+z2fhOLpq+XBbU
5FD8LwU/eidLP71jWDEF23P6j6pNpXhgCozr1lT/62Dzqacgsrx4xQDK32qm
QLHm8p+g/gxPSsHL2f42Q/WZ/aOXgv4dOrd1Y8n/S0HvoIe7v/ch/y8FS7bq
rJE7x+Y3T0GDtp7tDYpX2sjWJ6eouruG+J+Cu8pve6hRvs4pBQE6U/qOfk3x
nxSYTsv0nLyZ4j8p2CN3Y9AeEZPf0BRoxv7dtoXqZzkp+PC0+d05Jbr/UxCr
k+2nOZzu/xTc+Czwnptk8h+WpmDfW7M9g43I/5N9b8q7Qt0aOv8pMNl5rl+a
NvtekWx8kKvxgyI2f3EKdFXX3+77hM6/bL/qH5MrcxiulNEv12j7PS2KZ6eg
acXW3+O62PfrUlBeLbrRsoji2ymY9el9q70t6f8UrJ1YtDr4CNl/Mvqonoru
Q/HqTtl6Bq3tlvtE+j8Vvs9j7a7Fs/6KqTDuOporf5ryQanAjivuxpQ/Vk/F
3xoDO39lOv+psG105S7hMTwpFc/+dE6J70X5olRcUQ18tozy8wapWLvqx81v
F8n+S4X3EKcdW0vI/kvF583TF/0MI/svFbknlTPKJ7L+DqmYH2ZqmGFI/E9F
4uFr8m6nmPy4pWKRzq+HvUzp/KfiQkOhV/p98v9TMW//yjGGUrL/U2EZ9dxw
4kmy/1Px0yXjbnYU1WOkoqD5pO/oqQxLU1GxZ0C/tR1Un5GKQVKoVIlYe34q
eluOvRNG+emiVBSZBNU5FLD1F6di/945GomJVB+Zih2pVTW7qP6mMhWjZy6J
3riT4ZpUqM+5axijxPrXpeLBr65ipTlU35OKWWVSyZF5xP9UvCxo0RhJ8YKO
VDwOX77PQJPhzlQk7el3M8Ga6i/TMKD9u6sHj/ifBq+C0j1+dpQPSUNRhOh9
4x6G1dPgqvI+Nz2V8sNpcLypdtiG4nOT0vC06H5LqJDsvzTcmXBjxJRzpP/T
sGVMfM/hyyh/lAbn8wqVDi1sfvM0dI/9et6S8nM2afh5cNvar5Sfc0hDwe9n
gS/pPZBTGm4rPM2YTfX9bmkwz+oY8cWJ4j9paNt89frZHcT/NDgkXpt2hN6T
cdKQve/J+FsTiP9pOCsp2r2P7DleGpw2T/n00o38vzRYtTn22EP1iDky7HlY
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
UvxCtr8c7348X/Z952wou4f8+buf4tnZ6NunbdkyK7L/s/H6wpraaVzyb2X0
yhtjdJvq7wKz4V57IunwFfJ3szFhzLnA3fS+JlK2v67cp7NOk/8r4+cvJ+lT
ev+QkA1DoWJXfw+Kh2fDv9e28/wchtOzgWAVX94sqo/Nxppej96NUWH3h1DG
j0XzEo2pHlSajV9LOCO8vBjenQ3XYM9ifivZ/9moHjv1cpQtw3nZ2Ln3lyt/
ENVTZWMXr1x/sSbZ/zJ+XRu7dDr9PkBRNmJm/ApXd2L4jGz9032i7wjYfVcs
k895S4NeLGPzX86GV4T30YVUH1iSjVz9ddzCpQyXZeOQZ3eKEv1+VmU20qqK
qtISmXzfyUbhZ3FH8Uqqz8lG+q7PtktJvh9l46CWWacZ1ffXZePEJs3jRhwm
Dw3Z0IjndVSNofidDBtktE40Jfs/GyHL95xMeUjxnGxMmVflOL43w23Z0Nzo
McbJjd6zyfaT/vaCRRy7775lo7TYZELuG1bP35mNo/eyW8+PY/ZZVzbWZ2o9
tEqm929CKPz4G502m80nL8SVXfWLtpC+VhTC/+i6xkBPhgcIodc4VJRQR/a/
EG+rFst7jGTtKkIEab9VTQugeiEh9gpaluIw25+GEDHvja1+UzxHU4hXQWrf
L5wl+1+IJ4ZxKzaH0vkXomGu/S9nJbL/hYi2U07QXE315UJsM88dW0701Bdi
8l69/CnmVG8mxIf4d88iohmeL4RR3EWbZqqPgxDHU/T0TOj3j0yFMn/eI/o6
1ROYy9Z38vev5JcMWwmhHnTy54J75P8LsWW6e0ipkMmLnRDi5iet++j3hxyE
WLs8oF6O6m82CCE/QTwvjuLnTkK8Ly878zWe7H8hRBnDOxa/p3pWITrMH/mZ
92TjPYUYoN+VkTqM9L8QC7/vGuBbxvoHCnFavmbE1mCKd8vaUzYnRdN77Ugh
ZtvPvDdoIul/IayfqcZeW0f6Xwi5oy2Gq/xI/wuRorq1QZ/2ly7E8obkj5/2
03ttISpUnj21Wk3+vxA/J/T6XXuN/H9Zu/sfwcUwdh53C1E0tU+vEsp/5QhR
OPvW3zMfWP88IVYPqtvsQ7/PkC/E/W/3d9ovYLhQiKNPNj6+R+spEuJ1zZba
eHr/ekaI+n0Tx3j7Ub2FbL2hX22T/Rm/LgsRZnfxzIyz9H5Yxs+LXSq+9B62
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
qdk=
           "]]}, {
          Hue[0.08640786499873876, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
p+Hen0F3Fd6S/5+GnKsnzlwfz84PaWh6EX3CWZZhszSUlY/e1jCNYas0OKxZ
N9r5JsP2abC1H+xt7kf5xTSc/2TfniNk2DMNH1dgsdFa9vvANHQc+8WLe0j6
Pw3lZnIH9/2k+CsNG0t+1qUvZ+0ZadAZiY7vSygeT8PsF7e8RlWw8SVpyLXO
/fB8KMXnaehMfnXMPZKdd2kaCp+myndUk/+fhlUKNr0uGTF5rkyDefVzTkkb
+f9p0D6+dEH+//R/Gq7aqdana5D8p8FFxVdfTkL2Pw31jzT+/nRh+qRNen5r
Zwe4RTJ70CHdn3lE36pVdN+ZBlF2duujYKZfutOg+cbsQ5ga3f+ko/a0yXeN
p6T/0+Fom59pS/GSUjpWBxaq/7lB+j8d1dE5KSaUr1ZNR1Hlqz1xiqT/0xFi
YWU7ex/RPx0d+b9vzv/H6KGXjjAzD9t/MgwjHT1LJ54+ziP9n44gW33h1x7S
/+ko8XK+H0v35fbpuBA3bqgKya9zOubWPQm9e4n190zHiHabNAuqfwpMxxaL
zjnJ89l6ItOxaurClzv/svk56fhTe23PvnKGM9LRabS0/OdVhnnpiJrl+q+Z
4hFJOgZnXv5xcwZrL06H1t9eYeraJP/psLOIuH/4FMXr6cgsCjyc85ytrzId
B/uHHMjYSPVR6fi+4kXtnwmsf3069GuDh+2SsPGbpPu1/aGfFsjGa5GOF6n7
ynE9xffpMPW69Nspn43fkQ633QblQiGLhzrTYfjZLPWjiOWLu9Nxx+N09ikF
yv9nYE3eV9fZg9h4fTPQmZ9dM0KP7sMycM16WeXPSyT/Gagpl1OcJEf0z0Dl
Vps+QsoXqWcgTn6VZfUa8v8zcKTcfXTHMvL/M/D7zPMRDsMpf5SBINmskx+m
sv5mGXjnVfq5k+ybVQbsp1XeWfuNtdtn4MXgVVmiOXS/lIEh7SoOhgpsPM8M
jB42e0FhOt23ZGDsRfebccco/s9AhOvIeHmKdzkZWBmt8fk51d9kZEAmeaTm
0GcU/2Xg6hT9g+Mp/yTJQKyrY1j7EPL/MpBTOeGv2keS/wycU9T6N8GA4r8M
hMXOcP08kfz/DMgrWvZv2EfxXwZu+ES9eZvCfl+fgVqV3WoV40n+M5B1t4/I
nEf2PwNYeMBR5wHFfxnYKH+Nb0jjdWTAp8BZt1lM+e4MmIzIseyxZ7/vzkCG
a/Hr7A7K/2XiUH71sdPhJP+ZSJWM+vGP4jOlTFRM+a4v+4iNp5wJ64jZXlu9
qV4sE7e2d/d20Wf6RT0T529HurdTfkI7U6p/9Y5vCmRYLxPrnasO/dvL9Bcy
Ed0y8GONGdNfZpnYafC3Jv0HG88qE5MM1yT6HKH4LxPfs2Y/6eRSfjET0xYP
qFxF7zk8MyHTX7evQijlf6T9PWSrn64n/y8TCZkjh1dlUv1FJt4dDv0VaUj6
PxOiJVfVw39QPi4Tqw/7Gv4ZQPo/EwrXRDpHGqneJhP2hp56Pe5MnkozoV+z
XbntGOWrM7GkzqQpO5fhykyY959z2TTM5D9cnQldrWtH7P+x8eql8+VUL3tF
9ZdNmUgaoqYzv4LkPxOz72lVGVB9clsm5gxzEV+mev2OTGzQmP99dxzVe2Ti
2OPr3+W3sf11ZyJW7s7CJzqU/85C5OqSLH3Kz/TNwg+X4+9vdLD1KmUh6uni
0W/Hsd8rZ2Hy05kHFT+T/5+F6A+zTS++o/xPFu7XTmvfVEv3RVkYeyBj4S1P
Rg+9LAx4aWg8xpvqh7JgU/9swwh99nuzLJhMKhp5J4H8vyy4Fco6T25h2D4L
qnKbZm03JvnPwu9nVpe4QsYPnlk4lOx27WAuyX8Wct31u+ZQvV1kFtxXly+b
fp38/yy4Pnb6vofqKTOyIL8+ZN8E6s/LwrGQuLnH6H5IkoWaLjXVr5bk/2fh
4+Pw1ruUXyjNgqEs3rY0kvxnYcQsnbCPByn/kwWPh60zbM+S/GdB5tPWXpx2
dh710vXp3JBve8vOoykLmxut5B5+YO0tWZjWen/h6eFU35KFgnFturMWkPxn
4dc2jXc1S1l7Zxb6mv/so+ZK/l8WijvKN9kfI/pnQ6QwvKTpOfl/2Sj6qrii
ZiHF/9l4+uerpPkA2f9sHLANGvuV/EfVbDz67atSN5TsfzaS/lp9T9pD9j8b
vrJpvbn3WbteNjQOq4lXniL/Pxu2uvxrCuvY+GbZeDau35ZvVVRPkA2FM70q
inozbJ+No2def9+eRvTPhmVRsffxSZT/zcZYf8uZxuSPBWYjVWbVoT7jSP6z
Mf1PXVLMdYr/szEyxLVyixPbT0Y2ejvMN+wupfv4bJiaVFprvSf6Z+Ne/+oF
tZ50PynFA95lN9J9Wmk2Auc/ki0kfizLxt6deWkqPPL/svEhbtr4cz8o/s9G
6cWJru5LKf7LRrY4YO7gEaT/sxF0oKmFr03+Xzbc7U2mHxxK+d9srPQteVk8
nvy/bDit//BlJL0X6czGHqFy+JtZ5P9lw+/A9fRHU8n/4+KYk39O4xXS/1x0
Ph26YUUQ6X8uLhTXVI18RvTnwt77znsbiidUuQisWv/2JdVbqnPBmbylvYPu
w7S5GHzT6uacKMr/ciE38LrbkJuU/+WiO6DZsfOzyX/YjIvsdwL3YiuGrbgw
V7c7v1FA/h8XW7sPFW4+SPfrXFwePMPmMpf8Py6+jes+b7iC6g24SAzwkg3K
ZuNFchHtIBN0leJBDhe9vrruvEr6NIOLbd/2j/5I7xF5XGQmedVVX2T7lXDx
sk9yfHgS+f9c1Ey+rGX/je23lIsXU81nadtT/MfF4tWth9SIvyq5+JP7zHev
D8k/F95vqzfcpPcM9VxUCGdeT/tfPRsXGhFlk70/sN+3cGE77NrDGdUk/1wM
X/Yxoq8myT8XavKnd3qfIfnn4lVb5qh3gyj+52LJaeex165Q/JeD4UaPv67c
TvnfHNy0ctdrMyL65+D1kanC+9Zk/3OgcfXNn8ez6X4sB/nq3uOd7Sj/m4Oa
yq3u/UzI/8tB/cwZ1sm27Pd6Ofjdkf0n/n/vpXLAGxs1Zy3d15vl4JTayicL
/lA9VQ6yZMaecPlL8p+DgjyDgdlUf+Scg1AvjY/ZZWT/c9DqmL6s1YDyvzk4
nyZwDuQy/o+Uzr/9z40Oeq/EyYHclF7rfVcxnJGDuwU+971dKP8rXY/Z/PFm
fZh8SXIgEv8pXfaZ6t1z0J4zYWxMO+V/crBU8cHqFckk/znwK4V1OeUHK3MQ
veRpYpI50T8HccsnnPObRfo/B3bKk2/PziD9n4NDKeYz7QIZf7XkYI3l3Nnr
q6m+Mwem4Z8U/Z8xfu/IQXmC3uUZlA/pzIHXaw+nLXYMd+egbV3tffeVVP+W
i2VnF61/MJ/8/1w4VeLlrUomT0q5+HphnkLdSoaVcxGSpzYstYndH6rm4n5H
cPyxI5T/yYVD4KMNccMY1s6Fe7DPEO8Wyv/kInH/jfmXXpL852Iwv/Jy6kiG
zXLhfGja+PJCtl6rXOTn7a2yTWXt9rnoqhvvtvgx5X9yIbZUf2x0gp2XZy7m
nXyzPWYk5X9zkdR/pOMLCcX/0v10u1XtpfedHOn6ZgyRVRzGxsvIxdBJdlPf
hJH/lwuXPXav++wn/y8XPs4Nnwwpv1mci/hhVXev3mbrLc3FvSdKqg6/yf/L
xeXXBpuGXyL/LxdzPq0SNuxnv6/ORfeDzS5GIRT/5cLi76qJmidZe1MurKrV
iwINGW7JRV9lnagSDsV/uag2a+aYnqL4T7qf3xVnd9jSfW8uBlas6H9fxH7f
nYuWWPn3C6cS/fPwLOvyFn4h+X95uHd4+gOLbHZ+Snng3thwbCfpd+U81NZO
d7kxkPy/PDwf1PuA9VzWXz0P5yve1lUvo/xvHrSqXht8pPPQy0PjnK3XI8rY
fpCHSYG37oc9ofx/HoY6KxhdoPeoVnloCuq0//KG8n95WGJkbXfFgt5D5eGA
08J3aVWU/83D+pyGEVGJRP88+G46e0xXm+HIPJg/1pVtsaL6uzwMKDKaVzWV
7H8eHk87XrkviOx/Hjx3jHibQPWXkjy4n7eob6b3GMV5OHN46Th58idL83Bp
dESvousk/3k4/dq4fk4sxX956Pq16IGOIdUv58F5/7UoVzfWvz4Pvw+91Y++
QPm/PBjU5xZm6pL+z4PkkZWcSRnlf/Pw+eEC61V0X9GRh0H20yfNd6H8Xx4y
dRWO6NTQ/Z/0fF1VejYspviPhzO8z722kb6W48H++T5OfAPZAx7S55gFL6P3
x4o86PpPFtlpk3/Iw+7PQgPbkQwP5yHvz99r3APs/JR5MBr6reMTvcdW4cHs
UvSWy3T/qMqDg3tifN1R1l+Nh+DtXPMaT4bVefg1XZwx+wnrr8nD6O39h41K
Jv+Ch23NfbgFugzr8vBhhMctHbrv0ePhvU5knL8Pw4Y8hKp8+aVP99PgYV3/
+kmLqT7HlAePoq8/19H7fDMe3BULPpwrZus156Fhwf6DLwKp3kPavlvHeoUf
+70ND/1Xc2zGUT7MnocKj18Pb1P+xJGHz9v2XAylfKWzdH1zb5YoKLF2Nx6u
zXSszaH8qad0vclROYoRbDxfHkocjtnWmRB/8yAI1rql08zWF8rDkK39NGyI
HyN5sAg6o3WjL6NvLA+cFYdvmJK/yuFB6YhB/+YXjJ9SeHg46d2g50kMZ/DQ
9vBWp8oShrk8dCc4xVRfIfso3e+pKy+XGDB/VCQ9v5kfjAUhrF3Cg/ylSyf2
WTC8Tbr+XSMcv1F9TjEPy63snTZT/F/Cw4KBvVp0B7P2Uh6mpI0+POgfs6+H
eMhXGvAohtZXxsP0ugcnczvZ/o5L6dmReKRLn+wtD+svpDttv8LodVbK3zPW
jivzofepPAz8W639wpOd7yUefGO/JXtuYPSo5+Gru+XcW3Sf0chD46P5C68O
NPkPN/Fg1bNkdJ0Z0193pOPb/rX+Tf5uCw9BYxse5NP95WMeZKesuN4eQPab
h8VzZhz/d4jhFzykfHmwo/Uf2XMe9vxJ82n6zPB7Hri1i/qB7lM6pfPPutW7
k/ITXTxIRoQWHa4ifc/D479LP8masfX28LAkM03fWIFhGT6e3rEfupe+pyHH
x+trXofk5Mke8FHRvrfqlRw7H0U+ButVV++g9yRKfHQnVw0QubH+w/l47BHO
0fBj4ytLx29JSX54iWEVPhx7R3r+O8uwKh/Xh7eqzbrJxlfjo/7EyD470ime
4CN4woiX6++z+TT5GPuv34BFlM/R5mPxp1jNTooXdaXrOZfybDrlx/T4aLE+
PvV+KOMXQz7u1/n9XkPxJPgw33LvxECqPzXlY0WTp/ag/uSP8jEhRc/Z8AHj
P3M+blz7cm/zbqpP4AO+yhrbhAzb8PHss8vQEXQfb8/Hrk2ZD9JnMv525CO2
/UO4Ww69p+NjwDHN4JEnmXy48ZHVaZSyo5HqGfg4mjZ2+vtuth5fPj6kLOH7
7aX8Bh/SqdK680j+pf2vL+wzW4niXT6mT621TT3MzjOWj9afZR1JE8j/4eNt
3xqxwjh2vil8rBoU+vyKFaNnBh9Fe6vfRrozenH52DQvfpdNEdVr8sFLmFnb
ezzDIj7m+uwKSFnDxpNI2zV6LbJczfA2PhZklLjmhFJ9t3T9ch+ttmaw9hI+
zhzJuDa3juqp+PAxt6srmsH2c0hKz2f1cp/5FF/xMWrytcoRaqz9OB+6Nx+t
BcUzlXw4VeTuDSL/8Cwfw+fXJ/hbkf/Nx2lTeacrdP99iY8Acfm2RfkUj/Hh
Z6oz/f4gRp9GPsp7IqyzRVRvyId2+ceEhlxGzzt8rHb0j8nMovt6PjqbA3ZM
MWf4MR9TdgZ+3HCG3ufwcURlm3V7IuOPF3y0l8mWXG6m+3w+HmhW640ewvB7
PvTeR/3dOofie+n57lk3vPdIxi9dfDSXmVQ5TWf80s3H/J9Zg0dJ2H56pPIY
MCwvjuo9ZAR4d7PHf14UOy85gVS+w/o1L6F8kADhjyr8Guh9v6IAn0vdBSV0
H6skwITeo63HTSH5F+BqKG58Tjb5DysLEDTGoWD8O8YfKgLsW9PeZxXFC6oC
9HoZx/1hyvqrCbB03KuE+YPoPlGA9MlOA4x8GdYU4MdTy74VcWT/BRhwW9wV
GkX2XwC325v35ISS/RdAsVHQ9+5ktj9DAS4+Kfsr9CL5F2CLnOyrJnp/bSrA
2OKYebG1dB8hwNGpeU9qKJ9kLm2f06/+4kOKTwW4o9kpX0f5aBsB/BzirPr/
pnhVgLzPniu2L2PtjlJ8WyZTayHVLwlg1yvjwCOqb3ITgOs3aOF7C5J/Ae7r
9G1fspdhXwHGnP+ysoW+nxMoQKS/xZV3lO8PFUDhedvJhgyqdxKgub40dexB
Nl+sdD9z50Up0H0gR4AD/OmfA/LZ+ClSeix7M/PJZqqHEuC8YcnKfiFk/wWo
L50d6X6K3usJEOC1dfDwfuz3IgEWBJxYuf8c3ZcIcNDqmIw55bO2CZA4ISlh
9HnKnwpwe4DJpg+pbD0lAhSurtI52cNwqQAZz5dnjyZ5OSTAaEfduP6bqb5C
gDPr42oaZzP5OS6AO9/U/4oz1dsIkHsiOmxYOut/VoBajQ3rl76l/JsAH/sN
6An5y9Z7SXqeQWsj9QpJ/gXw6ZNY+smC0btRANMc8eQaet/ZJMDTC4pWFlwm
L3cE0K1Tt33gT/G6ABHr6w4n7SL7LwDvcN1otVVUny6A6hd9jXR/k//wC6k8
ei2QF9UxeekQIHbg/J3HzZi8vBdgZ8rN1TPpvq5TAE/TPnuSJ7N4vEuA6M6t
8ucHsvG7BZiN+GBhIMM9AvzbIivXTt9XkBGiT0jNmzNZDMsJ4Xrz09eS9ST/
Qlgvnfz9UgnDikKsHlo7qjSV6gOE0B+V2XfIYra/4UJ4blb0au5i+1EWYl2a
Q+H7YyT/QnQkOC8fP4y1qwrRY6QxddVt1q4mRHF428L0/QyrC2Gw+NsXO1eG
NYVIi659vWE01RcLMWSEj2XXInY+ukJkhyzSqp7GsJ4Qp44uvvKTvpdiKMSo
+2cNZyXS91KEuP744ZkL4Ww9pkJMuDR69eGrFI8K0Zl3L/A3vU8yF2KzeZrL
HKoXsRJiqtGehnu+bDwbIQ7ftxizPoD93l6K21tjjX+w3zsKkfW4sJ8jvcdy
lp5v3/SQvBmMPm5CWL6q9g8xpno2IfxPbBFNJHvqK8Szd/pZw75QflOIyDHT
l8daM/qECpHp0nHcid6PRQqx87jXPJ8LrD1WiE/Th0TFTaD7LyFC7w2xv81l
v08R4pJl2cSmW3QfJsTYow69elM7Vwi3Kbt+6tL3dXhCBGeceu6izeRHJERV
+lsfFaqflAhxL2itnJjqH7ZJ1ytolKmroftToTRe6C/6fZPJW4n0vNWxdcoI
qqcTQitnyLpb+Uz+Dglh7HhHIYW+D1MmxIK3IxrOWZL/L8TvNwUdW/5XbylE
Yy8HrRekL89Kx8/JdpWneKJaiF+WPw9dzmT4knS/9xJ+n6D3vfVCnP9YMnJM
A8ONUn4r7H3oGt2HNgmh+uBdqd0x1v+OEPKap/f1+0n5eun+vQ4mXdGw+g8/
FuJ1nn/e1XKq3xDixfr7qeeOkf0X4oO8TfToCLL/0vkfV9f/onrO99L9uV3e
U03vHTuF4Lrk2l1OZ+vpEiLiCLef21C67xVizpKLE21T2fn1SM+7vzK/83/f
nxHhRmDxhr/9yP6LME5RzvpmAsm/CMs7Cjfu2UD2XwSjZwti+wSS/RdhAMfm
iPFQsv8iHKi9eMvwD+N3ZRH4vBVvNMsZv6uIcGjwrDKZvez3qiLEDDzb75iY
7L8IC82S4neIKZ8kwhuVbeamb8n+i+DxSmhgakT3SyJ8s1q1ZM5Lk/+wrghv
a/bKqydQvZEIWy0Spk0Bw4Yi9L6++3JgGL1fEqE8AK//UjxoKkLRQGPlCVRP
ZSaCl7eFRyvY+ZiLsN/5t/ZoI4r/RdAIU+BkUf7ERgT1L562c3ozetiLkJ/y
8J0+1QNLBZ9n7C4azaf8tQj/7hk+mkP1Em4i6M2KlTWmej5P6fhcs9Qnugz7
irDI8uoEzwXk/4sgiSic7J3AcKgIzytOnF73hvFHpAhbDAqjk+k9e6wIV6NO
dXPJX+SIkOy/dvG2KIr/RVj14e6dA//oPYR0/2nD9zzayvbLFWHvitxlTYvo
flR63oVre6m2MSwS4XTS9dGbVaheXoSuKwqpxnySfym9X3iWql6g+F+EXmfG
9dafzOSjRHpeEyNfHj3H5KNUhAlTSgM+v2TycUgEza875pvYMVwmwp9VZ+Y8
NGbjHRfh7quSoW6lTF4qRbAt/PRjBOmfsyL0tXoQs+Mk1V+JoDt6n+LtD+T/
i+Du9u/otVuUjxPB4cK5p4VUP9oowuAbR6wy6H6wSYQVmjUFrxYz+bgjgtam
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
Unv5fwdFjnw=
           "]]}, {
          Hue[0.3224758424985268, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
RST/KZgiX2fjpkv2Xwo+jXc+3pP0W1UKruqNSxpRQPKfgg1vjGPsyP9uSMGz
hlLL5qMk/ynY5iU/K/ghyX8Kuva8n7WW6kPaZfRpE1wY8pDJV1cKRk71vVL/
kuQ/FTPK/5hMXcFw31S86TvHd0EGk0+lVCyc46O25wfrr5KKXiffDnpG9axq
qZhVbe2dbkj+fyqODYkKtlcm/Z+KFyKfF0vcSf+ngmd9q2sV+YtIRY5HU5JG
EtE/FU/PObof3E/2XyrqxvOSGqh+1C4V4rEN80/oUj10KlI+pJn08jD6h91S
Me1Gbe/TsVRvl4pFr24OvU/1S8GpyFcd0WCewuQjKhUPz7ltCNjH+JWTCmGM
fL0u1edxU6H8+KqOdCKbjzQV42u39XM5QfkZ2XxU081uPmDzyU3Fvstfxo8/
RfmaVJiNyzWMH85+X5yKhP4D35vtp/xNKu6NOfTW24TtR1UqAhMmi7fPpvM/
FV2vLpglXmG/b0jFh/HLVL8dpfqGVHwx6Gtu6MDaW1PReDw1XCSg8z8Vpu91
1xhq0vmfilV59S7Hz5P/nwaVD/wlo63J/0/D9XsKTrPIflBKg3el28t8PfL/
0pD8QYLH68n/S0PrzV+jWr6R/5eGD5YLiw2GkP+XhhM6nQf+kj+nl4bmGSGG
R0hfIw3zrD/hyQLWbpIGO6ulad2hZP+loXHO4obVVJ9ul4Yv3zPtRm4j+U/D
0obmGsN01u6WBoGhTRqSqN4mDTYDV58YrcH4MzgNP+btOV8/gPI/aTjgM27f
Xcrnc9LQrli92vcOnf9p2KDkkW3xgfG7NA375816z31C9YlpwO8jjSZq5P+l
QdozTVn9I/l/aTh0OoZTkEv+XxpWlNY9s/pC8p+GuXvL5x0eyXBVGs7Nc4zd
2Y/8/zRYl8c803nC1tOQhvxROZxVFuT/peHXvLWq2akU/01D+bTJiQZUX9Oe
Bv3FrTcWjSb6p2Hhrdg1S/2I/ulw730prz2I8n/pUJ7kaDxwK/l/6WiZeTdi
5i6jf1glHS8qLiZfCiL9n46uJWbHPm4g/y8dc2c28U90U71gOmrO+rVvo/tk
eukwfHOlbsNPyp+nQ+m+fvhRus9ikg5uzFvPuzFUT5iOfgWRo53o93bp4JV9
fnOJ8pmO6fi65/fyyU9I/6fDRXxwyUyqP/NOh5fXsyMhemT/pyMipa/tt+F0
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
M+n8l2Iajy9doUb5v904EOf16b5MX/8fuv+cow==
           "]]}, {
          Hue[0.5585438199983166, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
yOfe7HybpO9beMSwO5m1y7jiidrYz2MnsPNVc8U9y8cTLB8Q/bnCtOWGluIj
oj9XXE/yhokWyXdXFKo/N7h0mM2nwBWVB/usDb1D8tYVd/t/Cz53le1Hkyu8
F05NH2hK/OeGllGOMTMfsfNQc4P/iNBzbXfYecANS23Gyal2s/N0dEPVl8TU
3rtIPrihe/Dxwqe/WP8CN2h/PZxazGPnXeWG2f2brA3ms/Ga3NDvrV926Dey
H9wRG3TDYNQEoj93RNsNs687Tefvjl3+jiOctxH/u2P6qYlPpwwm/neH/p3j
n1ebsv4F7pBd4GniakPyxh177oYe0DpD40v7l05beG4vje+B3Ff11TU1tH4P
iLLN1/+dTfLUAzc3vziYMYPo3wNLL/coPBEQ/XsgeMRpJbcbbL8KPGB3YcHA
/qNo/R5YMTlDvMKePd/kgQMjEs5ozyD690SP6N+Vsu+sv5onRi4YZS2exdYD
T0zVyup0IX3n6In48aWVx7/T+XviIc8noMiT5I8njkjunHyRQvTnCcWlLu+V
D5D88US/CVM7Lown+vNCw6ALPEfSb2peGNlyvVusTPLHCzdPhc6d8onkjxe2
e5m2cOsY5nih/yft2Amk7wq84B3juO8+2d9VXvCqnGeQlcre1+SFxRbLo7fp
kfzzRtVqxctNSjS+NyJGd8tt2EP2iDc0O5SufHFi/ODojVHqeU6qebR+b3z6
bWk+nOyNAm+k/fpya/AGon9vPPx7RzhqHNG/N95fsEyW70v07wPRy4636/93
/j6ImBX49/5COn8fZEzZEfzvIDsfRx+88E7VHkb6juOD2BHfg4pDGD8U+ODb
k606pvlkb/qg8uPA/duqGW7ywRbPRyJnA9K/vtB6UjRTvJ+1q/ni/quN+jNq
SJ/64psi36NIRPTni19zwvs+6EX2ui84qpIyIzOSf75ofmJienwk0b8v5nds
fLzPm+SvL4zerAnQvUL074c+S3uN3TKD9K8fOMYX0k3liP78YPJ1sEm3BWt3
9INPzLR1nidofD88P/k08scl4n8/HPriUFPmznCVH5bc3ntjfALxnx8SrbY2
tM2m/ffH7thbYeeWsvNS9EdKYV5W6SbSx/5QuqAyqcuTna+mP4ymDmmacp3s
JX+Y+9QO9zFnz9v4I/z6qCOmZ0he+qNW58zXFbMZ/fj7Q+dU06dYI9Kf/uhr
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
ehBO9laDECK3sV8Cd7D3NQoxYG5JqngC3c8SYoSf2yJNLbbet1L6/7w/93UG
5XOEOOM+dbo5fQ/gsxCutsY200MpvidEiUPIvxC6T9QhHW9badk+sge6hIjf
W6k8NZudz2/p/Mq7vT7R93NkcjHaPK08DOy85HIx/Mu9zLFDKB+Qi+kvqq+s
o/NVyMXEy2EdS+l+hWIuTu7fnZkaw7ByLiJ3dfU/pUHx4lzsCVZpNcsl/z8X
yW+Hu9dRfadaLpxmb4/9t5PhybnQWxFn/mIU1RPm4qhhu7hRk61XIxfRwfsG
KKWS/5+LcQPbTbOvMKydi27+ofGmM9h+6ebiWDgm7ttH/J+LR62G55Xpe3jI
xVmj7iXeZ0n/5+LnIZe7nRtJ/+fiyNfSB3sCWbtFLlrPPg8Mp+9d2eTCtyx8
/F8N1m6bK7WfNpUvJ31ln4sHU4rj7Ok+38ZcLNw5SvkKfU/AMRdNj8Ze+hxH
+j8Xz4Yc0dtF309zl46nLGx87Mqwdy5un1mWun4ixf9yMUN7T8n6h6T/c7G+
cW6kCen78FyU8d5MNSb6jpK2e9eX8y5Q/bu0/WaPzR0fsv9zcXfayRdT+5P9
nwvJvqqJZeaMPjOl5+95Wj5nKdn/uRgYYRT4dzLp/1x49swfrpdP+j8X3/Nb
z3aQf5Cfi7qFF37mUjyyIBdbJi2/vXsOw8W5mLrd/NlbJeL/XOxq2hW38jPp
f+l+H2mZU0/fny3Lheip7xZ+D+n/XHDz0NRG9fOVubD6Un8yTo7hc7l4OnDc
mNnXKP4npa+RDbfunjH6D1+Vrm9DqkOVhNF/dS7WFddNOW9M+j8XA5q049a0
kf7PRan9r135VB9UnwuHI0oDOoMoX5OLFcPdS/vvYPzRKN3Pe6XKcfT9zqZc
3NgS7vyA8ktvpecvfHvLNJm1N+fC1DVU4SbVC32W0lPW2yxZqsdrzUXGjnER
ZwdT/C8XJa/MDa6psfl05eJ9jejE64FsPr+l/BW159c/I6r/E6G1ZExzgwPF
/0Twqozc7HOS6gFESFil3deUy96nIMLF3zf61tL3hhRFeC1neESf7BFlEU6V
qEdoUD5ERQRPQ51FB6ez81MV4cDH2rXTOqh+RASnwr7+5lHsvCeL8HmCkub7
foxe1EXYUfXe3vYRoy8NEXRfQ9NKg+rLRNAr3fbl60L2vLYI3r6f5lZvp3yz
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
AXLnmC4=
           "]]}, {
          Hue[0.7946117974981064, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw9XHdczd//L0ISQhQqSRKSjAjJs1SiEIoIJaVJe6/b3nX3vRSyKkRJiEJ2
ZIQiFNnZRcj+3d/jc17f/unxvGef83q9zmud92g3/+UePeTk5NBbTu7////3
1zHvTd+t/57PXgD2A5TCPoTrixcyrIiPGnIvOH8Iq2D1wqqUz4vtGFbFr6Wv
x8ctJayOa66HJxoNt2VYA5mT1Ue0LV3EsDZc3tWYDf9K/ekg/PfyXmdrCeti
TtM3rRmHqL4eLFelehhNJKyPWSNq4FlP/U9ATHjD2dOZNL4Bvl9/esXDejHD
hnjTa8a9qZOXMGyEP8rz0/ZUUf0pmPXlXElBLfU3FfN81EvunKPxpqFa49Ge
rDU0v+kY6Oeh+yvOhmFj5HuGHtz4l/ZvBtQ078jfNCI8E9mnOrM+vLBi2AS3
5Ete+2ZZMjwLtorPXW6azmd4No5Nyu8xtMSC4TnYETdJb9Y2c4ZN8fuwda37
dTA8F6NnjYhzmUj1zfCkqdvwphHVnwfbhlMWSh/nMQzMD00IsVpg9h/mAOs2
bGlYYUH9mePz2qB4z5tUbo637hXj0hvmsnILjJB7+cNjPJVbwLhpbsQqHo0/
Hwkboh7n5LD1cOZjSlBS2+r11qzcEmeL1zkURLD94FjCt8+qroqztB9WOJj1
UHBaQu2t4NL759Sp4VRuDZuYSU3WFVRujWmT7H273tD4C/D66zETpakMcxZg
3NotQsd9tB826DVf4NltTuU2GLZL3i1yELVfiJ/ujZlvsql8IX6Fnb8f/pXG
X4SC3REuVzxp/ovQdUJr+5djdN62iC7ZUHQ1n2GOLTTs776x+k7ldnByDxrJ
m8Hoh2MH25FHnIRmVL4YTmrDVj0YTO0XI3FgZs1sEZUvgaZ803q1YCpfgvhd
j1ZeW0flS3FqsTEXf2h+S3FCbPFHP5/mb4/oKJ35/J1s/2CPfnf6/ljUk/bT
Hn85t39te8LWX2uP4Tb9i9VCaH+W4d73D+87y6j9MgTKXRjRdx3t1zKMmO45
cmRfar8MqWG9n2Qcp/GXY4G4caTHNoaxHBe8X8f+nEXrWY5Hqb1i4wIZv9Uu
h7T/SBWtvsSPK7BgetH2rQMY/2IFqtImK95YxjBnBS6abB1+9jzDtStQf6pI
LVeR5IEDUpWu6D6dT+0doOY7IXfyGsb/HAe8f6/wcdJpNl6tA9b3iz9cpULj
O0Lj8MSNav0ZhiOWK9r2t8ph8+U4YtX5Sb2cZ1B7R6x7enpubB61Xwnx9k1n
fMRsPKzEfMs3eoNzafyVMP0Wxhk6iuHalbApCtA1jiP5tAorgu65aTlQ+1U4
IAl0XDmE9c9ZhR7aPuWW+Yy+aldhuJLir9sNRB9OCLOL9Dc8zjCcMGDne59Z
e2j/nfC7Ubls+XnafyeUeu+c+7me5N1qvO38pDXQlZVjNSYefS68kU70vBrz
rJ8bdl2i9a+G/bzox0n7af5r8HrLjDhxIzsPrEGvwVe854UyzFmD045L9916
zHDtGkzdaBH1IIjOzxlP+/0IKdjC5Dmcsb4wX3LZnto7Q/Fc4MxTHbR/svJI
ucqiItr/tVAr+uTr6UDzX4u98Quf5JXT/NciRjFeTa6Q7UftWujVe66WHCb5
tQ6f3wXYJzxj/IV1sP2s+WzOR0bPnHU4fqxpqFMQ44/adVjz7+mVRksL1n49
Vli8OHsok8kjrMe+NB2Xlt4Mc9bj8zq/yktDWP3a9agcIi8/tIHklwssz2zX
avej9i7QSzYy0fhG/OsC6TpLeaGIxndBq+Buff0i4j9XtA1LW+y2nJVru2K+
+ueWYUpsPLhiydxf/4YlsfW5uqLPxivz6y+QPHFFRoRj0SnChbL+0sZ6hVSx
/al1xanLievOknxqc0Xj4pgPZv2I/jagfw/4LjJk+629AdWB00qcbImfNqAs
1yMmvp2Vu25A+uyoMxPbiL82ICXbyPZjKatfuAHPUufVT+wket2ALcEDZ87S
YvzdtgGDBwxJ+36Z6McNN3ud47zxX8rGd8PbH5qf0+SJntywPnmgxt2zrL2r
G1zl1hqGapJ8cYNcZ8L7ebtpfDccj5EG/CL+q3WD87dDg+7Wsvm3ueHQwmv+
117R+jfCqk+/0nOkH2hvxCL9L4/KE9n+YSMKz5X7hr2j/d+I04ZlyZmpRF8b
Yby69xW9UnZ+hRvxsaws4WwhO7/ajRg23m7Laz1GH20bMVi8f0hxPt3/7rhz
SLf+hhy7z7Xdob3Lr75WgeS5O9ZXPusx6BrDru4YfOzovT1Tib7c8W7NuUN9
ndl4he7YPPidt95lNt9ad5yOL7g9M4TOX1bedPvmYAVavweWTp2yz/EzW6+2
B44NlWy0vUTr90DpnX6rXoxg9V098HrfvdH3c1k5xwPRFZlfvJXYeRd6YMGK
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
L86sOMrql2QBF38qck5TvCILk66N+lU2iuy/LHxxNqmqoXhDbRbmK5b9HtBM
+l8WnqU7Bz6eTvpfFj5tUt8RvZn8v1mI2xH3vKib8nuyUP/Jv76d8hvaZf29
zDawriD/XxYWFdeF1PmR/1dWvmH4cJMLlH+ajYglGsWdd0n+Z2NgqfUxqw0k
/7NR0+dYaQbRs3o2WvryqsYnkv6fjQELdj3YN4b0/2xMea1/5xTJI6NsLBZb
T+4ab/EfNsmGfEvqs7Cd5P/NBswS7+Tbkf83G8PiX05tLmbyzz4bOsYXx7YI
GHbKRvCdnOWvmlm8wTUbTwfNcjwzhWGvbCg5lPztR+/PArKRyzWy3XedjReR
jbhbPgPaVrDxONmwMCtqmypi5enZmN6eyIkg+5ibjdD7T29Cn61Xmg3RUw33
f/QeojAbJV+D+IuJnkuyMW/Dnh6qAorXZOOX2Wb+wkKGq7KRcr+wzew53f/Z
8H+ZdXjMJ7r/s9F8be+epA7K58nGNR3fcWGUX9icjd4/j1g5/i++m43HUwrW
5dYz3J6NIx3plqpbGO7IxqiOe8qjetL9nw0V9UviMRyK/+bg5R2trbvpvBVz
8GbHn4nnKJ9PJQffekSaFBgy+lHPweyOr3N3a5L/Lwc6RrMk1ZR/o5+DlA9a
WcWaFC/MgdWxwS42u8j/l4MVv63DDK9R/CwH81VL9xTcYOU2ORjz5OE0m27K
J8zB3a2LosZaE//nwL3zbdAH0r9cc1C349kWvxSGvXJg2Sjc3vCV5H8OZn49
/UaN8gsjcrAwRnj5XBDl3+RgtfwMjvxMiv/koObHhF395hP/5yDWIy6n7gz5
f3IQtsMmP+kb8X8O8pdab+DKkf8nB54am0qG/aF8vRzIu35f40L5+1U5SPuJ
nTO1KX9P1n+tl4+nKuPvuhycff9bzfgD8X8O7lxzcww9ysZrzkHximMZXc6U
T54Drn5ETjbl27bn4Nr5zKv36P1WRw7+HivrWdOXzl/W/2yzhLBflP+ZC50+
dec+z2NYMRdn5c7KD9Aj+Z+L4FTTKCWyr9Vz4aJ3rK3zKeXr56LN5ulK1Rby
/+RioNIkjQxlho1y8flR5YoCev9kkovBlxxe7yR/I3LRYqQ9NGKjxX/YJhf3
FDSPLG2kfIJcqGk4jDcIZ+VOuShb72a99BLZ/7nQOlqlY6NP/r9cXHvbdPc7
vZcJyMWzM3c0C3qR/Z8LTs53t31/yP7PhWHQsn05Say/9FzMORnqvqMH8X8u
an0/GkRSPoE0Fz/MhaVPdMj/kwuxmofmRMq/LcnF8yHbBi/bRfkKuci1eJp/
kt4vVOWifmjiTa0Kyl/KxSqzvj6GOqx+XS7OH8OYU1GsfkMuzKRjbl1Zz3Bz
LmIvYvuHUQy35UJUoXkr9hbrrz0XGwaG9XhyhOK9uXhsPuNy31ZWvzsX9wdV
6jzzZFguD8ttn40OHULnn4d5OwOfXNci+Z+H/tbrVy0Qk/zPwwLR4QFK5K/T
zsPkFfsmuP4j+Z8HV8Nxl09Q/MIoDy4b0jbbiRg2ycM3uTnqXLL3kYcq2xKv
EDU2H5s8FJwqax4wnPx/eXh3Lm2E+jPS//JQlupxtDGK8ivykF/ZS2B4nvw/
eThoZBd3roLOPw8ht2KdO7TZ/CPywPcqP6K4mO7/PITtVL/VZU/xnzw4zNtm
de4v+X/ycHy43vNVQrL/8uBU8yE4gfxxhXn49M4ocnIe+X/ykOb7KuBOJePP
8jw05Q79Of4l+f/zcKMluuxuMfn/85CZccXBkN5n1OVhoIde8THSXxvy8OF0
ZlHeQ5L/eVjtpVx8qZ7ym/KgfcD53OvpxP95+D7gqKqaOdl/edg2KMGkVUzx
nzzkfWsRCykeLsfF6GppyHx1Nj8FLsa/brQeTvJXkYtHeXs1RWsZVuZCx/RK
08OzdD9w0Xvf2KPayqw/VS5+CeZW33AlfxEX5X3Swrv6M6zBRZCDQp8UyufU
5mLR9YEfwwYzrMtFsd7knnqXWH19LowtPSbn9WTYgIvbWw1WXxpI/gUudtjK
TqWBnd90Ll5ahDadiCd7gwu9IunTDeRvMOVi4P26YQlJ5H/g4l/lrwGtFC+z
5OJ3B1/1+DfSR7mIVtXMHOzE9seOixCVp5tUKF5uz8Wh8H6t3+i+duAiOPdJ
x1p6/+jERcTU09tGGrDytVycTC+IPm9E9gsXLWNiMvQuM+zOBScyz20WvW/z
4oKXWGoxM5ut309WXjxoy9OHdL9xsbPlSUpJLZtfCBcjlJV3SCzpvuPi8KNt
u7xpv2O4UG/beKVhBt1/svkMLgztV8Pul2QuiiQPBxcnMZzOxVGXdZ5j9zKc
zcX5/N3Vg29Rvg4XW6r9Tk7ZyrCQizXnZ+0PecDuLykXfr6Oh1UMWHkBFxa/
xisUl1L8jCuTH1o1GWJ2/+3lwkFpl98eJ4qnyfYzKa/2Kn1fopSLhfMrhLfn
kX7NxcwJ3UZf6b1aJRdf73Cldym/tooL1cmDc7ZVsP2q4eLdgc2aK8spf5qL
Ybs63MwNGb7IBf/G5O/f6XzquLg8bt+gWa1M3lznYt6quOWd3ZRvxoX7X3vR
OvJXN8rowfeU5fXPTP42c7E2fNqhylPsPmzhwvbTJ+XvIWS/c3H3jVKC8mGG
X3AxpvDZmanuzP/WzkVfxTmqX1cw/fe9jD9dVj5/3c303Q4ZvX93HbpnAfPn
dXFhn54THBPK8j+7uZD2Peexu47h31xUJa2fsjSOYTkeJjU9OPWtlfkXFHhI
6Mv3P1pC+UA8LB+xuDRkBVuPMg8at/W8tyygfFkeDtU9fx8zjmFVHqLj/bZI
fChexMOqpAE/99F7Ow0eDspXpQevI/2Bh/KBVQ2Ct2x/dXkY+4Gj5jaY/Ak8
/OsMFx3fy8oNeHCf2vTL/xU7HyMedkT8ixG9Y+c7nYfrD5RvFqiSvsnDut2H
Ht10YtiUB8GwWYbc/71f4cF0V6b6fsp/s+RhX+ePyb/HMXqy4cGmdfN3hb+M
3ux4ePP1+pbQIsp346H4w4Bfj4QMO/CQ5PXj4NQoRr9OMhxnXaQ5hdH3Wh4O
97IMN3Wk95w8PGh8Njf3A2vvzoOK97eQfkYUz+bB7YXx9kYjNh8/Hjgmsx1b
h5J9y4PlyECtJpIPITw8916hOU6H/B08rG8fPoE7ke1XDA9ZJ0rjHF+Q/sPD
92GmvGRHhpN5+LvClGumTfoQD426HRt3kz8pm4cBE94fTRlF+do8TJX3VegV
zc5byEOPb+E9n/pRvISH/Wdsa1umM1zAg0Hx7/S948h/xoNciFQ+K5rhvbLz
5cndl/tfPhUPoaoKjeMVGS7lQWfQEP3ktYw+ymXnrf3Z4cl1hit5+POAf3LJ
I/K3yOg589h6J282fg0PJ3u07DH6n/3FQ3P/ir3z6HscF3norE4LDCH7oU52
vhc/JKhvZft/nQfPR881x6dRviUPfI2yuT3fMtzIw/2xEjfXvax+s2y/vCd8
y7FhuIWHGad7r3z3j+5vHtJ0qmOvHGLtX/DwbdB0xYcuDLfzMGTwlpLQoYxe
3vMQv3R6XMQRymfk4ckcs49NHqy8i4dNmr+Kn/pQvEd2npyQ0mAR6++3bP7V
lxSMp1P+Dx+2t+efH2zM5qPAR9nYvxuyX5A9yMeBC3semlSz/VLmo216/3FB
4yk+yEexRt6s6xpsv1X5GO2Ub/B6L9kLfBhx9ngcfWvxH9bgw3xa/OAfUcT/
fPguG3M3q4r4n49bymMGn6R4mz4fX/v5FZ+l/GQDPu587X3lti7d/3xo7s8r
aiZ/+3Q+TN8/SDn6iM3PhI+0edWXJabE/3z8Fu7PVP5H9idfdj+LRne3Ev/z
cT6jat1wc7JH+ehy9OvXRfmwdnyc9Nr5TIO+f2HPR6jaDq1qD9afAx/yjx5q
q1O+thMfe/eJf594zMrX8jG3+tfxuQuI//k4VSINunafnZc7Hx+WuR5QCif+
56NPzfHtZ/JYuR8fD8ZP/NiH3qsE8JF5tFWcvZLhED6ujDj89sJQhiP4GOLq
s3RFC2sfw4dd1YOhP09Q/i0fK8UD5x3+3/3Px8UHk5c5t7L5pvMhynWUl9D3
SrJl89+8+9nWMZQfx8f9+EdvQ8k+Fsr2/1hkWI+tZC/zUR85bsYT+h5UAR/p
Ss+kIZ2U38tH6u/QkWunsv3Yy8flH/n3L6sw+i7h46eP+TjefFZeykf4Y51Z
PQwov4YPk8/RSqMon62Sjxb/pdxoY9K3+YgJmqVRaMbOo4aPCU2BepoUr63l
Y96do3PzPjJ6ucgHP3ecdYMW3f98jH8cEvJiOaO/63x0vj0Qnj+U/LN8jBr0
VuVshcV/uJGPmZygW/GDGW7mw/ndnHx7Ad3/fIi9GpWGxVB+Oh8ZV9vEEkdW
/wUf+wz/Var+JH+urH2Tb58LZQy/50PdZYiq0xs2nw4+mpy4jwrIXuqS7f/s
gmDFLjb/bhl9H4+dfoz03d8yemhe8f6TMvG/ADkOa+7eXEf6vwCnruw5syCe
nZ+iAEtmzLy+0Z5hZQHGreeqPn1K8WEBBEPXXF2nR/q/ALqfUlWT6D2CugCi
Ws3DjvQ+TkPWn0/g03RNyi8XYIpnk/FAKtcVYK7B5+ljixjWF8CsWyFo4VyG
DQS4Gfz8ldF5uv8FiNYfPHrbJrb+6QLEtdiIH0wif7MAE0YPeWN6mmFTAfpu
69nEofwmCPCr1PjPpPmsf0sBfNaFp5xIpXikAMO/7zrwg+4jOwE+WDlb+L8l
+1QAOaMr9SffsfNxEGDAr+rWjx6s3EkA23Fn81ZNZnitANzdz/ttEZL9KkCD
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
6Yvxz7z8eMVuuv/FaC4Qrhg+me5/MUIkxp5uTeT/F2PK9snKNy6R/i9G2x7X
eo9ZpP+Lcfntt3GOypR/IkZhsKmjynwmPyzF2PTVX1V+isV/2EaMVo73nW9y
xP9ifJnz1WK5C/G/GG8tpiZcmsb8sw5i7ImI9l/Wj8kPJ9l+NXqY7VNk9deK
ca+gbJ/6clbuKsaryY/3JMxl2F0MzdtxwTr9WX9eYvT+ekhmNDHsJ0ZN3Onx
vsfpewJi7N9zNefRWjb/EDE+Dlfr9fkIwxFiGNYcut/kytYTI0ZBxrDVBfcZ
5ogxR2tC+0VNhpPFMNhRvPXDQobTxTBO0AvxPsxwthgH7VzftP4j/58Yo4cv
PTSe2gvFOPwocOWyCIalsvYKJsukiuT/E6NYLibUjb4fWChGnE91pCnl7++V
1Vee8Os7ve8rEWPEyZ5z115g5aVinF54Z3UufZ+wXIwAr+/f6z+x8koxFMUR
Grb0/eMqMXYXODXlH2bnXyPGFYP2qeu/kf4vhm12l7jxHyu/KIbVsTGhVtMo
H0sM0eKPyod1yf4XQ7guKDfjKcMNYjhNzvmytIzhRjF0A4903KH33M1iqN+r
8e8OI/1ftr9VgW38OZS/IUbR34iFfD1Gvy/EWFKSY1FA3z9oF+N+Xu71+0cZ
P7wXY+CshtVjf9B7bjFKHQqNPi4g/hdj3t3qVyfe0P0vxsyMfZ/d6lj932JM
X+t/aAt9701OgvsWk7QtPIn/Jdj7pvTEZkuy/yVYEy5+M578A8oSfDt6K7+N
3o+qSLDg1u54J3pvqyqB6u1fGWvofYK6BNFzZ+9r60/6vwRTffUC62Po+xIS
fBixbH1rNMO6Epz5XL3jS1/y/0sAN7cuSwNWbiDBnVMfHgs0yP6XoDhg8NC5
imT/S2D2+MrMnCPE/xKEmzWm2d0j/pdguoNf0YIAsv8lOGWzs6uCztNSgoeR
fhtGRVE+ogTfh91cVk35cHYSrJ0QHdRI3zO0l+CW/TXLSGdW30GCnGnaLjPS
6f6XoP76C8vn7nT/S3BUof1rG9mjrrL1jV2x9HQuo2d3CSrHKfcXvad4tgQ1
1y7zjpyz+A/7SaCJFavOdlJ8W7aft0vfjfJnOESCfjt3L3Sl/OwICW586FRU
tGc4RoKF154OcKbvg3Fk642zF/ek9w/JEsz9cOiVjjrFwyXYPrNCUYm+55kt
QY9Msxm2zRQfl+BpYvpi7wns/IUS2J7h7b4dTfFyCS7o7lqaTd+TKpDg310X
0SPih0IJDhzruDyL3mPulWB0lKXiLMpvLpHA4IuGcdUksv8lyPpw8HHgN8qv
lO3PaH3f663k/5ftz1oH7+bblG8tgXPvBQ7j/rD6NRIZf8cnObRT/qUEbwf5
hVym9xwXJeAlFTdZ0Pv9Ogls2hyu96X49XUJFh3kJo4bR/lZEjiNdnLZeJW1
b5Sg6LJ8VQeX4vUSPL7AfZ1+l/hfgusnQsb/jCD+lyDq7K131TtZ/y9k9B1t
4OdI34dtlyC2UHGuHL3veS/Bl/nJvdPekv0vQfbJ64cMgxjuktHXr9sH+5F/
oVvGDzfXmrfQ91d/SyAMyTfeqUv5X1Ikfr1ook3+dQUpFkkvDVOm+JCiFGMO
9drSYcawshS+l9tr+sXS9zKk2L3idrM8fR9LVYp3x6cO8qP8OHUpPkbtL9is
T/wvRZjvkMILlF+rLYXaJLNzA+h7F7pSvOhcM2aROsX/pXCX7/y4h/wHBlL8
nj5BISaX/P9S+My+mLiD3vtOl2KxkevGToqHm0iRlTqitTOd/P9S6Ez/IV7z
ieJ/UpTGmjt2/8/+l+KkSZXKkPcU/5PC7sQ9v28C1t5OistT9+ZtOUH+fyky
wq4ZHdjMsIMUD+q2FTVQvoKTFK5XE6pOGDO8VoqpnXP54WTPu0ox+19X7/J1
FP+XzY9TMVxC+QheUpSN1wnZuo3tp58U8zJHLWml/QmQgr9uisIkXYr/SaHB
S+vqz6N8VymWP3BXmN7McIwUPfXbstZQ/JMjxfGa33mq9H3zZCnWhKzEywry
/0vRnrS56BG9B8qWQvTYDE6Ub8qVQqKbP3PjWvL/yfZTeYpC7ULy/0nBvWI+
cFoN+f+liLTTu8YrJf+fFIZStbqldL/slaKiovrWim3k/5OiOX/RMfU24n8p
HPLPvjQtJv+fFK3DdzTNofzGSimuj4qMvfO/+J/sPFvtE5w2kP9Pij27Tp70
qaHvZ0hxqaeapXK+xX/4ohTdFVGP59D3peqkuBg4hasczPS361IcCu3pfMuU
8vOlCNk0d/sPXxZ/b5TRw8LIq7drKV9fivPj/h64tIDF61uk2Pyw8lZ1T1a/
TYpjOu9cD1xk472QInRHdU+nzZTPJYVHVl7iVnuG38vm7ynZ7LyYzbdDioau
zsev77D5dUmx1LS0UplD+d5SSK20c5p0GD39lmKaZpJcqxvp/1txcvLK9gMT
F+D/AIygXdU=
           "]]}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1600.}, {0, 64.95518333284622}}, PlotRangeClipping -> 
       True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         StyleBox["\"Training data\"", 15, StripOnInput -> False], 
         TraditionalForm], PlotRange -> {{0., 1600.}, {0, 64.95518333284622}},
        PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "\"1\"", "\"2\"", "\"3\"", "\"4\"", "\"5\"", "\"6\"", "\"7\"", 
         "\"8\"", "\"9\"", "\"10\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8, ",", #9, ",", #10}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                   ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                   "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw9WHk81en3v7aSFlSDSpJSxpTQJsQbkSLZU1TXvnMXrkspJESKFjINqZSl
hSmkUVJKM2mhmpJSaEyrrSRa9PN7fZ8z/vF6O895znPOeZ/lY6ZXuKOvJIfD
yZTgcP7/9/9+ek1bt9dbj/7JAuwPKFlmln18jTnDsogt/TOtcqsZwwq4OunK
pDdOhCdju3ObZKA7nVfBhEG1U7YvSa4KnbC4GOVSkqujQ65UKWUN2dOA85BT
R3QDyWfjY7dBT+dYK4bn4H1/4qFRfSsY1kKc3JdRme2WDGtjRdPyGQsMCM+D
f9rUpnRlwjqYb+t+0ySFsC6mnHy0mPuJsB4etnsPl2uQPX0IrE8ZGuy2Zngh
7h6y/iP8DOFFcLDNyBx6vZLhxZjb1+SzKoX0l+CS7DaL66MIL4Xzrh63iTV0
3gBrh1Z1/NJB8mUo+O1c2uJ0woawufHXgvpmwkZwXNXc0nOG3muMBm1O6OPR
JF+O3ES/Gt0QkptAiZus51tM8TKF/LrJC182ULyB4h61+bGjGY4DeIZzX78J
pPNmkOa8+s1KhuE4M8QOTtkRk0hyc+T0L+ccbSS5OQ6mae1yGKT3WKBYT6Wk
w4vhOAsc/kmH9+oCvW8Ffm994iacyHDcCjQkuT973UP3W2LM0yJR30W63xJ2
648ZpMwkfSuY5d6T8R6g91tBp0ulReUs+bcSx4IquDxXkq8Er7uwaiCW9K2h
vpV38ok+2bfGePd9chN2UH5WYWpDtJmqE8Nxq2BwNLXQWET5X420ORbJmucZ
jlsNw5q2GTtHr2JyG9zKqH7DTSW5DUpuL2oyOUb6tmhcmW+vXEZyW1jcnzH7
p2SSr0GfmtWoe3I2TL4GDxbtHHvZhmGOHb7ONZ497LWaye3QGRygvCaO7K/F
5UeZWxOy6P61SFWsfCYdRPfb49b5orWtl5g+7DFm30qhxm5bdt4eF0oTtm0a
tvsfrrVHmPnSxW+tGOY4QPrKJokdKWuYvgOMpA/f+aeA9B0QFJ56qKWAvbfW
AVWDblWPG5k9jiO8s6c1WA2w98IRH+42nRzWZzjOERkf/ywxVmLvrXWE9dsD
Myb2EL+c4Fbw5kZwA8sfnLBD1cEyJ5P44oQiw3EWex6y/Nc6YbdfkVl8tDnT
d8bNpGz98F9Yf4Iz/FOdS/K0SN8ZYvXdrdPek74zNBbszbWoJ365IHh5gFTJ
PwzDBeI/pRPr6knfBa2TpZ4FqDNc64IB+eagbjPitytOJLi96G9hGK4wkjX1
zxpN+q5o2TuqOvQG2R+Rn+0dMNMh/9dhXE2s3x+HyP91GCsReLL+NPF5Hc4o
P03cqkbxW4dfIt4pqswlfrtBr+xie3MTk8MNq5q8NH/mEV/c8JNgR+yN2ex8
rRuWZl2pXF9H9bMeBw48n90YSu9fj/Je+Wf+N6ne1sOsTSKPs4e9t3Y97nds
qzq0mvQ3oFBuYuI3UybHBty7ZFHa7kD1tgETHj4rvq9O+hvw5OJH6W4+6buj
XKXz8KgM8t8dntbtFk1fyX93fMrdNX/0GHq/O+KEVzi3/uuXHngiMT9+623S
90BR6M0mnSSy74F5xTbKtx6SvgdefnXRlkul+G2E8xnpnUe+MoyNWJg7NvtT
BvW7jTCoPHIvlPJRuxHNqW7ZkTL0/k3QHhw6dm0J2d+EifaWB6LvU/43YezZ
y7rN+sSfTQAn/vHb/+bhZlScsNRfEE/6m3G7ze5c4El6/2bsaimKzb1M8duM
F0MVZv2fyT4XQsHUwei/GVbnoslvpmVMPt3Hxd6CBrdQK4a5XERLb9qjmUP3
czG+Z2DyphiG87lQfnK4Vy+K4sXF9ukpP0+dxOy3cfHsy63RHrPp/Z7wKj7Y
+ECSnVf3xI3nvavMu8m+J1ryjFt1DrPzXE/8VZ6cFkvyOE/8U+BcG1FB9j0R
LmVnNlxNfPfEvDoXo7AM1k/aPMGJKVYI2kf9xwtDFQ6e1UtYv1L3QrJcphLv
PfVDLxTu000Xv2WY64Vul3PWdy1Zv4vzwm2pKRdXFDP9fC9o7BcNOcczXOsF
v3fF31oPsv7X5oXneSe6N3RQ//bG64zGRdM/svvVvTFJ0cf41Diy7w25twOr
46XIvjcK/KO4YyyoP3rj8PEb04rA/M33xnxV+di/rrLztd64v+BqQGIAw23e
eHHh729XOsh/H7wynrFXpYH890GfmbVEuBzD8MEnX+t2ky6GuT6Ys2vqe41g
8t8Hq+8cWHGoby2z7wMb56Oyzw/RvPCBitSdkmv27HybD7i5AY/2abP7OL5Q
k2qf9U6ZxUPdF4l31G7UdNI88EW20vSqLzuYf1xfmBYuDJXWJP754rNFmbFk
AuNHvi/qz6Qu6tegevOF1cmqnkmXWT9q8wVHrBnvXWLO7PshQDR5uoUJ6//q
frDrl+l8Zsrk8ENimrK0ijWTc/0g4IWcr+mh/uYH+blj97Qbs/rM94PWm46q
9k6qNz8M/hqeI7OC+O8HlSle+u80qf784Rml6jhTgerPH5/SGuR/eFE/8cfV
BUsaEk4T//1xPWVoluRR4r8/3mlsr5NNJv/90Wy+RaxtR/b9IcxUjh2txe5r
88evnm5L7ldS/QWAezGpU3SP7AdALXu01Z1PZD8AXc79Y8MfMcwNQLLJ36ZL
Z1L8A/B0afnygYlkPwB3h84eLI8k+wHwmTv5eD+H3d8WgOZ9OTvqd9H8DESr
iV566GsWb/VAbF3Xl31kOcU/ELYKEpKlbxjmBqKkKFpJewLDcYF4LDM56/t7
in8gnu96eW35XpqXgUgw2tVlHsrOtwVC9b74WPVrmr9BOF8lmf7HGYbVg7Cx
fFic9S/NsyB8DzxtHidL/S8I3qF1B1uCKf5BuFuYFfUG1H+CUH3rylYvmh+1
Qdi+bNO4D26Mv21BKHWr1F/SRftXMBw7tz86rE/8D4ZpldqZU/ep/oPxduy1
++1nqf6D4ZI/q/RfI9r3gqGSWnjp7RuG84PB2VZgvyWK6j8YN7VikoOtqP8E
o+yQWbxqIPWfEMSZJSntvU79JwRuEeVH+buo/kPwcIXBb4YTWP1yQ2DZNKZh
ajrVfwgim5M8tCeyes8PQd+LpVmm1E9qQ7DNUklXGEH2Q5COBNu6ftpPQ9H1
bNh1SQuLh3oo+Doxs1qGiH+heNMQPkNURvwPRX56/jauIcU/FNtLZb/vVaP8
h0Iu69HczfKU/1BcML906XYHq9+2UFyXeuh59gSY/TBU65/rm7KRYfUwnLh3
GZ2dpsx+GF4uc7lp+MGE2Q+D53DOP++nGTP7YbAXbFEpczdk9sPQJNGg1bTC
gNkPg8mPzMuzjpP9MJhfk9PWSyD+hePzjkTrol7iXziO9uRYpXoR/8JxzGT7
i1pf8j8cWz5NnTOrmPaLcCx9IX11wTKqv3C0VZRZljrT/AuHztdP3Uk0r9vC
wYtJUq2n+ubwIH3xd4k1eQwr8DD6s2PjkqeUDx6memRKTzNl+dLlIW/exG96
drQv8vD11J1Kyy2MP/Y8eFXHXN2cys5zeVA5OVjyzZhhHg/zpNK2V+rR9wwP
blZ/ymvSPMgYwSlp35qHmDyfh+ozYwtUnRku48Gl7EDBYCDjXy0PyQV2vnq5
bP408lB7xP+hfBLjYxsP8RljwpSS2fleHip8vk2r+pPmDx+fYl27tUrZ/Qp8
7J3jMZMfRPXAB3+PXvncWPKfD9tTZ47J7yT/+XCNiK0d84zFz54P68TB05UH
KV98SArUFyrmMr7y+KjjmglkpYi/fExw1Q6qmc7yncHHNW2VRRVejL/5fDw1
m1p/vcWc+c/Hd3/N1kP7GJ9q+Xihl/S77X7G30Y+uri7FyccYriND4GazS+n
F7LzvXz0Nb+KuaBI/BNgfvSDg1/3MawwgvNbPJqqiI8C7M2Nl767hvmnK0CN
le7P46dQfQpwt9VJzXkz89degDF+sn1+ijSvBSg/pjzUNZ5hngBvV714lKNE
80OALVqlU7ZoM3mGAHJfrOvmcWifEUDRUGzsc5fdXyaA2tnQmq05NF8EyDZy
TPFWYbhRAHPXAzsTOcR3AdYmukkqXmW4V4AZiismpRYT/4V4rB47PbGV5VdB
iDzV3DMDLdSPhXheabWsRZ/xSVeIORndkvvL6HtXiEl9neOmGDA+2QsRZX08
8mIC0+cKYd6s3DpKnvGJJ8QS8YdxG5xpfxNCR/dNdI0p+S/EUK5GT+oRmifC
ke/ZrFEH6fuoTIgQ9/0W27xpvxFi40ypnuyTLF+NQgSddH1a9zvtO0L4jzeR
+UWa4d6R+3YPiq88ov/HRcAn72W1Zi3ji0IEcmbPHfbIoH4YAXBN53y2NWf+
R8DgY5x0dgh9L0dg8iOHI3/wmNw+AvNNs68uC2D2uBEwjbGpbKf9hBcB2bpx
u48X0fflyPknCR+vhLJ4ZETgIF+3v+0W1X8EXrVfFtlcZ/EuiwB/8EFAz3eq
/wjo3K5wLL7KcGMEbP4tbfpRQ/UfgS9jeB2aYVT/Eahf99vevPVU/5FoPLdl
7jMnqv9ItLy8YBbRw96jHonnKcurzJWp/iPxtEmra40r1X8kfIv1TU/8IP5H
wvDSIu6XH7QvROJbVVCCy2Kq/0ic+jmhXqKJ9sdIiL3el/u+ZPHLGNGPFxbK
B7D45kciJz7t3cg6zPyPxGNVxSOfjWi+RWL4goxIgvbLxkjUppxSn2NI++bI
+QUB4qY0hnsj8VZSGL2DS/wXIUfntdJ1Ner/IiQuWxqaRv6pi7DfRP/jQD7j
r64IA5IHfgQ60n4uQnqYhEZnOsP2Imz454SM1g3q/yJIa647YP6O+r8IR6vy
zifG0/4igvLv4gfzGij/Isjc+PptmhPtMyI8TzJy/duI+r8Ir1amycwYpv1C
hIoXp2c0c6n/i8ArSjPdv4vyL8Lwx4tV5x9S/kWwKrt3+rsDw5woqN++JdiX
ze5TiILWudmZJ5dQ/UehpOLcuClPKP9R2Blv4v1RSPmPQpzilrboJ9T/o3Bi
qgzvtRTty1HQ2DTZrMCE+B8F3fk7H4/67/9DUTAoN4/von6fEYW8Ka3fVane
8kfsFYgyhRmMD2VRUH44WDDS1pj/UXgy6bzZAwm2nzRGYcHWLHvZYSPmfxRi
XYNj9NOXMf+j8GHju0KP/Ww/4Yihpvmt5sNqdr+CGIVqi2oyHaj+xVDs+1Gp
rsqwrhjuX8ZL6s2n+hfjerWem5Quw/ZiHHcy67+yjb6XxKgbKnRYPI5hnhgH
4pI/jLNhOE6MnwYsXy3qZvtWhhhNDhciFY8xnC9G17I5u6+XLmf+i7HWzu5X
y2a2b9WK4WJ3dL/mZ4YbxZDIvXG7t5352ybGj8xAaYkcFp9eMTprWpdfHmD3
caKhJfyRcfQdi7dCNC63Pwx+kmWJ/wMExhzv
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw9WHlczen3z5I1RJasXUpojLKUZOndplLd9tJ+2/e6S/d2E5UYQlK2snaj
DCKJRkLdERUjUpiscy0tEsIIFf38Xt/njH+83j3Pec45z3mf93nuZ3pArFNw
fyUlpax+Skr//////nUabxWYRmik24L9AT07fyRfEnMZHoJPnuPm21rYMayK
w6Ps8upcaf9YzHFPvfT8gg3D6hgl7wh6U7aK4Sk43P90js5Za4Y5+LJZ++i1
61YMz4CB9Jiv4xlLhrWwv3ioxk7eSoa1Mco9PvrBIQuGZ+NCkuWBj9vMGdZB
NX/DZ+/bZgzPxYXvmvkdIDwPY6xa6vI8TRnWQ37ezfFdo0wYno+4iIk8p3Yw
vADdtdPfz/xE9gsxcEdR6mht8rcI39vaiu5vpXV9/LP7R8S6VDrfAG41U/Kj
c+n8xRh9YEa2ZjTZG2KJ5JG3z2TCS5CnujK3KI/OM8JGl+thd41pfSlaVPQN
skbQ+jJoei8/5qpM68thcC+gOtSK1legqT13u+scwsZILxFPO5NA8QG6Ri/y
Bk9hOAX4c67OzU9DaL8JVCqHcV04tG6C6JAF34rX0LopTp0X1X7bzXCKKYbd
3nW3tI/qY4YPi2XPeCUsvhQzyIMvL3yxmeI1h1PnyewD68neHBOvbLGwsKbz
LTBkXjs3PoLWLXBR957p1WayX4m18VLn/GJaX4n7A+8PHv6B7C2hnLqxan8U
+bdEmHbLxnYh8ckKFfk3FYvGM5xihTN1yN29h/hojTajJF2jtwynWOPMe+Wz
M4OJv6sw8XHCpFYzhlNWQeajP/baeOK7DUyujtmZrspwig0eyZKac3aRvS3c
U8qLd3STvS2OfP82w+4Urdvhu+26E1F3WT+l2OGNySszdX3qNy6mb9+3MrGQ
1n/2qbsS5H+Qf3tEhG7vCCih8+1hPfJjfnomne+A0SLukKWGzB4OODY7Tz3u
HOvvFAeESycNOT7S4X9Y7oCPWXddNg20Z/aOaK/ZWz88mekDHHHVrONjoyvZ
O2LvjZKVJmdYvHJHWD/uExTakD44oWjgcvUjv7B44QSN3Zn5t5/QfTshd/3S
grYkpgdyJ7zz2rxkD6h+zigyuP6aE834Bmf80dX1NqOY6u2M97pv6jasYHyQ
O8PaY92G/ZNMmb0LTCfMs9xxhPU7XHDo79SGUkeyd0FXotOH5Kdk74IeDYPa
2/bEP1eYv5gd2c+fYbjCmPvqq2452bvi4KCtowSFDMtd0S92cO3tkdQfbtCY
leM1LIPid0OeUMe7ppLs3eCVa26uuZjs3ZDw/taUwreUvzs+/+539cs1huGO
qwMiE9e8IT67Y3qr6KztVnafcnekbQyMMrhM+roae6JeztHLZ3zAaoy9VDio
M5n4shoPz5lXdeWR/Wo84prIDs4gew/0dv+T4LWG/HtgStrxTx+jyb8HOFM7
jepUyd4DL91q1/svJXtPTHja2GU7kK3DE68XBiS1f6P6e2Lo4sP7lM9T/T3R
+pvej1sXKH8vjIjO1t1mSP69MOrEsov7l7D9KV5oH3n5zOsasvfClxkPE49E
kr03tps+17V9QPbe+FMlwXrZOfLvDe75yy/nWlH83pBztSbZfKH4fZC/Vuo0
S4Xuzwd+G5oHcxTk3wdOuUnloaPJvw9svi927NtJ9ffFrS2ZFdv2Uf19ca3N
I+pdEsMpvnivnbT3XSPV3xftYV42hysofj+sbXv9Wb+O7P1QkXbapLWD/PtB
yTHa8BmP/PvBQKbqsd2D4uchSPBp18XxDHN4WNKtskNvBd0HD8PEi9a/VWKY
x0P93Y1BWlPpfnh4In6wfQnlK+Ohz/N2tnoI+eNhfNKff5vR/FbwsOnzvqrM
KorfH3ui80p6Msi/P0puDNjxegn590drxgiP6Rnk3x/xs/66+I8R8csfvz1O
FmobsHhk/iic6dr/TiXVyx/8DwU2j3xYfRT+mKlYvuKVnPQvAOdH9W2SvmZ6
xAnAlNoJmst1SA8DMPhLd3q/bIZ5AXhQr3ynsZj0LQAt2jZ9t3QZlgWg80vl
6Ob9pHcBKOmdO9N0C7NXBGDy197I2kmk34F4lXVssIU6+Q/EuO56h6AVpIeB
MBW1ddzUZZgXCPutljv7blF/BkKSnZOm7UX5B8Isdd1s+xq2Xx4Iq2wj4Yqj
DCsC8bizv91rC9LfIOwuHzrs6S4WPycIOSsqj/ufZPEhCKpOc8O+dTLMC4Lh
gfbIOQco/yDoHZ+2ztiNzQNZEO7mD41xeMfW5UG42LSzOuJXhhVBiHupW1q5
jPIPxpWROqs+/cXi4wRDrVdL0D+R+ikYzqWy8pcVLD9eMP6q6k16FUr8DsaH
t4I7DVLGB1kwzLZe2vhQwPpB/nNd1t2RMZ31jyIYmcfvn1A5TO+DENQd9mnw
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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
3GqoW4zpPXaK7VdjNUb2yrnder4Y/wc4LRTO
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
baV0/hHYZx5RX9RJ93nInnIoW2sNw7wIeOx+wLULZP1Ni0C3X/zmrB0Ml0Tg
Rwe/ZZJSVxY/AtW8M0v79Bg/eiOgUxCk2tdN/IvEHeu91h9/Z/45kbjp9MCj
dg/LB5F4N50/Q0nK+MCLhO8U/0vtPOJ/JF6NOv7H8m/U/0hcqHTo2/yA6o/E
8YCaLNlrOv9IZHy8b91VS/2PQqnGPp1Mf9ZPThS0h710KI+l/keheMqgKKuB
+h+Fn068+XVIplj8KNzeoF/sU2rL4kfBM7lj//h5zC6PgqIiOiwOMHtvFPjr
fhjXkWfD4kdDY4+y7GSANYsfjTqdBBH30CIWPxqLhy/RdecyOy8aF895JvEu
WbL40TgaaLrHaJDlWxKNmpJ13i+5DMuj4eo3ffS+94tZ/GgEpP3hV+9C9ceg
4OVA4Rk/4l8MKu7POcLrYxgx6ORUlGk1MMyLQdnr6rPFM2g+x2Bao/3UkQl0
/jF4vfy5Rdsu0usYKH0tH2ZzlfWrNwYHL4/aMNhC+stH4VctfddY6j8f94sO
zVXSIf7xEer46SelGMYHHh/z1uuOcF5E+s6HiWHrJfU+0j8+LhVd2Z/bTPrH
R2bejKf12qR/fBhOWam5KJ/0JxbXDM9GrrtA/I9F9sjk7vQB0r9YjGxSeXpZ
SPoXi1tjDGK3nSH+x0JT9LzhczjpXyymORYfXaxD+heLX07t3ljXTfGH9it5
t2UG0/yMQ3DRieHzS9l5cOJgZpc6u8OJ5lkcKszUO9UCaf7EYeyZrTq/yem9
HocljleaGjNJf+LQoLoouPQ86U8cZq75qrp6M+tfbxy+fRrMsJrNZfHj4VXt
9Ww4j/GFE4/vqosL93gR/+Mx7vxlzeAy4n88jicsUPsuYnxOi4d2zWaznjzG
z5J4nJPe3t3oZcXix+PP1G0dCc0sXm88UpMtH667S++/BCTdVT/13obVw0mA
jfM0+QUj0r8E3LjV2FfBJ/1PgJEn1yI/jO5/An5I97Ly+M7OpyQBTZYt3i8m
UP8TUD+x1e5QPTvf3gSs9rY8LCa+KAjQNO7umVNvGVYbwl/DM0bcJj4K8Htm
fWHgI4aNBRBWfql1/5P0SQCFHUUvjfcyvrgJcMcuyaQ7mGGeAD1jno4+7c2w
QIBNLQNlI3ppfg7h/MoHG84yvuQIUH69ed7jy2x9iQDv0le5/fsXi18lANri
PgyWU30COLbY/zpWi+FOAXbp7eLx6HumV4Ctt1/tzDjEzqtfgGkFi1+M86D3
RyIklZc0l4Sx81ZLxE2jXpV7nxl/OIno9vfc0hDGsHEirgn0vlXdJH1IxMiC
fh1/U4bdEtHUsPHnGT+wfvMSIQs68uWaCuOTIBHRj+qutluRfiaiPOzu4tMO
zH9OIvIm7a1/Pp3mWSJ+CHjdl/qJ+a9KhJvSb4bpS+l7JhH3C9UyL2ow3JmI
5PbvJf7RxPdEpJywG9usxPz1J+K1XWrSQXqvKwjxPXvyrvX5VL8Qp6QruyZt
Ij4KMZebaanezM7PWIhnWRytC6/ofSZEX+GTBI1ght2EmPzIOUHyN80rIXYu
cl/rM5r1RyDE2zMhhaY76f045M8xKkx1B7PnCLHvoZmgfxbpmRDp+i+OhGSz
9VVD62X/NPWU0/tSiKmzT3TvymXxO4WwC+Ae2dxKeivEcdnaqmvKzF+/EI3r
7jhupPugIMKaKydPF9kxvqmJhuZ1YZv+DcZPjgi/VIiL+jYxfhqLYF6zIdPS
mPRRhCxDP0+vS8y/mwh7yxX/zBRT/SK0zb81s+o2y0cgwtGNVu7n99P7TYTG
z/yB2nh23jkiyF5UxC12ID0TIeP+QQ07Y9a/KhG+NJ5W2XmZy+oXoSoszsFp
KsOdIoiCig26jBnfekU4UjxXJ+wu40O/CAPnOBLf30h/xDg2x/b9Eg2G1cRQ
GVHUeT2O+C/G8FCdd1erif9i8F7FTdM0oO9dMaSv88vPxbP9bmL4T3hfY02/
//HEeGHctWn6NVavQIyONdcfxeyg/osRKfVWc1pB/RcjbNMxF8kbdt9LxJj6
5J8/zh9g518lxsk2jkL7IM0XMVIbj2Z/+JH1q1OMC7d05d9Cmb1XDH3DmMyW
QtavfjF2uS+u48+m+SeBwuyOQ2ZzSP8kcEzqOl//iL5HJNj6d1Ot0nTivwQG
Vz/oFtWQPksQnOOlmGtP9UtweL6i6oGZ7Hx4Esy8Ne1VwW3WH4EEJz3e26QE
0e9pEhRHZ8SN9mQ4R4JOwWTr5d+YPpRIoKI/S/YpjOEqCbQM80+sG2T+5BI4
Ha6vSFRm+XRKkLqIo3rkLL13JegY597xwzeG+yUwnjeiWJ3ut0ISGleGmw6r
pP4nYfOn3/5w30D3PwlztgY8mkPfX8ZJKMitOHjzX6o/CenTCxvcFOn+J+HA
f27FN2vQvE7C3721SqoH2XrBULzf1XcV+RL/k5CRsqGzXIP4nwTNvPPcKw40
z5Iwct6pQE0hi1+VhC/zp07ddoz0PwnxKQvLoh6z/nYmQV3y4OOTLup/Ela3
zD2QUcNw/1D8C4r3BXfp/S2FUCMmOmsu3X8pJof0eHXeYJgjxWfzE02Kp2n+
SbHlbM8vZUb0PpNioj3f4EkY8+8mxYV3tuXBY+i9JMWg8tbGckuGBVL4uhnY
r3hH7ycpei/sd6w9TvNPitgZnqOcbtJ7Soq8/dt7ZoYT/6WI2N8QbcFj+cml
mNMe2L70Fc0/KfbZcDuWHqH5J4VEeX3TX/T7Q78U9dUfqwx+pPknQ6V2jnkD
9VtNhgXn+YoqKxgfODI0VD3prjlK918Gz8fbfnSLpfknw+jBrZtvXeey+mV4
um/c/f3bGZ95MhS0ah9//JjxVyBD9pkK3vyXNP9k2HvV/f5fTex9niPDet+U
aL4p8V+GRKuk7y3OzF4lg0uVOL+0mr235DIEdVkW1jWz91anDHPSVr4RpbDv
h14ZfNRtsfw4s/fLkBJR5Nxty+wKyUhw9O06N5Hlr5aMQV7bac/VS/Bfi5Ud
VA==
           "]]}, {
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw9WHk81VnYp2VSMwpJi+iSjC1jaTPIN2u2XNyyc+07l7uKqVtp37Qo7Rep
RIZiMtrupJKStK+vVEpp095Qens/73mmf/p8Pec533PO832W3zWIyQyIH6Ci
orJBVUXl//7//389TtIod600O2+wP+BhSUNv7hsfhtVwK5Vn391BWAOada65
/ba+DGtD7Y/ln+YFzmF4DL6s3J9nYkD28Wh/XTR1pzf5cyDa5bzA2Zb4DBHc
MmyV40dPho2Qnfgl85wNYWNkXjWpsP1tNsMmsOywj9p/xp1hM9j3vzdZfteN
YQu0BfQN6tjlyrAlwjQTPHw5Lgxb4WDLoSNPpzozbA39xi+eEwxnMWyDYXqB
senqtJ8tuiT1eePcCU/B18dNYTFvab+pUNRe3XBvFOFpuGQ9WzlwFu0/HSUf
Pxy8FUr+M6D3fZzZuDo6nx3k/r3R/ywk/Dt0P6dHRFnRenv0t6QrfvIiuwMe
Dqq/KP1G2BEZvaYa+nqEZ6Lg/Ha7xoN0Hidw1rklD5pB5wFCA2sU7mHsvnLA
tS5736mbZJ+F1eU6LY21DMtn4VP72ZPnr9J+zojP150emMOw3Bmd8dLcmhI6
rwsqQm2XB/7LziN3gdWouO6MMjqfK642B7XYLCZ/V1yUmtS87SZ+N/jIvIXK
48T/Y9/WUpTMJn93aLXINQSHyd8dXLfGNcMcye6BIs3kGR9vkN0DO0zcf+l4
SuebDZ0drZbvpjP9yGfjjE2OqruE9OUJm6OqdzwJyz3h2fGXxXAO6dELCw7G
Xi/hMiz3wvJxefLdsV7M7g3xy3Jh9Dmye0NjdG34xWLy94HBb56D+9rJ7oOb
C7UumdaT3RcLhicf1xnD8kXui2v2xa7rn1L+zIH/nQdaMVvIPgdZ0rFPnSeQ
3Q+btIQWs9VZfsn9YPqmRd3/HJ2Pi+qq4fd0Sth6cNE3xPHOdGs/tp6LxWss
OHWOLJ+VXHx0fvRbO4/y2R8zk334W0Xk74+W0vMzfdWIzx8XWnsHfZvE+JT+
8FihuVf2Xz4H4Puvh29XbmfviwC0vjYuOGDqwfwD8Ht917LR91m8lAEYkpdx
JXEuxS8QSR9cn5xqZPHGD1zWEHigj+IdiKXmagt+GsGwMhCLo8M/WPCcmT8P
R8o2zjb3Y/oHD2oeI7sK00mvPJgNOLb4p3yGlTxUNZtIwteTvubiSl35lR1u
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
           "]]}, {
          Hue[0.08640786499873876, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw9WHlczen3vxESkm2yDdlCRPYl5a1dKrdNq7ott73uvpDlYoyd7DVjuWLs
JaLE4JK1Yq4oJlv2JZKsWX9+r+854x+vd+c5zznPOe+zfG6vGIm/uIlAIFht
IhD8////+1c/0TSkwnxbTx/QH7CovKprxaGphM1Qnt3fTq31JWyJflbr3kqK
+XxHiEesdR9sybgzxqyePF3wYgrh7rBelKCtbcrYGt/qbO8OtPIi3BsZVbWZ
XxwnE+6L+7qlPayuexC2Qe+3fS6brXInPABPg1f41Nu4EbbFzbeTPAwZroQH
o8D4xc7kbxfCQ6DwOvFXcqEzYXv8JZg/oElPxsMwrK0iQWME4eEYl+VvW76a
7xsB91FLYue1YnsjcW/NVnHhVJaPQv3lveYlLmxvNDybWr62buD7x2Bw14Vl
OlPWH4vS0b2L2j1g/XHIKS4+fOoU4/GQ5LmNXRzP5x2wa47Nrh4FLJ+AVklb
hP/6sNwR8cfXd1txmOVOeCif3P3hUfZnIm55O+7+Nof9Acb98ak8dduk/2Ed
cLtpt5p7JiyfBPPMs+JSc5ZPgmP2zviafix3RnZsVnNHKWGdM3K9d7h7tWV/
XKBxNzlxoQP5o3PBlwMZTrU+7I8rFmw4aOhxivVd4RNo6tj4B9/vhpX6tmuu
RbPcDTOrH+4cFcH67hiklWri+rDcHY1ZlzupKljfA2169hgQU81yD/j1Gbto
XRn754nW01YFtppEfNJ5Qv7Zxykv3ZPkkzEnsdWTrbMJ6yajR8HJUafHMj+9
kGpxw+u2M2GdFxocjjwzKWX5FLhatSoYMpvlU+B+NelRexnLvWH6z92Bt5+x
3BuT9/uVRrRkuQ++a76VeH+j+tD5YE7x8fN5Q71J7gvJDOcD8TFUTzpfBPw4
kdclm+tpKuJb3LaZ3YL1p2Lsp6gYdT3fL0SXoRvv7zaSPoS4t3Lm1EuRVN86
IfYWBI+/3onq2SBE+NE5Nk0Xsn0/hP6S07VKxvp+eOP/9Gr+Arbnh1MVk9YO
53o2+KFAu2ZrageOrz8GTEx3e9NA8Yc/lOkl4YUqyo/OH0XTvy/W9iL+GPyx
PCM/q1lfzn8APhZOae4035n0A3Du+3z/N9XM1wB47Ap+3KqA6tkQgIIPhzdN
HkvnBYE4Fvzv4oTWrB+IIT5bzwe4sP1ANN3pZLYjirAhEPvm1UxePI/5E4TS
bxUXl34mjCDMyzm4XHKY+RSE+y3HeI67yfpBmJh1J/7QKO5f03D92omOSa/5
/dOQPVrooTWy/WlIifzjTW0f1p+GqSvODR1VxfrBEF6p1wT7s34werudXvMh
m+0HY3S6foijmOJtCMbdNhktJQrupyF44uPn9fUd5QchaKwcaCbty3wMQVB7
12XFz+m8IQQr+98QjhzD+qGYnWwjWRnM9kNR8Lbx0Mfr7H8oTFTvglNyWD8U
Xewbxz3bzf6HQbFmWc5oJckRhmt1PsZ4C663MPQTjfo4MZT1w3C/ofLI6eus
H44zwgtHX39i++FoWJHztCGNzuvCEfTER3zwC+uHY+qZTk7XLNj/CGT+uNrE
y4ztR2D3h/ql546z/Qjs/dkgKwo5fhF4X3BKfo/7gWA6dNpeM0/4c/ymY/yx
qGKJC+v/xK9F8WeOsv3puPliXOW62ex/JPa9qfjuMZr9j8TfLy4vlfXk/EVi
9TNHM8UHzn8kvE6atL6zlf2PwrJ17h0KDrJ+FPoYzi9b58X5i4Lnpe6Zy7LY
/yiU/1rf1n4N+y/CnVxJ3truhK1FCHI5FHGygeMhwpQtJblZY0guEiFlRfwv
O1dxfYuQ+7y/8JCOsF6EYUs/1ezyJ2wQod9Vvx+bt5E/NSIYN17wNvfj/hON
Lj02FzkI6bx1NPZkLPPODeV4RqPqpq+qTwNhUTQ6HOi1+fw5fl80egROGnv0
T+o/+miom20ab66k/mSIxsvaPX7HDlL/qonG8iJ7Q3sT3l9isMI+rd3uQjpv
HYOyxq23jKaEEYMd03fY7F5B/oliMPV6X0+f9mw/Bg+cKsTS3hQffQwKfBem
p+yjfBhisHTs4jPXQih/NTEIP9BraUdLns+x6JiVZzStdCb7sbifeuPFgk3U
vxCLThvGRKU4UP8SxSJy9KPFMT4TyX4s6m71T1Z1dST7sfgQ2Knbozt0nyEW
/tsrAr6tJFwTi2K7x9PLnnH/jEPlkBFSTXPy1zoO3y0nnD3em/tZHAROSeNf
LCQsisPedqbXZoQzP+Mw5ev9nD9e8ft/3rcl37MkhfkWh8tLBu+pi+T8x6Ha
O1c8t4r5J4bPlL7XY7sx/8Rw3VCxpWcyxRtizEgJD3cp4/yL0en3oTNefuX4
iyGwbTnLdzvbF2PyzdBs0U6eN2I02VV1IMKL7qsR46HJ8cc95/H8isfj3r9u
jwojPljH4+qQ+dv69SW+IB6Fd1P7FI6i86J4XPmgtjuq5Xkbj+q9ca/MK5n/
8XB+ebjl0gdsPx7rguvqhueSfzXxKBnbPyryItdvAp6+nh+dFcDxT0DLm3Pz
X1URP5CAQMdmLdOHERYl4Kv3jsddz1M+dQkI+xJeXGlBWJ+AtVGBjmu/8rxL
wJNZ8/vJdxCfahJwaHZ+6edhhAWJiPxQ0Cfalc5bJ2KJZ0BsGfMTiXhmEJ4I
PkN8ESViq0ffzM+DCesSUeS/J9hwlO7T/5TH1PUfnkXYkIib585+Eluy/UT8
/vXzo33lxF9BEhotFe+SXhN/rZOwcdPZ3ncWTyD7SbjYfY/N1NskFyVh5wHL
qj4rHch+EgI9w+IlQ9h+EmbtjbowcAS/PwktHBxMdteTfk0SHKsiohqMFC9B
MvzSNPsjAug91snIGbBImbSIMJLRZmCt/ksbfn8ykitzfB1e8vuT4T13RK/d
OZQ/fTJUlba15bu43yfj9bTwx8t4n6xJxuMn9395eZD5n4JORafv4xX3vxTk
D3epnziX+Z+C6vL902714v6TgvJGy6uDhnP/TcGNexer5oi4/6XAsruyri6V
sCEFhf62C7y3E39rUrCo+EjL1//tj6kwe/wu9OF7tp+KB4WS6O0i5n8qFDv2
h3j2pPoQpWLW9ErLTR1JrktFvUXzfdeS6T59KoY2WFkM28X2U9E2oT7RM5Tr
LxUH9YFdxL9y/09D0eq88B6RXP9pqAkZ7iEfxPMnDXcr1VE9ulN8RWk499Db
7ZSC94s0uNqMSo4NIL7q0xAwuthLnUH5MaRhySN99J+Hncl+Gn5suGBdrGT+
pyP6ZIPVseeErdNhtCmL6Heb+2867K50cNm+nbAoHbt6vo8saMb7ZToOVpae
26YgvunTEeu7cKPDTuK3IR2Dv1n5GazIn5p06NVe3v/yviSQwGrCrOamsfRe
awlW7DU/MjqV57kELTv82a7/EZ6/EsS96WY7OpT3CwmklXhnPp37nwQDZ1XX
xZzn+SvBzFU2UcvXcfwlOGFxYtWcRP7+lmJKRPc/Jw4nbCnFP3uVnStuEbaW
4rvyblBpP8qvvRTvgp74upUyP6Vo84/5m0vzSS6UYlzr1q1tQrlfSrHZ3sbD
ZzNhqRT3Nii7qLL5+0KKLeOHtrLdR3zKlMK6bq1JZ57HeinOdo06eLUF4Xwp
wjQFfSo7Mr+kPz0IfHhjLPljlCI5NWjBlKdcb1L8uLbm822ux3op3BbF/Hbq
GMdfhpF2ORsK2xO2lMFEuOHiokrik7UMn2faS7eNJGwvQ/A+s853bLk/yDBi
V4nQJMSZ3i/DklUJ3T0XMV9kkP6zZ68kn/ghleHAhxUDTXYS1skgPm7psW0n
3ZcpQ7uq7VWCfLpPL0NJRmpVpQfhfBn+zQrpcmYCYYMMlYuOZoWtJHtGGSa4
b3Y4tJz7rQwRrbUNt8R0vl6Gbv8gWnqP9w85HO1/l2jzCFvKUfTxWu/2/71f
jjGr2m76OpniZy/Hi+f+Lwv+YH7K4VM6OKLoGtWjUI441xcSgPkqh/s6rW+J
OWGpHF+dF5wUzOT9XI4b294llvD5TDnmppXFZxeRXC+HnUeXoE21ZC9fjugZ
j/YIQ3i/kuPb90dBYS3IvlGO4sruS8TuJK+RIytvlWnB74Tr5dgdcuBT+Vr+
flNgn3Z4SlY02bNUwCc1rc0uMfUnawVkWcPfe2cQ3+x/FrpqdXyZgPdDBUKm
ZNxM5HoTKvDs7WOZlRudFylwUzh8f2g0yaUKhBqPtniSwvuLAksG9S2WTiWc
+VPfv3rYrUm8TyjwtPp9QZtakucrcHbh3LjLuVzfCgyaMWhC2FCyZ1RgUvvS
YclarncF/MZWhC84T/7WK9DaZ0+XsvW8/ypx/4dgZ/QXqj9LJWpf5M0/Np6w
tRJmk797hi7j+lfCptS/eVodf+8r0V6X0UbAvzcIlahqM6frHd7PRUqsF3ds
VjyD86+E04nMPS+knH8lxFcyu3S8S/nJVCLp6pfa1HE8T5V4verV4dUHKF/5
Ssg6zhVndePvISXCGvoIb80mvhqVsKo/2/nuK+63P8+vLzr7/LgzvV+Jpmf7
T70yhrBABedNd67H2lC9WKpQ6WQampjP80AFc4vprn2L6by9CrYy3abLawlD
hWOLD7p0/0JYqML7Q7H7xvDvcSIVMnQrNAG/Epaq0PWAo0nmA94fVIi6btL3
sx35n6nCxzdNLPxHklyvwpfRC+KCD5M/+Sq41eTsfdiTfw/5aW/AR5w2UryM
KoRYZmSbiZn/KkyUD3ANm8L9T4XGDR1XL0vg/UONMtsza5StCVuq4VXkcDq2
BfNfjdOXP77TmzP/1XBNFNZF8n4LNSTHpr9dP47zr0bPMY3zlubxvqLGHXdL
49YOpC9VIy7V+4r8v/1ZjW8Pt/S9+IP5r0akS4hgzU7mvxr+uftnLzCj8/lq
NP5aMM5ox79HqeG7J2B1sJ5+nzaqMWlA7PyPVoRr1Gh2yaniOn//1aux+O/4
d3dP8P6jgfxerH7bEZ5/GpxODXn/rIj3IQ0e9dY5vfQl/+w1+Lh49WpfEcUL
GrTzGliou0TxFWqwNOT1bzlLeF/RIHuhp+/XN5x/DRyunlzZJYD3Fw3Ec92e
OVzh/GvQ9NyRdXY1nH8Nnjdx63zEgnC+BgOS7eaFf+D9WoP6W6c1u0tonhg1
KB70113zQYRrNPhUdt9UmUL7b70GYQ+utPKspv1aoMX9aUXjc5lvllq0u2H1
9kQnZ3q/Fu615f/evkD27LUw9NjeUB3F80+Lb3YP1gc/JCzUYq3ZVeGqPN6X
tUj3PLnFguebVIvfOinU1fz7r06Lhsazyzf0IHuZWszRxOWdNyOs18IiKrti
6Bp6T74W5wPkG0Oe836lhVPvbK/SZMJGLRY0lQf5ZDrR+7WQjTD9+9x8ktdr
kXv+8ZNmf1E8BDOg1bzupnvK9T8DzX5c+jRysCv+D+eXJVA=
           "]]}, {
          Hue[0.3224758424985268, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, {
          Hue[0.5585438199983166, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw9WHlcjWkbjkhZK8pWnJSdlFCW6mpfkNO+qc5pT9vZqpOlzqQMaUgileVg
UiTTEJNsp4mRiMJYa+bYIlkSsoS+vt/33F//9LvO/d7b81z38r4GoYkeEf1V
VFS29VNR+e////11Wpt+/zb07gA3sB/w2sPj0Jo3yxhWx6u375tHWxDWhN6i
yW9H5C1leBS0R3xzX2PmyvAY1H8zr0r95MywHiZeKSv714EwB7a9O36Uazkx
PAnBogOZNZ6ODBshd/XIxMoee4anYGr57iIDc8LTcLpg0PW843YMz8DtB77u
O/QIz0Ly5HXGc8W2DBvDI/e8e/pvNgyboOjXQT9vmE7YFA13XjzrvAiG5+K5
2t6z4oNkzwzpwTlLAkwJz4N1/Y0l4VZkfz5qrx+evuUb6S+AWYCpOGMmYXME
jza/pepB8Vsg55BG6+dCsrcQ6m2Z38UgvAj6K300ZAWEF0N1hMm3UGPytwQ9
D5QaE4eQ3BKmlbdO66SQ3AqSY2HON4cTtkab58XX536leIDhh6z+Uq+1/h+W
AbtXVmxPzqTzsEF6kyA7S5thmQ0a1i2Z1ltKcluYPTkaOe0ryW2Ro14n1f9A
+dnhXL9dBdOusPhkdtiX/fvyvNEUrz1sv01trtNn8cnsMdtv7aXBAWTfAWP1
kqLv7CH7Djje2NHeHUr5OOJIef4vZbNI7oiq9/afO/5/v06YcE3cItlCcifo
7crRKtGl+JxhVDyee6uU4nPG4PwLh3uyHZjcBQ1hmncTchiWueDt4CON2kuJ
n66wLLjpdn40wzJXVBbcVTisI/lSuJ0pUs26TPpLYTg9cUlcCdlfhuI6z6PO
RqS/DF0pFnvzb5J8ORYUW63O0mD1IluOZ5YFYxLeU/24Ibzxb22vblY/Mjf0
37TJuYdL9bQCM4XHRr9ZQPZXoH3tD8OuSLLPhau12oBRc9jz4KL2c+Glh6/J
HxexO+KVW1tZPSu4KHR+63VRQfXuDscBHPenctYP4A7Z6cXSM7cZlrnjhCwt
xt+HYYU7MmSKmpBS6i8eyMKNoP6jGYYHejgdgSuly5m+B+ySs2aoOJG+B3Yq
NC8t9iP/nsifml2b2urC9D1x9O7Qi42FFL8nCpslg+58YPkpPGHYtm5LWRCd
jxfGPhV+OWHNzgdeaL6b31nmS/flBUFV8h2+NeOLwguzX+mXRuwn/npj/OXt
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
           "]]}, {
          Hue[0.7946117974981064, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw9WHlczPn/L+26j8QmuxtDQkpNhHTwlFSUlO7LTPddM800M6y1s3KTcmRX
tqSinKUkdtE4c6xK7itR5DZytI7N1+/xe722f3o85/V+vV/v1/v1fB3vz7CI
1LnRXXR0dNbp6uj83////9NOrah3MhSOcAf9gLNn4kscz3oQ7o71W4riGyfP
JqwPWXDJ4qRUxgOxtsLz1BCJJ2EjbF0mudh7Est/xH2z9X+PO8r7CzCvMeTq
s1GMh+Ny7eL7Dv6zCI+AYJtpR2HXmYRHovhj85SOYlfCo/H0W/3z9bqMx+DR
X9PyT52aQdgCQ2aFPmuvcSZsCd/Suys2rpxOWAjRfePJVz85EbZGdEqQdRd/
xuPQVOFxY3EnCI+Hb0mb6dL1jG2wp8nd/XjBVMITsMb/nM6XkCmEJ+JvneX3
t/VnPAlr4zuaZ9jy/rbY39+jozRjGuHJqHDR1ZN7M7aDrLTeps9+xvaYeD31
8wRTxg645DjO/Kke7+eIbJOwKeNsWT4FFvPzBmtNGE/Fz8YbWree4vMCDt9n
fRq/lM6nBvQt1+nGpLB8Ghx05o+2uMXyaXgd9V3XW5/Zfyc4rh4y544L7a92
wsLCV8G/fOD7no4t+edXP1QQVk/H0bQbzVodljtjbH/jWp/+FA+1M5xPG8St
7s3xmQGDn5WvunWQf+oZKM75rcfFDSx3QUTpNVf9KSx3wZpXBxsfSfg+XHGh
4+zdtFKWu6Iy91PppnfMDzfM9u6cvi3VheRuSDjm8Px1lhvJZ8LobfV818+E
1TOxIXjDgW+vMB9nIcva4GOnF/FVPQuTY6+Y77vL/HVH+mYL/Uohy91hNuJg
9aK7rO8Bi/3Vj054s9wDj0Ypm0+9YPlsPAhTeU48Qfmhno1jumX6/Ro5Hz1x
2ft2hpkVYbUnhu59/++kwSyfg/J1Fr8e28n7z0FurrfluBI+nxcCFrlErD5B
6+GFZ2/urzEeN4fWe8HI+H2weyDls8YLTSkp26JLOZ+98fjy7a6DuhGGNxpf
L7jYtoTP442729zXfmNF59d4o2P7tbUTnrN/c/FvrukP3f6h+8VciN6Hud3I
p3xWz8XGqhUm119TfDRzgS+LPSVCwjo+0HNvMXltRvGED0SZ9yd4/sl88oGt
/qkKKwPCGh/cmpQz7/xFzgdfXHPZ7a31JD7DF0pnnXhBGOv7QiQyrrj9kPV9
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
w5n/ChzNdTnlm8L8V6DTYpvRk+vMfwWqAzzz/6zk+v91/6UeHzt1CWcroJm9
c/kd7gcFCrxIGLXtcjvzX4GQkfEl1tN4vlBg881O98lFxOcGBUz8Mweb1XD9
V8DowYoPA0YT1iowzLub+a6n/H5XQjBhZ8qTRq7/SlgcXiIZOorfw0r87ak3
Nn0O3bdQiYjZYRMGT+fvDUpUKqea2hhRfLyUmNmlj2vVEOKPWInERhcLQ+a3
RIkvwWOuLM/n76VKjJ83/LypLfE5W4lF91f/0bud+a/EOmunteKppF+uhH2R
hbQXf8/VKBFUVXf52Ef6XtughFdaqIvXcppPmpVwzXDOd6qh+VerRE3eA6FT
62TyXwWLFU/9itJpP30VcjojrXR+5HlIhQbTPItUK9pfqMLV1EjdkwNoPVRw
8Km2PGBB2EuFTKOFO5S3uP+pMN2txsPrAmGJCpN/e3Csy0TyR62C99W3B+4Z
kzxbBaPBTkencn4XqDB00+pfLhty/qtwuEwW9iKW5n2NCi+ll2H9DckbVFgy
d9UFu3kkb1bBICA0T/yFzq9VoXvejJGR5fx9ez5uj/vkn1XG+T8f5i4Hnacd
n4H/AUviFCI=
           "]]}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 401.}, {0, 65.14203288058243}}, PlotRangeClipping -> 
       True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         StyleBox["\"Testing data\"", 15, StripOnInput -> False], 
         TraditionalForm], PlotRange -> {{0., 401.}, {0, 65.14203288058243}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "\"1\"", "\"2\"", "\"3\"", "\"4\"", "\"5\"", "\"6\"", "\"7\"", 
         "\"8\"", "\"9\"", "\"10\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8, ",", #9, ",", #10}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                   ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                   "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
WuhKvx9w0rFzvSTo8JpF+B86OA4n
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
+IqxYZu2afPfDNeK8cftlZ/0HtC8E2NJvKulC71POsUYvnFIwu6N1H8kKGs0
tbuWyb7nSDDRwHyAL72/uBKoz9v1/cUy5p+VBEaeqa1T6f0NCXacNpbEVZL/
ElR79Z5LofnAk+Bjf6/UvQLyX4Llpze8gj3xR4L4txrr0+uYv9kS3PBx+oOv
T/5L0G07bvpaP/Z9mQQp9cGyj43UXyRoL642fz2S4VoJ6gf52x26Qf5L0LRz
wY4bpcyeTgmCJhoMmLCW+k8Sxr0WRB+4yvLLSULxrvQ2/b00j5KQGVKls7aL
8cMqCRua/Rb2c2P8QhJK10691rON8cs7CdGayi55f4Z5SbgY8qRjcguTFyfB
/gkvtuEZza8kRO526PDQZjg7CapbR0Tr6feHoiRcqEt17zBluCwJg/4VvX16
gvarJOw66uxYmM3iW5uE28mnIw1bqd6T0OfN69YjXpT/JNjdDtTo50j1L8XD
gMxZl3eyeHOkeD7Dd6HVUIa5Uugl9+Gs8WX8s5Ji8sY9Wk0tbH5AipdRPU5Z
U9j93lJEzTLT+xBB+ZdiwMew+LORDIulmNdbfequL72vpDBui93ZPZDJZ0uR
ef7hq8MDqZ9IMWphB7/QkOEyKRp+GT5gI+2HKilG6GedXvSe/JfCOjQ3P9+O
6WuUwjX31oSj9P7plCL8MafMII76TzKGnbl2dJsOk+ckw29pwMwZ15k93GQU
moznlfcw/VbJ+NOpMnvyTnovJcO2937/Zf7kfzI8e0uFi4toXiYjrXRI79Uw
Zq84GddHpMbrxlH9JyPXyvrsv+OZPdnJML5kdOOcFuU/Gf8JNLrSo8X4WvZT
fuSK6fkiyn8yDGU5Lsfq2fe1yTiel/2keTjDjcko77piffkl43NnMk502px6
WkbvJxl0cnISs+n9xJHhzb5Ps4b9Rv1PhmVc471T1lD/k8Ej7+vzdAvaj2QY
9Fk3weIKO/eWoctvauboezSvZXhWf82124zVi1iGSzWzH9yNpv4tg23x8j67
OKwfZ8vQ2+P/aHAF018kQ+Tw76Vj29j9ZTIk6V99/55P70EZMiY/ONG+gvyX
IXru1K1fO+i9JcOQK82FphYMd8rwJL4h7PEF+v1FDvW2pIEj6fcdjhzDFr3+
4APqf3LYfV7uKcpg+bOSY6GubbD7K5rPcmSubTKui2D7lrcckvMxp0fHs/rg
yVFp43tP4cC+F8vxpjNXscCM5rccGVwLfc0xTD5bjn/4PxaqL2H7fZEcB/RD
e3uOs/2tTI5t53RnX3hvy/yXY+MOXuj0l+y+WjmqaoQHrzTRvi/H+jWFPh01
zJ5OOfY2P7AZEUH7nwL91PbNrd7N7ucoMKMlxmDAX/QeUaBa/VF99j72vZUC
P6bMMXb6QfWvwKXcZ3/ZBDB7vRU4c2TFejc72hcU6F19LGHlKRZfsQLvzMeE
aQrp/aDA/djF/7jdJv4rsHtw1pfy/cR/Bcb++XpZeSvxX4HMuwviml/Tfq3A
vZfmztueMlyrwOMby24dKqT3hgJ9/QtvG/zL7utUgLP9xc28BOK/EmF6858G
5TN5jhIuwUY12tQfuEqone7v6fU344uVEpt0HUa906TfB5R4cbbNzFjI+Oqt
hKuWzfXCPfReVuJ5xsitrhrsXKzEAr3ZR7O7aX9VItwy7aihPsPZSux5Dy3F
SIaLlPhgUqzK3M/ky5SwDDwj7Chl5yolNtgZTvDzYOe1SlzWX/90Av1+0qiE
1qP0PQejWH11KlHZkhjy8BHtvykIuLrfIyjQHf8FpFETYQ==
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
IHN6/6zEyAcTZcefe+B/ie0cpw==
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
1GXfDCD+L0NZA//Z8VxP/BfdtiSy
           "]]}, {
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
NL+FP/St3a+ZfSG5RAkTg4bWkmP8fitxXmTgt0dO5zOVOJt6Z2K3hbS/a5Vo
rVglvGRC8nwlNn8e+PHT71MofiUu9hQ1+xgRn8qUsD5kb39wFflXq8SBDa46
se5kr0UJuzU9hPZ+vH+ofuzj+YcS/6LvC0MVjksmbHfk7xeBCucvHF3oe4/k
ViqIfz2R7lJFGCrk7mjXe3+W/PFWoa2ieVeLCfkvVGH8CZs+SXfJH4kKnsGH
xXom3P8q9Dx5JC24nfmvQqunbUmYPfNfheSiMrmPkuqVr8Ijgy/9BeX8faFC
SmxU/wPBhMtUeCLxWPdAzPueCj85PG592pPrr4Jdp/WdBsfx/9/UqJ74fEaA
Adk3VCOv/4UrK7mfBWoImj7+M66E+1+NnuWaxvPD+P91avRuevJSvyPZ81ZD
XW9o3K2E558aU7vadfVaSvYlahS2+nYZzvupRo3u6qB97wtJP1ON24lrjE8Y
8ffsD/v1UZHv+/P8V6NkTYrfcjXvt2rs19/80vkN978aOSbP1o4t5/jVuHL8
aqVgGfVHixqddYJ82w/z/p+C+6cn9NKNdMf/AQmlLhM=
           "]]}, {
          Hue[0.08640786499873876, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.3224758424985268, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
FONv39I5I4fyPCjG9bhA+dMthKvEaO+XWjyP39daMVaaDXo9vgudt1UM/88W
RTOnM/8kOHt7+OScAlovkOD2hxHGt38nuYkEE2OyY9aMovswk2CFR5pDfSe/
lyQw16ru9k0n7PYvdjy9cNxp5osE/bZVvymPJvtiCZpGbSiozmX+SmCWvfxB
xBWynyHBnS9lwj7nif8aCdY4bVKfMSP9Qglyqht/8a/n+iZB0Fmn6L79CVdJ
oIletyvnO643ErhFCmsKiuk8rRJ4aeM0H58w/xMw2EQ4XRVE/BAkQDqy+lHR
NO5HCcitzWq3WkP8MkuAlcF7q492xD8k4Mje4Mb5+wm7JcDgZ8Oih82ERQkY
ZVF3MI7rjzgBY3q0L54ronlNnQBTM4vUwivE74wE9Kk54/bnTMKaBNQJnRdq
ppJ+YQIWJ6W1Lazk/pIAE2G48LIT4aoEtJZGCHdM436TAAtB4pwn14nvrQno
dnxCjwndmP9S+Df33bnfhPkvxZ+Km6ofvnI9kP7roePFC8V0v2ZS7OpbI7Xj
eQtSJK1R+PeZTvFzk+Loiinp+su5X0jx1bVUNXoLYbEUxxadiikyZf5LkT/C
QnTkH5pfMqQoy47NH+o8k/yXoqrsSelIfcKFUqzek5yfd2kG+S/FGMuEGebb
yX6VFCHahgVpIKyVwvZZ/20fW8h+qxTH7cp6pDbw/CODyHOxRNqbsEAGjxz9
2y8SuR/KsNVKoDemhc5rJsP2OrOHzxu5PsvguW2zzaU49l+G+KnjlpUOISyS
4edX5fpJ09j/f+XfNumpP5FcLUPdRu1tAX9fyJBh5MUP6e6FPE/JUPhugPN/
9btQhtd92l687sv1XQaDM5KmFBeKZ5UMl36eHVB1nOutDP0F5ekRr4jPrTLU
jKzvMukyx1+O6QWCod9/Ir4I5AgK3ZczOIDrsRwZQ6rylz+m9WZymC+oTO/5
lPujHEaPdnXJqqH93eSYcyc9JDWN3ytyXO1fbKjfnfgsliPrXevdc1v4/SLH
6E3ukjVRtD5DDpuRpjXeLvyekmPKML2IEWW0f6Ecf1ZmDJzSh78nyNFR8PHs
Cv5eVyWH/4tDv177wP1OjnBDA7XMlHCrHM/GFT3Pa+TvPwrs1xWNTtYnLFDg
U/WkHoO2UHxMFNi46tCFEycofmYK6LbFO3yr5flIgdtH9hz8y4+wmwI7e4Rd
SEnmeV0Bu0M7Pxvw9yuxAll/ub9x+IPkagWGfvmtr7WA6nuGAs2i2atl2cx/
BQ7vHbim0o7rvwKe+1uMOyeSvESBxvdPVgS8pPNVKeCqWdnTuY7saRVQHvac
usCA7LUqMDJ0QmfWF9pPRwld47cjzkRS/gmUmP6hSaw5SXITJT50nMPpm5Rv
Zkp8eWvYkTKO1kOJjSu7dGv/ROdxU6Kf9z9x15fye00J04qmS7m9qV6IlXDt
3JY32JHnVyV8Xy+bOWAaxSdDiR0XdnjOX0F80yix+abt87XhFN9CJR6nTJ88
Por5r4Sh8YFoWQThKiUSjTc0Tqwjfa0S4y88/zo1mfRblThx9qjRp1D+fqTC
uULltqJg0heo8PbW7iFzZnD9U6FP53e6tQFc/1SYFfxdQstkno9U2HRXPqQn
55+bCvrr345WNPO8rsL5pCsW7i5kT6yCZa/ZbUZv+P2kwpjhP9111yWcoUJq
xSLbbUWc/yp0KXmavPst+6/C3ZjOd3P+e1+pEPVTaqZRCPNfhXGvdnc1/Jnz
X4V9ni05Pr0on1pV+HnvzV6DOH90ElFsYLR//V+O+B9Fiyg1
           "]]}, {
          Hue[0.5585438199983166, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Ygcb7OT4x6OoZqazSQi9XxCP7Yr0JUONeZ7EY/UU/8iVXL/CePQIzM1Z2ofz
H4/m5V/bSoZx/uNxVu+d8uNWrtd43F/nuL9pAvFJFw/zc1XpWTt5f0jA6t/j
h/UYzPxLwJCTjzrzpxNGAhZenfvc6RLzPwGnnk7y2LCB95EE7DDIftyyi/it
TsDwi+/6WHTxJfsJcNyQu7bTeB7ZT8A1G737DgW8/yRiXXPcP5V1VA+CRFyP
GiLGF7afiPwvVgcTMwkLE2Ebb3K1cCPvW4no6t8xdVQNvU+dCMvJmi91G7j+
E3GkfvLluTqu/0S03ezeNvU08y8JhqGlPSvGExYk4UGE7T4LOc/DJEQdW7xt
WCnxTZiEU8scWhdVcH9Pwhi9blMczZh/SehSPNws9xvnPwnvQ2sLts9l/iXB
yvrIrIJqZ7KfjOq6nl3u9yB7gmSsKutXG8n7B5JxbXNZidMxtp+MyJDaPTPK
mf/JuGUfa2jeQPLqZMTlmQ1yucv1n4yG4Z6irafIP10ydnzq/XNlB/ffFHR7
IXUtPcf9LwXTG54WjbChfCAFH+44Zn90oH4mTMHdxY52s9/TuSoFW0amf7L1
JKxOwYQqjXuzG+VLmwJl83WLoAjmXwqCcxyr0i5y/01FncmATG0rvUeQiv1d
Q0v3WfM8SUWwbeGCCT0pf8JUZJ8794udkPebVORWWIhLbdj/VLSk/2hb3Y37
TypGvW55FayleOtScWnB0tLSep7faeiR79X8oojqWZCGrmMKHM120r6ANGRc
0NX9quT6T8Pxz453z+3n+k/Dyietb295kn71d33aE46fitl+Gj6ZX/dp8+T+
m4buF4foby7h+Z+O0BtvgvsYcf2nw3tqQZjpMa7/dDgmJXyp5H1ImI7eI8eE
es1h/9Nx+OFkJ0U76Ven4/TIQK/Ph9l+OmYPM+s3xJb5n46LTo3rqmZy/jOw
/Pz5gKxJlB9BBk5v72PbrYDzn4Gf7P5SOrZz/jPg+XpOcUoFf69koMeUrDs5
rpz/DDyNjej/TZ/zn4Fn1Sl6Px2kfOsyIJxxouTtS7YvwtdzBV9DDAgbfcfT
3z1s5/oUiLDnXY/eK3dQfi1FWPb4y+64s1wfIgT6dWybxd+nviKYJhUNuzmC
4yWCtcXG0zI3yo9IhMpBW3rbFfH3gQjP33Z91H875TNPhFeNd7a08P6oFqHm
+e0Ao0rig0aEhvzt9p29eR8WYWOLoVdzKOF6Ef451BruZkhYJ4JD4OoTcxfT
e9tF0Nmrq3u1cf7FmP9+8rSgDfQ+IzG6Xk8PXd+b7gvEUK91tfCsonhYinEn
tERzzZXnoxjdxxUdPhZJ2FeMdQNHFe3X43nxXd9tj/P3RlD8RGJEB3Z1fRDC
/UOMk7m7OrZuovfkiVE80b3zEPunFiPbZ/+J076kTyPGCkldr2Vyni9ixNre
9XvvR+f1Yiy9UXa3cxb3GzHKPd8WmD6h++1iTKyP0tv93/1PguHBI51fGxNf
jCS4+e6X7aJq5qME3V/ov/n5APHLUoLHz9bPWBxGfMT3+/uW7j70C/HRV4K+
kwK3Ft+g+0IJ5tWsSF3A80MkwZC4r7UxUTw/JHi/oClr/ULiZ54EwrNpZfY7
eZ+UwG1YWVT8Qnq/RoKQA25uizJ4n5bg0w/h2+qqKb71Eni4Rddnl3G9SzDF
dHfW/XMUz3YJFq3UOC7lfV8vE+41hknJesRHo0xcvxAekmVD54JMaLKrCux+
IHnLTPzabFAjFtA5MvE5OtRm3VCy7/v9/g5x+igh98tMLDTXd24+QViUiccO
2j7Nu7l/fJcPbPCe9RfJ52Vix4CvA/5Yw/0kE2n3SsYb5hPWZCK1dfKBzfnM
/0yYVB9XjP6H/c9EeN6jz3preN/LxIgB91JMnxNuz8RBP/2/9mXz7w9SeCdN
DOlqT/qNpNgw6tiW8HHMfykm+iedr2tm/6W4YHJAMJ/vQ4olgvN2B//h+pdC
taPmt1wrrn8p/HR3LGBB8RJJ8U716Xcjc57fUohXSk9lebP/UsR07PxlxCre
p6QYlnt1qvw281+KP2ees3zN/milMM6ft8dPTffrpTA/7q75nxPMfykij6+z
NP1CfGqXIuzsaUTn8O9LMnSZk3WvoZz4ZyRDTmqlsX4Tz0MZyqycxjq4EbaU
YebY2s6Jnvx9IMNAvfKkU5Uk7ytDWlrO7GnFvC/JcLZleu5xBdWHSIbtcb5Z
tir+PUqG/IhLtbvM6TxPhmu2nwxHXuXvGRm892gfrR9NWCPDoLG6qT0cyb5W
Bv3NscPN55H9ehkaCi9pvG/xvJGhNTNa1f9Pike7DDM8LteUePD+JYdKb0Cs
XSLF00iOhry2V8dnc/7lSIgJEm8+wfmXQxB5Y9Q23p8hx4NhzX0mNFL9+Mrx
cayJqrOF57Uc3tZmi7uOp/siOZrHLB9w24H7vxyX3J+vP2nE/V8O4ykJJlOr
eJ+XI/rmmGd+/HuBRo4LOWMDcqzp9wKtHG92tlUn3SF99XJYvrx/JOAL6dPJ
cUgzJ2jELpof7XKsqXjS92ClPfmvwNN+lrcmKkmfkQI28m9QRdB9gQLFJ/pv
3ehC9i0V6GsxtnLzXt5PFNBvEQ96dJbOfRXI6h273r0/vUeogHNoVPmLIxQ/
kQJpKbdrnhVy/StQvdblP6OVlK88BdYnzJy/YyLv0wp4XYveZLeX+KdRIPrX
+J9vcX/UKvCqTur7QES4XoHylKY/Dt/kfU8B3TB3SVoq6WtXYPMKv76feT/X
U8JtnJGxwTOyb6REikHV1a9neP4rMUhZMHOUM88/JSbb3s/XDub9UInumsLj
784w/5UIH77i/eUk/l5WovRjRWQb/34gUmLzBofDewP5+0UJgxffFr0qpffm
KXHR3bA09R5htRLedXYPrZsIa5RYs3TPEhsBzRetElGLe190XU766pX449aB
ZwcGENYp4Wuwd/mH+3S/XYnckysPtdjx9/8izCw61feo1Af/CwB0D0Y=
           "]]}, {
          Hue[0.7946117974981064, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Cy4b7K+NOUZ6FmZBucQsz24T9S9RFi4vPmzgtJPs4izc3epZt6OY9Z+FeLvq
zvev0PiyLJR/THt69DntB1UW5vbM9Iq4Trg6CxFe4p0dH2k/qLNwZplwsO0X
mq8hC98Tf/tH6UdYm4URp4INXDJp/vYsXLiwucy6lL9fyDHEqSPB5h7Nr/8T
P3T2XHaF7AI5nmd778pzJ7utHA5WNRc+diU75BgvrzXK/IXsQjmuDqh6m+bE
+1+O2MOS5t6GVE+xHGcudtY//TvfH+SYY5rRcfAX4qtMDs3Nq6VfpPyelKPe
JfpWSSHptVqOremi72f38v1aDlORcneyF+tfjvUTsk5G8v1NK0dD8/fR+9LI
v10Ov8TPCzPy+f6pQHHBw61H7Gk9+gpsHLVnak++LwkU+C5c8f65JWFbBV4a
F1bH8fdJKGD1eFHFqCk0v1CBRTE6e+RCfq8oIGk76/bLRcJiBfRXzpqmOcbv
ZwWMJ+77ZnmR/MsUCDgf41t/nd/zCpw46mAS3sj5KyAcrVnzIof1r4DjBz2l
022yNyhg9Ckg95E5569Av0+xelvbaP+0/1x/ytPaH/ye18mGWXj2IjOND/4H
JoEJIA==
           "]]}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 400.}, {0, 64.44598045641227}}, PlotRangeClipping -> 
       True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         StyleBox["\"Validation data\"", 15, StripOnInput -> False], 
         TraditionalForm], PlotRange -> {{0., 400.}, {0, 64.44598045641227}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "\"1\"", "\"2\"", "\"3\"", "\"4\"", "\"5\"", "\"6\"", "\"7\"", 
         "\"8\"", "\"9\"", "\"10\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8, ",", #9, ",", #10}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                   ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                   "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7932575158645086`*^9},ExpressionUUID->"71e89ae8-0cd1-487a-a962-\
dad3619d4163"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pred", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainset", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "validset"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<RandomForest\>\""}], ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], 
   "]"}]}]], "Input",ExpressionUUID->"da006f7d-f859-410b-a8a2-e7754be924a7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {{}, {
                   PointSize[0.125], 
                   GrayLevel[0.55], 
                   
                   PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {
                    3, 1.3}, {4, 4.}}]}, {
                   GrayLevel[0.7], 
                   AbsoluteThickness[1.5], 
                   
                   BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                    5, 4}}]}}, {}}, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
                GrayLevel[0.94]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["1600", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.793257682209585*^9},ExpressionUUID->"c23c616d-2a40-48f9-9aa5-\
ee14dd280e1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorInformation", "[", "pred", "]"}]], "Input",ExpressionUUID->"3c68e110-d31b-4f41-82d3-27142f2dc757"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12,
          FontWeight->Bold],
         FrameMargins->{{10, 5}, {-5, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.93119, 0.93119, 0.93119],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Input type\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"\"NumericalVector\"",StyleBox[
                 TemplateBox[{"\" (length: \"", "9", "\")\""}, "RowDefault"], 
                 GrayLevel[0.5], StripOnInput -> False]},
               "RowDefault"]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox["\<\"RandomForest\"\>",
                TemplateBox[{
                  TagBox[
                   
                   DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 20, "Length" -> 4, "InitialType" -> 
                    TypeSystem`Struct[{
                    "FeatureFraction", "LeafSize", "TreeNumber", 
                    "DistributionSmoothing"}, {
                    TypeSystem`Atom[Rational], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real]}], "Shape" -> 
                    TypeSystem`PackageScope`DocumentShape[
                    
                    Association[{"FeatureFraction"} -> 
                    TypeSystem`PackageScope`AtomShape[34], {"LeafSize"} -> 
                    TypeSystem`PackageScope`AtomShape[34], {"TreeNumber"} -> 
                    TypeSystem`PackageScope`AtomShape[34], {
                    "DistributionSmoothing"} -> 
                    TypeSystem`PackageScope`AtomShape[60]], 1], "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[59990525], "Type" -> 
                    TypeSystem`Struct[{
                    "FeatureFraction", "LeafSize", "TreeNumber", 
                    "DistributionSmoothing"}, {
                    TypeSystem`Atom[Rational], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real]}], "HandleQ" -> True, "RowTarget" -> 
                    20, "Data" -> 
                    TypeSystem`PackageScope`CacheHandle[59990525]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FeatureFraction\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FeatureFraction\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1948831797][{
                    Key["FeatureFraction"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1948831797][
                    GeneralUtilities`Slice[
                    Key["FeatureFraction"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1/3"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1948831797][
                    GeneralUtilities`Slice[
                    Key["FeatureFraction"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"LeafSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LeafSize\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1948831797][{
                    Key["LeafSize"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1948831797][
                    GeneralUtilities`Slice[
                    Key["LeafSize"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["5"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1948831797][
                    GeneralUtilities`Slice[
                    Key["LeafSize"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TreeNumber\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TreeNumber\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1948831797][{
                    Key["TreeNumber"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1948831797][
                    GeneralUtilities`Slice[
                    Key["TreeNumber"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["48"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1948831797][
                    GeneralUtilities`Slice[
                    Key["TreeNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DistributionSmoothing\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DistributionSmoothing\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1948831797][{
                    Key["DistributionSmoothing"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1948831797][
                    GeneralUtilities`Slice[
                    Key["DistributionSmoothing"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0.5"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1948831797][
                    GeneralUtilities`Slice[
                    Key["DistributionSmoothing"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1948831797][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1948831797]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1948831797][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1948831797][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                   DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                 DisplayFunction -> (#& ), 
                 InterpretationFunction -> ("Dataset[<>]"& )]],
               Annotation[#, 
                Dataset[
                 Association[
                 "FeatureFraction" -> Rational[1, 3], "LeafSize" -> 5, 
                  "TreeNumber" -> 48, "DistributionSmoothing" -> 0.5], 
                 
                 TypeSystem`Struct[{
                  "FeatureFraction", "LeafSize", "TreeNumber", 
                   "DistributionSmoothing"}, {
                   TypeSystem`Atom[Rational], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real]}], 
                 Association["ID" -> 269144321349133]], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Standard deviation\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"2.8454793380214082887`3.",StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.1056432731493707478`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "2.6341927917226666267`3.",
                   "\", \"", "3.0567658843201499508`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 2.6341927917226666267`3., 
                  ", ", 3.0567658843201499508`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                 TagBox[
                  TooltipBox[
                  "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                   "TextStyling"], 
                  Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"2.5977585841659336374`3.",StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0125255002251878165`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "2.5727075837155579663`3.",
                   "\", \"", "2.6228095846163093086`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 2.5727075837155579663`3., 
                  ", ", 2.6228095846163093086`3., "]"}], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Evaluation time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              TemplateBox[{
               "55.3`",
                RowBox[{
                 "\"\[Micro]s\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"example\""}],
                "microseconds per example",FractionBox[
                "\"Microseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Predictor memory\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"637.`","\"kB\"","kilobytes","\"Kilobytes\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Training examples used\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"1600","\"examples\"","examples","\"Examples\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"8.64`","\"s\"","seconds","\"Seconds\""},
               "Quantity"]},
             {
              
              DynamicModuleBox[{
               MachineLearning`file5Automation`PackagePrivate`pos$$ = 1}, 
               DynamicBox[ToBoxes[
                 Show[
                  Part[{
                    Graphics[{{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.4378854705233575`}, {
                    3.912023005428146, 1.3843448922742094`}, {
                    5.521460917862246, 1.4027907650875486`}, {
                    7.154615356913663, 1.5462146650977449`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, 1.3638931083037902`}, {
                    2.302585092994046, 1.566666449068164}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 1.4378854705233575`}}, {{
                    3.912023005428146, 1.3843448922742094`}}, {{
                    5.521460917862246, 1.4027907650875486`}}, {{
                    7.154615356913663, 1.5462146650977449`}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 1.3638931083037902`}}, {{
                    2.302585092994046, 
                    1.566666449068164}}}]}, {}}}, {}, {}, {}, {}}}, {{{}, \
{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 1.42589461043947}, {
                    2.302585092994046, 1.4497342518460739`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.912023005428146, 1.3720859288284672`}, {
                    3.912023005428146, 1.3964553917132583`}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.521460917862246, 1.3859504314016826`}, {
                    5.521460917862246, 1.4193521923301755`}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{7.154615356913663, 1.5057036155890855`}, {
                    7.154615356913663, 
                    1.5851482662444656`}}]}}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.1197435540445553`, 1.3491756884096016`}, 
                    PlotRange -> {{2.1990101171729473`, 
                    Log[1600]}, {1.3526279227057694`, 1.566666449068164}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1197435540445553`, 1.3491756884096016`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1990101171729473`, 
                    Log[1600]}, {1.3526279227057694`, 1.566666449068164}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}], 
                    Graphics[{{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 3.012547514915228}, {
                    3.912023005428146, 2.897869114276108}, {5.521460917862246,
                     2.7894246526347652`}, {7.154615356913663, 
                    2.987226730951649}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, 2.5104562624293565`}, {
                    2.302585092994046, 3.347309583161718}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 3.012547514915228}}, {{
                    3.912023005428146, 2.897869114276108}}, {{
                    5.521460917862246, 2.7894246526347652`}}, {{
                    7.154615356913663, 2.987226730951649}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 2.5104562624293565`}}, {{
                    2.302585092994046, 
                    3.347309583161718}}}]}, {}}}, {}, {}, {}, {}}}, {{{}, \
{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 3.0085920458935136`}, {
                    2.302585092994046, 3.016502983936942}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.912023005428146, 2.892835738389089}, {
                    3.912023005428146, 2.9029024901631275`}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.521460917862246, 2.7784441021271054`}, {
                    5.521460917862246, 2.800405203142425}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{7.154615356913663, 2.9273700606602056`}, {
                    7.154615356913663, 
                    3.0470834012430927`}}]}}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, DisplayFunction -> Identity, DisplayFunction -> 
                    Identity, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.1197435540445553`, 2.4686135963927387`}, 
                    PlotRange -> {{2.1990101171729473`, 
                    Log[1600]}, {2.5104562624293565`, 3.347309583161718}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1197435540445553`, 2.4686135963927387`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1990101171729473`, 
                    Log[1600]}, {2.5104562624293565`, 3.347309583161718}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
                    Graphics[{{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.1027860712783553`}, {
                    3.912023005428146, 1.063975678722627}, {5.521460917862246,
                     1.0258353568738494`}, {7.154615356913663, 
                    1.0943454422627559`}}]}, 
                    "RandomForest"]}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.1197435540445553`, 1.0202502243767484`}, 
                    PlotRange -> {{2.1990101171729473`, 
                    Log[1600]}, {1.0215603171847103`, 1.1027860712783553`}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1197435540445553`, 1.0202502243767484`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1990101171729473`, 
                    Log[1600]}, {1.0215603171847103`, 1.1027860712783553`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}]}, 
                   MachineLearning`file5Automation`PackagePrivate`pos$$], 
                  PlotLabel -> Grid[{{
                    Button[
                    
                    MachineLearning`file5Automation`PackagePrivate`\
buttonGraphics[
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]], 
                    MachineLearning`file5Automation`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file5Automation`PackagePrivate`pos$$ - 
                    1, 1], Appearance -> "Frameless"], 
                    Part[{"Standard deviation", 
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file5Automation`PackagePrivate`pos$$], 
                    Button[
                    
                    MachineLearning`file5Automation`PackagePrivate`\
buttonGraphics[
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]], 
                    MachineLearning`file5Automation`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file5Automation`PackagePrivate`pos$$ + 
                    1, 
                    Length[{
                    Graphics[{{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.4378854705233575`}, {
                    3.912023005428146, 1.3843448922742094`}, {
                    5.521460917862246, 1.4027907650875486`}, {
                    7.154615356913663, 1.5462146650977449`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, 1.3638931083037902`}, {
                    2.302585092994046, 1.566666449068164}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 1.4378854705233575`}}, {{
                    3.912023005428146, 1.3843448922742094`}}, {{
                    5.521460917862246, 1.4027907650875486`}}, {{
                    7.154615356913663, 1.5462146650977449`}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 1.3638931083037902`}}, {{
                    2.302585092994046, 
                    1.566666449068164}}}]}, {}}}, {}, {}, {}, {}}}, {{{}, \
{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 1.42589461043947}, {
                    2.302585092994046, 1.4497342518460739`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.912023005428146, 1.3720859288284672`}, {
                    3.912023005428146, 1.3964553917132583`}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.521460917862246, 1.3859504314016826`}, {
                    5.521460917862246, 1.4193521923301755`}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{7.154615356913663, 1.5057036155890855`}, {
                    7.154615356913663, 
                    1.5851482662444656`}}]}}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.1197435540445553`, 1.3491756884096016`}, 
                    PlotRange -> {{2.1990101171729473`, 
                    Log[1600]}, {1.3526279227057694`, 1.566666449068164}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1197435540445553`, 1.3491756884096016`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1990101171729473`, 
                    Log[1600]}, {1.3526279227057694`, 1.566666449068164}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}], 
                    Graphics[{{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 3.012547514915228}, {
                    3.912023005428146, 2.897869114276108}, {5.521460917862246,
                     2.7894246526347652`}, {7.154615356913663, 
                    2.987226730951649}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, 2.5104562624293565`}, {
                    2.302585092994046, 3.347309583161718}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 3.012547514915228}}, {{
                    3.912023005428146, 2.897869114276108}}, {{
                    5.521460917862246, 2.7894246526347652`}}, {{
                    7.154615356913663, 2.987226730951649}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 2.5104562624293565`}}, {{
                    2.302585092994046, 
                    3.347309583161718}}}]}, {}}}, {}, {}, {}, {}}}, {{{}, \
{{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, 3.0085920458935136`}, {
                    2.302585092994046, 3.016502983936942}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{3.912023005428146, 2.892835738389089}, {
                    3.912023005428146, 2.9029024901631275`}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.521460917862246, 2.7784441021271054`}, {
                    5.521460917862246, 2.800405203142425}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{7.154615356913663, 2.9273700606602056`}, {
                    7.154615356913663, 
                    3.0470834012430927`}}]}}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, DisplayFunction -> Identity, DisplayFunction -> 
                    Identity, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.1197435540445553`, 2.4686135963927387`}, 
                    PlotRange -> {{2.1990101171729473`, 
                    Log[1600]}, {2.5104562624293565`, 3.347309583161718}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1197435540445553`, 2.4686135963927387`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1990101171729473`, 
                    Log[1600]}, {2.5104562624293565`, 3.347309583161718}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
                    Graphics[{{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 1.1027860712783553`}, {
                    3.912023005428146, 1.063975678722627}, {5.521460917862246,
                     1.0258353568738494`}, {7.154615356913663, 
                    1.0943454422627559`}}]}, 
                    "RandomForest"]}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.1197435540445553`, 1.0202502243767484`}, 
                    PlotRange -> {{2.1990101171729473`, 
                    Log[1600]}, {1.0215603171847103`, 1.1027860712783553`}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {35, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1197435540445553`, 1.0202502243767484`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {35, 0}}, ImageSize -> 330, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1990101171729473`, 
                    Log[1600]}, {1.0215603171847103`, 1.1027860712783553`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}]}]], Appearance -> 
                    "Frameless"]}}, Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                ImageSizeCache->{396., {140., 145.}}],
               DynamicModuleValues:>{}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Grid"],
          FrameMargins->{{5, 5}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 12, FontFamily -> "Segoe UI", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9802, 0.9802, 0.9802],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{
  3.793257701943324*^9},ExpressionUUID->"c263045a-4f19-4437-9d51-\
c533528e2511"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotdata", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"traindata", ",", "None", ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adata", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Take", "[", 
      RowBox[{"traindata", ",", "All", ",", "1"}], "]"}], "]"}], "//", 
    "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"pred", "[", 
      RowBox[{"plotdata", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "traindata", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"adata", ",", "pdata"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Actual and Predicted data\>\"", ",", "15"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Actual\>\"", ",", "\"\<Predicted\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.7932577435033073`*^9, {3.793257883008458*^9, 3.793257883128088*^9}, 
   3.793258016505783*^9},ExpressionUUID->"7e7b3a33-ed31-47aa-9125-\
cb86a9e9ca87"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
wcrHyN/Ewd33VxUnUXyggAOfY6k5hb7kr+AgRPdykR2f0UspBw2TvmUakv+4
ggOP+fKWvgaM3qs4qP3dpfpjMtGzdL21cg4JVzH6rZe2t3bAvwXtZN9J1++z
qL19IMOt0v06Hmc84A7xOwfHZrvzpj5i/XdzMGqb+86je8n/H45j0+p0o3XY
eGXDcftl65GrweQPCMdwlVlbykk/UAiHTgbHa70VxSvCsXOHD/9TAqNXtXBc
vKNUFXBI/39YIxzVe0J+TDFi9KoTjuLbXu5tURSvDMd9yYBhvwax88AoHA8K
5wYvrGbtmYSjOX3ix44LrD+LcIztH5qyRYbsy3BEZu8Y/fwZ+94xHMI+h1cO
NWbl7uGwvxb/ssOFzcc/HHNtQwoDa8h/GI5uteAfruTPiZPOt7Man8m/xA3H
D89zzvr32HpKwnH3dv+eqv/iXeEor/P8syiFfV8QjkOTLWb0IfukJBzTJI/u
nB/Cvi8NR2WwZm7BRvJfhSM9v/p3fS3tfzhm7XU7oxJA8jwcSyx7Zc6NYLg+
HLHVHTZ7yJ5oDsfoEUb9Vk5nuDUcXctHVvXUk74TjjFvp3C+G7L+u8PxL9O4
3NyA5H8E1qj7jDZQYlg2ArskKYVuX8keikDhqQSr966sfYUIZC65NMg+l/wj
EbAbmm4WsoTRn1oEnHsGD6k4Q/6SCAzU4f9OUmXyVicCMaV2DYZiVo4InDnz
85JEhulDRtLylgbe/PWM3k0icKdyh5fMb/a9RQReW1v2KrxF+lUE3IuX7wkq
ZeN1jID6r+rFKo/Z/N0j8CVrbouWJsP+EVAeqd9oQ/4MTgSW6YUr98lg9BAX
gVkzJq7ZP4PROzcCCn3vDy67z+hLEoF7ar2VG3bq/w9nR6BN1+HELRtG3wUR
0L97vU5dhpWXRCCyxGr4VvI3l0bg5gKXpoLnZL9FIN3uWJ/pO1j/VREwNThc
ruLHymsisDzuUxT3BaPPeun6GK9cc+MZ6XcROBj158PiPQy3Sscbqrk+6gjp
exFYZC4fqFRN/B8Bs89fOD6jSf+NxMubG69tXsTqy0ZinUdkSs5J0ocjsTr2
q8rbTex7hUgUZZYpyoXT/keiOLpeOL6Crb9aJIYqPX2mG0fnZSROJBSXvLzG
ynUicejRwy9ZjnR+RsKu4POKJsr3MJK2l+X36vJWhk0i4bD2/S1xIOvPIhKl
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
8N7eGj6YxsNJQZCdfUHWFfL/peC1Ht6n0/nGTcHYpUGTe1N+liQFRk2JB21n
U35eCn7N7P4tPk/6fwqslAr1Eym/tSQFRy32vRhew8pLU6Cl9FxsT/ZzhfR7
ue3pNyUMV6XgsdLGvSoXyP+bgiUzUxcXkL1Tn4LS+ZF9/TNI/qegYvKAz1co
ntqaAuXpdod/Lyb9LwUjJe/qHxI9dqfg8pvJn5/TfQyZVCjOPuzU8I7O/1Rw
duU+wDaK/6QieaVp+59C2v9UPBH14lf3p/1PxebbEs5tsPmqpUJmS8PwVZtp
/1Mh+/7azBtc1r5OKjK2bNmfTv5BpCJW5+f5C5QvaZQKY/Ggl5YC2v9UTLBV
d5Ujf6FFKrpCx83UG0f5halYsVDDWLyQ5H8qLg4OGPiG7l+7pyLXalZCM93v
9U/F5H69Z05Up/1PheEqX6+ALpL/qVil9l37iwHtfypUQ/IvVvJJ/qdiWPpL
h6oPFP9LRZ8RGaHnKB+4IBXB3XoOShOZPCxJRdP6Gct+dTF6LE0Ff4VLRFQX
yf9UDFr5d2FLMsX/UrFJ5uxAdcqPqElF/RzO3IXLSf6not+UQN27syi/IRXX
t6+acnYGxX+l+zXpNZaMpHzHVChFJBpbuhH/S8ef0Fvz737Kf+fi+7CAB7K5
DPflImaS9f0CXToPuDhZtdL82GM2XzkufoTEbowPIPrg4uXhfpmdFF8cxUXR
kc5IvZlkL3IRq5m1KJHs2Ylc9C+2HfTxJ8WPuGj2MBoff4DhqVz0jna5+qqE
4klcvF0te/Qx+cfVuZiyqm/lObLHNbi4P0m31yC6767FxYoPkUqWlP+qw0XY
tikPxlH+lh4XX8euTvj6gewPLoYamtclUTxqBRdq2Z/qPNrIHuXiW/PVEcVx
bL3XcrFscs2PzbtIP+Win+0+FXs6z025eBz6b92VMjZ+C+l45w3rLMxm2FLa
/tZKk8/3yX7loq72/pcSym+150JY/azobDQrd+Qi2PfiAaVM1r4LF6m+vv/k
yV525+LJktN3bk9k57E3F0t+rYryMGDj9efin9H0mrN72XiDubgWuza/Zhvl
33ChURi+6IAx6z+Ki0cjvl7K1CZ5yMVte4UbF5QZfyRxEV0bn974ivwjXNR/
2XhzZymTL2nS/XLvCTgbR+clF12q4x+L2th5mcGFUuyLITmr6fzkIkHUS1dm
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
gKrNn6wf9H6EiwBjNoz5uZdH/i0BlBqsPfUd2PfeAnA/3rp8yZd97y9A5dh/
TS2bWHmwACmbi553DKb8VwHkVrzfVEb5hlECJKreqn99gfhfAO+D3Un3xrDv
kwTYcPvuoJPT6L6aADatL/IyyP5LE2Diwi9NbRcoX0qAupNj1/3awugvQ4Be
y+95bj5K/lMBdNN95X59ZPUPSulBt0opYDT5UwUIrLL/0kzxj2IBjoTUS7bz
Kb4iwN7kQZsN/zH6Py3A2ZnlbcN4ZG9Lx9eRdlI0kNH3BQH+Tfc4dpDovUL6
vbLaIoPpDF8XYOA5udp3wygfQ1r/vcq96XT/746UHnVfhI3uT/dtBRh7YtLf
plI6/wXodK3K0NzG5Hu9APJWRUEpwYyfmgSw9LndZHaC7HcBhCP5KbV0f/e1
tL++T/QLoymfV0rPh1uHfKL8449S+gi/HL3xL+n/AuQNLxzdaUH8L4Ctd4P5
GXqvo1tK/1qbbvQuY/vXI0CUvMW2ByTvZNJwU/ujyluKV/ZNw/mUuugays+Q
TcPl/aNPedH7BHJpEBltjKi7xOhZPg3jzn3mTFvO6HlUGhq/BXVn92f1FdLw
6U/f2S8nsfoT0xC9OeaFw0y6X5OGdbU1iotbWf9T03D67xHrGls6/9PQp3S8
/ZO3rD31NBxQOfLW1oO1p5GG/FyjpZcHM6yVhv5+vmaDhhH/pyFP6BrdtJxh
vTSE/tmV3fGM8o/SsPhq/Du5lUwerUjDn/qa7ceJvo3ScGrk4tW+Dxlem4YF
MhEKAfS+nEkaVHi9s7ZR/r6pdP1mvWxaNJ3Of+l8U61EiT8ZtpSOb+HuETn0
PohNGtZGVx9Jp/vd9ml4uyUp7r/3kRzTcDbS1v0mxddd0mC34u2oxeR/cE+D
y6DUbdfovql3GkwGPPz58RDZ/2mY2fmsuZpP9n8apn6SHZvjS/mv/7/+LjLp
Rax+VBo2pvTKW1xP8bA0TG+oH3Kyjc03KQ2beSsS56qx+tw0BKmtnKNI/qQ0
6X5nbVLSpPYkaTgU4/BIqYSNJyMNc28Epj/Ip/d60jDeeVnnNCWGD6ahbbzP
+yo+5VOm4f0wi4I40oeL0/Dt3Nr79mT/laTB/+s+G58WNt7TaRj4zuXRpEsU
b5HSj9fL0+mUT3khDTvL/5qF0v2PijS8Kq2e1kXvK11PQ+v10Z/vgdFflXQ/
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
uKc=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
32v8UJrfFXte2604EULzu8KZa1ukMJ30gSt0Jl7MMDrF9ufgin2jji1e+5Ps
gyuOlf1GT2c6f1esTr5+scaOzt8VhnXn3kRMZvSrd0W+du/9ajMYfyi4IWTd
9ifnvBh/6Lih49DNnxU1xmx+N6hslPTcV8b0qYMbZrdPfJdXwfQ9xw1fivN1
aqh/jhuufMosVthF/OeGt9dm1upb0Pxu8OjtcE5lNPGfO7SV9h166Un0d8fU
pym9uIuI/9wxNmfzFJ8G4n93zHolsE0NJv3kjra+P5/kD6H9u8v99+QnqmWk
790x/363k9pb2Xj17nhzr+ewz5tp/m0wqOu4OWsqW6/ONpy/+PL0znS2H2zD
I+fLTyc2M+ywDTPunW54ZMQwZxv0/Tf7c5rZeeVsQ4S0oytwC9nbbeivsjfn
6znWXr8NWcaipPWXGFbYjjtuLgYZ1QzrbEdzx+Lqgqm0/+2o1Jj9sGIK8f92
dDe+9HGeLvH/dqzQTth6wZn0z3bkn/YfOkBE+m87DodbHbE0IP23HRHJA2zO
LSP/wwO89WHKw8qI/zwwfOLXNbu6MwwP6KUfTxmqyrCDB3wqXnmvO0b61wOW
3bSWdksj+fMAd7nJkko90vce0B62yjQkl/SfBwpfr6hf3En61xMTnyQfmb6Y
YR1P+JTnRMcmkvx5YlNH0LGf/5vfEzez492GNJF/5Yno+1v3t/RjOMcTC8aN
7xilRfLvCcHcXOMV7jS/J1CwNnDIZ9K/Xoh9GOHqTfpDxwuVj0os55mT/vFC
1fIbFar5jB4OXri76ojimWrSf164raNW85vi0xwvDPPKPLjJneTPC3OLJEun
3mH8Ve8FDb+QYffPUXzrjXkn/ccXZZH8eWNnUW2R+jNjNr831g88VxnnwLCD
N3bzBudNrCD/xhsFn6/lBoO153hDU00hbk0KwyXeSO2bmtHWi+F6b3TyW/kx
v8l/2oEnPzxfiP/HfzvAN379rSiWrRfydqveBroBxP87sOXzNZu7rex7zg54
J2x8+tSI5t8BXTWRlVIZzb8DIRfsF+sH0/53oEMlX91vDekfH5hefNhzGvn/
qj74WxIsHfyaybOOD4YpfhzTFcCwgQ/sogcIzbzIPvrgqd6PPWHfGL0sfGD0
vN86Q2uSFx+Ixj9XmmfH6Ovjg2leCbUiEcmPDzbVOOVl6jDM88EKe48r5jdZ
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
E5HTuvKwX2+S/0TwMo00ulH+0CwR2bmJH9vayP9LxPaEgVbVDxm2TcTyHs/j
66wpvk7EiZYHS4Z4Ef0TMWKea5HNCfa9TyJuGow0HHCf/L9EDOMcunMmm+Jv
+f53X22WUr1DciKeveueL8gk+ifiR7hJjxpthmWJ2LTx+g2fKxSfJ8IvYM7y
i5R/zk2EbNmVDiM9kv9EaFdovDp1l+mHwkTYysZ9bA2k+5tEXB38akgX2avy
RCgOWHTWbSn5/4l467fl2PMnzN7UJGLOc9m9ojry/xNRv91xf/deDDclYqAw
svWHJuvfkojAwnsXimzYejoTsUj9VlVjDPl/STDY83Tp02fk/yXhuWv2vSMv
yf4noT7j61N7un/QTEJHv2Uhm7tTfjAJGzxchZEvif5JeN2qaghTon8SfloE
jFJIJfonYfM4HcUBr6m+IwnhB/UG5UqM/8Nm8vWMG7HkzTTKJyXBpjC4l8yD
xQe2STgTnLjy2lvKLyXhQo+6rWfvMeyehJreU2Y8V2T9fZJgnX45/ALFyyFJ
GBlU9T7jFt3fy/c7Z6WTZhjrn5yEoDNP9z1cQ/noJNj+KnsdOpvFy7IkfH5/
d7BpKcvf5si/59z5tYnqL3OT0LOz7l75YvZ9QRIGjztwM9CBfV+YhJYEleCh
pJ9KkvBtqn6vo5rsPMqT8LZj4CxTqvepTIJCmHJAeAobvyYJ55Js1jfvp/x2
EjZFuu2JSmfzNSVBvOpkfE8Ji+dbktDv5OaNay+weL4zCUrj36zX06P7r2R0
W/BkmGcdyw8oJ6NyzPueA9UoH56M8PpZFx3vsPVpJsN5TN3J/B5k/5ORbDJ8
pf5zJj/6yWh8nP1NNZ7qBZJh0rDOMV+HYcNk/B3WGBg0g+4Pk5FVcC8ygPSJ
WTK+z/65cdp00v/JmKS7r+7eK9L/yeCum7xtNOWfHZKxMpDfo5byZe7JGLLm
vBqf6r19kjGhNL5k6TuS/2TcWT3nwfRL5P8nQy/6zZasHhT/JUM0caRu5h/2
PS8ZTVcHXIyi+zhZMjglK/1MYik/nQyPwcZ2vf1Y/9xkvHd6cOaoO8X/yeBn
L++Y6MG+L0zG4EOz68yFdH+XjLsW/YNaKb9Xngzlw1H3hw+lfG4yrCoV+mut
J/2fjFTtG8vV7Un/J2O+8uhd6+ay8Zrk51Vy9LYl+Zst8v069q3yTyD9n4wi
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
Kmw9JhI8/3Hv0IsUqkeSwH/3kafCQyT/8v0oh21K2k3vEyWYstazaRTVW1hL
4KBrt/roDapXliDOyE9nIdXX20lw45zWxFnv2Xk6SFAxakn922ZGHxcJJk1p
HTR0MMPuEpQeaphz14phTwmmi241S7dSfasEamZRz5Ms2XoCJNgranoT50n+
vwR9k072tHnF5o+QYN7P3LLtfPL/JejxuChK1JP8fwmWqNtze36jejgJmuYo
ZZpQPoArwbv00oNuRyj+l+CMS6m6NJphkQRDLgRpREgp/yeB6hekphpS/l+C
7CmVQ89PZ+05EgxdlDgznOrlDsq/r5vZ32oJyb+cvk96HmytY+s/LsEr3aHc
qWco/y8B//z3dj03yv9L8GDA3sFvulP+X4LbMsXJ3J0U/0vg1cGxfUjvT0ok
0DpqmDAvluJ/CZxsfOae+sPayyWQbUy+LyT/tEKCcZOqpjym37+tlOBZ/Yy5
M+MYrpKv98u7pXer2fc1EuQPW6g0nPzxWglSC7rdagyi+h05P8341PPQVtb/
rQR3dnj/XUb3yU0SDDLbEXOO3gt8lvPza9PrfnR/1CJBxlTHiEVLGG6ToKrB
3m/oPMr/SdC7cce+u1RP1CWBXYSp8e0BVP8vhcmYMdXpaUw+lKS41qO/3dA5
dP8nxfoz1+fsoPcCfaUIV85XtNlG9QFS3Gg3/tGmwbC6FOJHSxv7UD5EUwrP
ix2a2oMp/peirNtlhynTyP5LUTyyt5IW5Rd1pYDvgH9jYij+l6JiwtyRZfRe
f5IU96VntD/T7wkZSNH840Po5ihG75lS9Km0WTluCtWbS5G1TXvAaCuGF0hx
2miwoQbxM+TzDwt6yfvB2k2kUFqyYVi0Dtl/KfK2blD3IH1oLoXqApf8Lvo9
TwspbELUq6eT/2YtBU+5j862+yT/UsSm+DYUUH7bToqk+S8HVFA+w0GKM7On
hc7baPwfdpGiaOWJxvX0nsZdCrPTia/HB7F2TymeJMxSnUT3VT5S7Kje/Wit
HZs/QIp7gm2VPaieJUSKHO2v4ZLZJP9SdP49o7P4Jsm/FBObx3QoLCL5l8L3
o1dnEuXLkqVIfntoT3QMyb8Ucc8HGQ2h+3ueFC8WpHnn2DH6iqT41Lzig+sm
uv+TQqiypHqbGsNZUnjnHStIOEn1M1IYXBxm5VvFxjsoxbffRcWf6PdtcqV4
uiv1ak4r5f+luBnlfUpE8lYgxYqHEzu4/9j+z0qhE1qeVVhF+X85/eonvPta
Q/IvReitxIvnttDv50jRd0RY+jlt8v/l6+0KKlJ/S/UYUiQucks9Q/mOCikm
f7eJebOc8n9SDJrh/q2Ifp+nSorNSWHcDKqnqZHTY8Q8he//SP7l551atTkm
i+p3pHhmsfKkOb3XfCuFiscq74NU39AkxejMrt1xTQx/lsLx5qcxx0bT+04p
LHfWqflQfX2bFEsEcwYV0Xu4Tjn/Vy/aaEbvd7qk+Dxj+ei6EIr/Zbhzstck
3WKK/2UIm2NoXEP8pCwD389BccMi8v9l6EpOC/uZR/ZfBsd9ul+9Sf+ry6AZ
vWXBROqvKcO40YUPNcPY/FoyhB8e77LBkuqHZdj7w7sjkd7f6Mqw7Oar8Lm5
5P/LEHzwzbv9zyn/L4N9t6z2J3SfbCDD48MfZr0j/3mmDCu+lT45SvUHhjKs
7Lt8iox+v2+BDJaZl1unPabfr5HB/YtVihXVQ5nIILOrWPsghuJ/Gbwn223d
k8nO01yG0laOZX8Dqk+SIXLmvwyHNvL/ZVhjtc21jvSfrfx7U4/3C/6xdjsZ
er7qb+BJ9YcOMuy5UVEQQe+NXGQY0HnwZ9/5dP8nQ0C3xNdjP7Dz9JRB9Li7
RjW9h/CRj7dp0qQrLyj/J4PrsRKrXQqU/5fBdJrP4cwlDEfIMErb0myGHf3+
mJzeCTN7KZM/FC9Drc1Or3P0/j1Zhv12d07/O8C+58rwb+TawaPo/RBP3v+C
97N39F5JJO8/JsFt1TvK/8nQ5+aTnhn0e9BZMihtr5rZM5Tqp2V4OG5XtXJv
1v+gDL6/1I51o/xdrgzzn2U77uti+LgMfW+vWL9nA9XXyBCYk3chhep1z8pw
8OnHscv60Ht7+XnMj1/Zu4jRo1i+vs/TXhz9TvG/DIvnKWrWfSf5l2Htg/ro
KTkU/8uQeX6Fjr4F2X8ZguyN7KrSmD6tlCHf//V3jXLj/3CVDMtbyuaqjmC4
RoZBlheM3yhT/C9D6y7xvH7b6f2OfL2DTpy7eZ2N91YGrZ0OT6bxKP6X84f9
zcxBtWy8zzJw/jxNDblLv+clA3ddXMkHPmtvk+FoFGej+yyq95fhY1rCF7cy
uv+XYaxyil1f+v0lhZ0I4or3///vDf4fp2eWiA==
         "]]}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
     PlotRange -> {{0., 1600.}, {0, 63.30327170843736}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Actual and Predicted data\"", 15, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{0., 1600.}, {0, 63.30327170843736}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Actual\"", "\"Predicted\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7932580264480796`*^9},ExpressionUUID->"df5fe266-e429-4dde-83c4-\
fac4da4586d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "=", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"pred", ",", "testset"}], "]"}]}]], "Input",ExpressionUUID->\
"0c0d1285-9b61-4377-a53c-95b454eac9d9"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{}, {}, {
                   GrayLevel[0.6], 
                   Thickness[0.03], 
                   Opacity[1.], 
                   Dashing[{Small, Small}], 
                   
                   LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                    11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                    GrayLevel[0.4], 
                    PointSize[0.09], 
                    AbsoluteThickness[1.6], 
                    
                    PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["401", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{}, {}, {
                   GrayLevel[0.6], 
                   Thickness[0.03], 
                   Opacity[1.], 
                   Dashing[{Small, Small}], 
                   
                   LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                    11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                    GrayLevel[0.4], 
                    PointSize[0.09], 
                    AbsoluteThickness[1.6], 
                    
                    PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                FrameTicks -> None, FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["401", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"StandardDeviation: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    RowBox[{
                    "5.8324222274525574505`4.1548384716902005", 
                    "\[PlusMinus]", "0.248725330630224839`2."}], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7932581855917625`*^9},ExpressionUUID->"a63e7e99-449b-4096-a033-\
0e6a47b6ccd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualPlot\>\"", "]"}]], "Input",ExpressionUUID->"73e4e3ce-a33a-4326-b338-841326d1b001"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt2/lXTV/8x/FCgwbNE40i0QcRkem+G2+DIaQiRKgQhUoUMmWMEBIligxF
ZMh4tnmMJAnxiYxNGqRE+u7P+t7X/f4P39X+xXqum3vPuefcs/dZj3XMAkIn
zOkgIyOT20lG5r9/7+zbs8SGuVNaEJ3MyerH9Ms0lGree1Dp6EOfEi1tWIfN
75fsKvAgpfMDCi5lDmLpF4dcml/oTrfFde5yrQPZpHsqZOHkRr6Pzvz4cdiK
fenyOlPVxo1m+1XVdxT1ZZZxhzbI+7nRV/91g66e7sNUvQ70rv7rSlk9znsk
3rFgaz5vPXm+xYXyzpX3+H7VlMWFZ772bHKhGWcLFkxb0CpMq8hfqJjrQuo+
22cbmaqw3yO1zg6J5q+HWsx6MahB2Py17mIHLRdiX9foLpnyW5jTV/3o97NO
FBu79+bmXt9EjUtNz+otdiR2qPj40DPq1Lx6Zw9bWwdSNDPb7PnLiFKrJiw8
MM6Bco5viL2dZEzBbyYFJGk7k2fwyZt/r3ajqqGdj3xd5kzqbS3Hhx4woFEK
9pOLjjhRkuXym70NutKctqXHYhfw97sXVNd9vim1/t7WZdYqe/oz8OrzdUbd
KTIkdcXmX85Ulq9xfoWrCgV+mjf9doUTJYyqGxkVqUaJk9u+p/ry7dVPfnsu
Q4NSi4Z9sermTAVK3zdmvFKm9NZufjvWOFLUtA+tDVM0SMfM5u/ABEfKGRMc
aX5Ni+xDjF/8GOJIZTfJ/d9DGhTTEBt/YooDFcy2MX0RoUmN+dPeBYyypwLX
c0c6hGjT4krTw96fiPLMan0GaWiQ/Itv93JdHMjTqlL2jIEG5QyMl/uyhSht
3pPLfx52o67pJRb21o5k7a1ze7ejHJ3V39/vY6MDhV3v2zX/pCo1dfLbkxDv
QrGZM3NH5FSIPGfkX3/dyPdPJ/vcygJ5evLl74noWCcqKK2fcDWyIy10MDp8
o8KB9F9/PB8/UoM+N6+oFJs4kue7ElU1JVU6pT7P4+A/TjTD41WQ84k60RSn
/it62vLvJzVgoU9Iq8hvXpTZUWMnkokPLIo3KxJ+Oj1ZFG7P+9eJn4vn1ws1
Be+yza45EZu9p1B7vjyLPFwVHR3Cz4/YPcFJBa1C8qW267oaYkp72bDxWbkq
u+f7fYJhuiulvXm6/qNMB9Y/+bjt6xeu5Fn3Z8K/Vopsc6lLmp+zO5mev7Xl
e50Km6Ka5PXYwJ1qQ8a+CJknz4znt2g1i92JniTb91foxPbZv358yJi/rlI5
oItTZ+a3pffXmCZXoqz+19aP+yS4VL58o5XrRjOGLM+931+GtVDbKXkZN2LZ
by4GjKgRLG+rKSm/daOErDm3RKUdqDXr0Z7F0/nfr0jyyCzqQqpelrOuJfO/
X7G8u77iL5HxxR5+tTJ8+4I2LQ3WrhUig7pEZJu5kaneTjX/OXXCmLGlQ38+
5fsbNDS6yL5B9PmO8u4RqW5E754cV66Qpe0KWSVvr7lRwcTSoh6Ldalvkeym
mcs8yLNUPutLL0Ny7aa76VCeB1nbdZ7pvFibGgt+dVvLX48K62XVtlSdJldo
h9+3Gk2xUXEzdcU1on0tq0qfzx5NZXPOrLRsaxJm2XV5+PK6B83QOWbbgbUK
uf94+u7JdSeZEzuP1h1vEnJO6u1oPeBOZY+mZdQclGcrFwV0kpnrSrHR/oHF
OR+FVSe/Na8Z4UphWqN3q77sxETpr+QMvF2orLStNXNSnXCwOGNqvrMzxTou
rVgT91O4GhKX/MSHny8OLt+VgmuFz6Gl1uXkSGS1+vPIqmbhZl66Rc+X/Pdu
cov8ryix2ogbhXl1TmS6KEXV2fyX0BRps8hGyZlqgyKGLXsvy55nzZ9c68Zf
v7A9em9ErdA1dc+3Tl35+/tY6y3Jfi3s33t0aPUdfv6ldbs7/8FyUeSdvyff
y/IOGtfJesMT0avAsrN/nXlv9TMztU8T1Kt3fnPQ4ds7eLCRXK+3wsHQLyee
W/HXz9oUHTIuFEaWBp2vOO1IMim5qXJr74hehCw93FDsQvT8Zdhg3Uah2/Wu
J/K78v2XTVsS7FArOPk/jvG750wydtNnFSc+FIZ47thu8o8ryWgvCtFxuSKE
eoTN3hkgJpnD8x16X3srNLNb0bOa3ShM5VDa8eAO7PVDn4O90t1Ifd+4g1/6
d2SW8/RMBk5wJevVIoOHxR3YMtNuvTMWi8k0I69n5g8lJp76cZF7nAsljewX
XHhLnS1/pDBnppMLWRdfFz/+osXyrPIHvCF+vC6eG3G8rzILjtusuOiEmHIM
p8Xe/KvJrIaNapkux38PzTcDenmrsB2ln9PuTeWf/1c/vr+POotKbjSXecTP
18Cth14eVmKGyx409Wjg7//Dr2+oliIzVA3VXr7dhf/+R2mE1rQJGtTveNYR
vn/RT70upCixxypp/9bZuVFeZG7CpA0abM3vK3ohhnz7Y++HmrnLslFDg05V
XhWTZ2D683p5NZba80rbihB3yhFSQpcN1GM5Gl7BF5/w38fGOPUXqWrsZ/P1
PxGD3Cnpq3jX9Ik6zPPyqZNxeh5UFuQ52O5ffSbXtuNH/S7+e+1iU1Whp8+y
Z4eYBmm70bElc+IeiroxPQvlSG89MTW/SmyU367Obj3+mJ/4UUz3M7x9dizU
YZ2We6qY+YspYdxkNnyONps3ZuOsCBf+9y1ee74d0GdFFyZ2ZMZulHZu9/Tj
e/TZrfSI0GnFYgqrXfVt0XFN1t33mrvLPL79l5fc+misy9qGPKp8luJGOZWa
i9Jl9VjJTpfI+7pudP/euoxDP/VZgmvN5B69+Xyck9plYkpX5lSTkDlD15WS
hsdo2ZzWYkbJtvt/1/D3z/LRWuykwyzy+njFTHOn4JQ5/S5012X9ehsoP1jE
j9dh84DTkWqsjRQ6yT/kv9eVF2zt+8oxcUTpzHGDxBQb47x+olYHVtU6eHbC
HH58BuTcddbqxMRyd/Y47+bX1+uNAYa9OrMUu4IufSfwv89uHJM1Sp7JT9rS
Z38mP76+ISnJJXmCSeCpM04mYn79mB+wWKUj+zxc9ekrJ3dSz7sdYRmtzcpH
PqxP/MuPV+Ytvfm9O7H9H3yiH/3Lr49vNsh4viwXrs40ffss041iFc0XyU9s
FYXfX/q46JQHpeWM3F/4p1Zk7LFmatpQfv2sfmnftOyn6KCj/FilJfz6dHPX
w+1vqkWr/d/vqhrB9z93w1FVsT6tFFfNPM6v92Ef5lx6raJF2cHpA+yu8uM9
cd+od5a6ZDh1bA/fk3z/lpfe7OelR0c2pW5S+O/7Pz7Ucn+ALi0Sfc7uF+5K
eVsmDAlv0qKVOr0Uk73531966qg1U5m6HDn4x/acmMp6XV48YbkmBQpHvM95
817bNcXzThe6Ze6ab8XPD5nfp59uGtcmqhy/6He/+3x9NKFGpeixCWUOCPPp
y+dj37oNm/NeG9OMjjZZl/jv9c+zzQ4GYWa03Cfm1YIVLnRu95biE7a96eSu
f9TmBriQ/qWF9/XSLKh+iu9BqwQXUvmHKYwJ702nYveO/bmaX2/MVCLPZlhR
yfDDNiHXxfSx+ycz30BrijA8ah9/TEy+/1Z1c7xhReMsCtU2z3KlHksq5384
Z07aGW366/aJyfpTeuMwp+706V+xyQM/fv4bPOih/t6IHFd4xs0r4df/psEW
UZP+ClpTg95vuMyPn09GYmFwRzY4ptPiczH8fM6Ms4i9pslWhtr0jD/F1xu3
dtuHOxcL4ww72n3l56tr+C3zNH9dtt563bCOaa70x7Kf1bUt5ixn4ujsx438
/Rbuz8no25f1bPFVDdP0oOUKm8omH7NhbacDBvnvd6PbNYtHdl7YlyUsvV36
9RC//uXkBjgG9WUNwwPUd0S4Uad+L5e46VmwJUtvn78Rz3/v9p9SYx17srkx
L7IcnruS+qDeIrXiLuz9zJjQa6UuZPo26UaLboMg2q3ZHHXImVhnk5BF5TXC
4R+iosYtTlTmk3AldH2tKC7wye2cn3x94ucm7NSqFL1XPxvRnMKv5zX2vke+
ytC0Vj+NJXw+C7tQ0rsuqRM5T5LznD3YiawXPNlvHq/J5+WmZ453+Pw2xnTQ
YLE21esP9tqg7EyKt7XEsh/V6a6qT5K8txOlpSrVTpXXoq3bdivuXeFElK35
tNVIjp52+KBalyUmpjWnc5chH0SZp54fe9OT933t2SGaP0U5yw76PB7Aj39y
nvy06lZR/4+vFYdb8vkros/+QJ9WkV7B6qFXPvPt219YuPu7It1v7njh/TV7
KgtfHbxXvysZvG/bOGjRKOq3KfBPjpMZOcj+7JL6agTVNpfoLq8xo+3Bl5f7
vB5OhVs95z21N6Mz8ZMG1qqMpCc9J6e/2WpGd7yGBMqtHkEj6r93Hb7AmDYl
HXAwy3Em8tbcETG7WTBe6Pto2jY+f2480EX2Y5tgFRe1889AewqbpHxmTkZH
2jywbGlFM19/y0d6V3eQZeNUZeIjlvPt33WizX/vL+E6XeH3JPz99M2/P5tW
KXxMMs0JcnehsBqHl5HGnZhFrtMsk+d8/pmqXTI6XJ5NME8zzIzi81feXs/X
0R1Z/s8ZzxJLXcn0hqZ7z1lyzFsmu1C1xZXKXpc8iDL/IbTtuL1NabYbyXht
66h3vlqYdbDVJrGzB8U2dbd/trZIlBMzu6GfqQeR4aIdz2aUC6M8Xil1Lfhv
fXRQ2fBAgbBCZvQ7v//WS0r6Dz3eVgsp+YtHmjb81xv2yM4/K9jsG2eQXuNO
7PHdPvUPqoVVfn7dJup6kExGoJqtSonIdtPvvXPH8/u7phmJ/aJl6fDZ3xlt
l/j/v2qkU258XmQfrLY4eaEHhd3wbFmcLUvxHTXU03vx9Zvl13V1hX9EXeR/
+Oue4x14KSDe9Lfo8vkT2rdTRlOO1c0Vs10U6NKrB5Yfxo0mmW2r/fxe1oiM
4550HH2Yf76naencqmLBKrHxlAmfX2O/FB3Qf1ktjBfLrbzK7wdjR+eX3bau
FQz279pZvp2vV3b3Le97o16wyJ3223AMn/+/XF3xJrFBSDuXuGLnHf57KFv3
ThRYJ8ht2rK1F79eWT/WjblqqMl2FRTX7qtzJtciWddiDT2WPcBo3GllJ8pZ
qrBLW6zBVvmVTjPNcaCSaw5l2yeqs+Yw3+Fv/vL7m3v3BvUe+kMIljHKOHad
KEfz1lIW+Uuo+jxjSosekafoQXHqmwbhbOJM9xcTR5L6nGVT41Y2CH6vTCpS
bUaS71Dz+EhBnvXJD5/2fPkImt03s1CxRJ0ZmN36sFuR358ZaU7s7sPvD4xT
fR9/5r+fd8nhr3posWE2l1aa1P63nnGftaRJjfl/+fR1uKqYaq/5a8ZP0mEV
3uavnuXw8+umaf4GX03m1XA2Xm22KyW8XbXs7illlqFgGpHTxZUK4s7aK/uq
suBv0+4N2cnvPw7MVXWq0mBJ5z4XUoo7eT5ab/LUSJ+drdueNe8Bny8ve8T2
SNFlxwzedB/wns93ch6dzfS6MnOdVhN94uuZWs8VSr202MrRHQqMj/D3k1e7
OGKGPNM+Gnju0xQPynmUfjNljj7bMWtFcY+XfL5V7axkuO6H6PeqXvJv1/Hz
+0D16Gqlo6Jx1WNtk0W88+zOTqlKFLbZ3rGZHT2aTG3THd8kd2IZgxV62cTw
8+X5lafr134U3L9Pmzyskl//E14NrPgmQ953JvbNHsW3P27l/CZvWUo4lT5+
cj93suyycW9LqQHFqeV0bFJwp05ey+O+eVmQiWlUcfIVN1r391rT897m9H1C
RcFiV3dKqPr11bDRgKaaZh1omeJO97uvaalcoEXJcsMaArq7UcnN8pL+gdr0
01Re65ySK93/J2fx11ZNuvcl3/tkuAt5Djaq/OCoTwPqE7f6lvD1h7nerQ97
GkU60cOjgvj1Mjbtj2mPZy9F4y66bb9zkK+XrLV61qTJsNEZhxI0xvH1uptF
jjL9FCg8xubPGhcqGHJGa0SbAot4tvmthhq/HoWohSzs81fo2Vnv74smR5rx
+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
Dw==
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{402, 1}], LineBox[{403, 2}], LineBox[{404, 3}], 
       LineBox[{405, 4}], LineBox[{406, 5}], LineBox[{407, 6}], 
       LineBox[{408, 7}], LineBox[{409, 8}], LineBox[{410, 9}], 
       LineBox[{411, 10}], LineBox[{412, 11}], LineBox[{413, 12}], 
       LineBox[{414, 13}], LineBox[{445, 44}], LineBox[{446, 45}], 
       LineBox[{447, 46}], LineBox[{448, 47}], LineBox[{449, 48}], 
       LineBox[{450, 49}], LineBox[{451, 50}], LineBox[{452, 51}], 
       LineBox[{453, 52}], LineBox[{454, 53}], LineBox[{455, 54}], 
       LineBox[{456, 55}], LineBox[{457, 56}], LineBox[{458, 57}], 
       LineBox[{462, 61}], LineBox[{463, 62}], LineBox[{471, 70}], 
       LineBox[{472, 71}], LineBox[{473, 72}], LineBox[{474, 73}], 
       LineBox[{475, 74}], LineBox[{476, 75}], LineBox[{477, 76}], 
       LineBox[{478, 77}], LineBox[{479, 78}], LineBox[{480, 79}], 
       LineBox[{481, 80}], LineBox[{482, 81}], LineBox[{483, 82}], 
       LineBox[{484, 83}], LineBox[{485, 84}], LineBox[{488, 87}], 
       LineBox[{489, 88}], LineBox[{490, 89}], LineBox[{492, 91}], 
       LineBox[{493, 92}], LineBox[{494, 93}], LineBox[{495, 94}], 
       LineBox[{496, 95}], LineBox[{497, 96}], LineBox[{498, 97}], 
       LineBox[{499, 98}], LineBox[{500, 99}], LineBox[{501, 100}], 
       LineBox[{502, 101}], LineBox[{503, 102}], LineBox[{504, 103}], 
       LineBox[{505, 104}], LineBox[{506, 105}], LineBox[{507, 106}], 
       LineBox[{508, 107}], LineBox[{509, 108}], LineBox[{510, 109}], 
       LineBox[{511, 110}], LineBox[{512, 111}], LineBox[{513, 112}], 
       LineBox[{514, 113}], LineBox[{515, 114}], LineBox[{516, 115}], 
       LineBox[{517, 116}], LineBox[{518, 117}], LineBox[{519, 118}], 
       LineBox[{520, 119}], LineBox[{521, 120}], LineBox[{522, 121}], 
       LineBox[{523, 122}], LineBox[{524, 123}], LineBox[{525, 124}], 
       LineBox[{526, 125}], LineBox[{527, 126}], LineBox[{528, 127}], 
       LineBox[{529, 128}], LineBox[{530, 129}], LineBox[{531, 130}], 
       LineBox[{532, 131}], LineBox[{533, 132}], LineBox[{534, 133}], 
       LineBox[{535, 134}], LineBox[{536, 135}], LineBox[{537, 136}], 
       LineBox[{538, 137}], LineBox[{539, 138}], LineBox[{540, 139}], 
       LineBox[{541, 140}], LineBox[{542, 141}], LineBox[{543, 142}], 
       LineBox[{570, 169}], LineBox[{571, 170}], LineBox[{572, 171}], 
       LineBox[{573, 172}], LineBox[{574, 173}], LineBox[{575, 174}], 
       LineBox[{576, 175}], LineBox[{577, 176}], LineBox[{578, 177}], 
       LineBox[{579, 178}], LineBox[{580, 179}], LineBox[{581, 180}], 
       LineBox[{582, 181}], LineBox[{583, 182}], LineBox[{584, 183}], 
       LineBox[{605, 204}], LineBox[{606, 205}], LineBox[{608, 207}], 
       LineBox[{609, 208}], LineBox[{610, 209}], LineBox[{611, 210}], 
       LineBox[{612, 211}], LineBox[{613, 212}], LineBox[{614, 213}], 
       LineBox[{615, 214}], LineBox[{616, 215}], LineBox[{618, 217}], 
       LineBox[{619, 218}], LineBox[{620, 219}], LineBox[{621, 220}], 
       LineBox[{622, 221}], LineBox[{631, 230}], LineBox[{632, 231}], 
       LineBox[{633, 232}], LineBox[{634, 233}], LineBox[{635, 234}], 
       LineBox[{636, 235}], LineBox[{637, 236}], LineBox[{638, 237}], 
       LineBox[{639, 238}], LineBox[{640, 239}], LineBox[{641, 240}], 
       LineBox[{642, 241}], LineBox[{643, 242}], LineBox[{644, 243}], 
       LineBox[{645, 244}], LineBox[{646, 245}], LineBox[{647, 246}], 
       LineBox[{648, 247}], LineBox[{649, 248}], LineBox[{650, 249}], 
       LineBox[{651, 250}], LineBox[{652, 251}], LineBox[{653, 252}], 
       LineBox[{654, 253}], LineBox[{655, 254}], LineBox[{656, 255}], 
       LineBox[{657, 256}], LineBox[{658, 257}], LineBox[{659, 258}], 
       LineBox[{660, 259}], LineBox[{663, 262}], LineBox[{664, 263}], 
       LineBox[{665, 264}], LineBox[{678, 277}], LineBox[{679, 278}], 
       LineBox[{680, 279}], LineBox[{681, 280}], LineBox[{682, 281}], 
       LineBox[{683, 282}], LineBox[{684, 283}], LineBox[{685, 284}], 
       LineBox[{686, 285}], LineBox[{687, 286}], LineBox[{688, 287}], 
       LineBox[{689, 288}], LineBox[{690, 289}], LineBox[{691, 290}], 
       LineBox[{692, 291}], LineBox[{693, 292}], LineBox[{694, 293}], 
       LineBox[{695, 294}], LineBox[{696, 295}], LineBox[{697, 296}], 
       LineBox[{698, 297}], LineBox[{699, 298}], LineBox[{700, 299}], 
       LineBox[{701, 300}], LineBox[{702, 301}], LineBox[{703, 302}], 
       LineBox[{704, 303}], LineBox[{711, 310}], LineBox[{712, 311}], 
       LineBox[{713, 312}], LineBox[{714, 313}], LineBox[{715, 314}], 
       LineBox[{716, 315}], LineBox[{717, 316}], LineBox[{719, 318}], 
       LineBox[{720, 319}], LineBox[{721, 320}], LineBox[{722, 321}], 
       LineBox[{723, 322}], LineBox[{724, 323}], LineBox[{725, 324}], 
       LineBox[{726, 325}], LineBox[{727, 326}], LineBox[{738, 337}], 
       LineBox[{739, 338}], LineBox[{740, 339}], LineBox[{741, 340}], 
       LineBox[{742, 341}], LineBox[{743, 342}], LineBox[{744, 343}], 
       LineBox[{745, 344}], LineBox[{746, 345}], LineBox[{747, 346}], 
       LineBox[{748, 347}], LineBox[{773, 372}], LineBox[{774, 373}], 
       LineBox[{775, 374}], LineBox[{776, 375}], LineBox[{777, 376}], 
       LineBox[{778, 377}], LineBox[{779, 378}], LineBox[{780, 379}], 
       LineBox[{781, 380}], LineBox[{782, 381}], LineBox[{783, 382}], 
       LineBox[{784, 383}], LineBox[{785, 384}], LineBox[{786, 385}], 
       LineBox[{787, 386}], LineBox[{788, 387}], LineBox[{789, 388}], 
       LineBox[{790, 389}], LineBox[{791, 390}], LineBox[{792, 391}], 
       LineBox[{793, 392}], LineBox[{794, 393}], LineBox[{795, 394}], 
       LineBox[{796, 395}], LineBox[{797, 396}], LineBox[{798, 397}], 
       LineBox[{799, 398}], LineBox[{800, 399}], LineBox[{801, 400}], 
       LineBox[{802, 401}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{415, 14}], LineBox[{416, 15}], LineBox[{417, 16}], 
       LineBox[{418, 17}], LineBox[{419, 18}], LineBox[{420, 19}], 
       LineBox[{421, 20}], LineBox[{422, 21}], LineBox[{423, 22}], 
       LineBox[{424, 23}], LineBox[{425, 24}], LineBox[{426, 25}], 
       LineBox[{427, 26}], LineBox[{428, 27}], LineBox[{429, 28}], 
       LineBox[{430, 29}], LineBox[{431, 30}], LineBox[{432, 31}], 
       LineBox[{433, 32}], LineBox[{434, 33}], LineBox[{435, 34}], 
       LineBox[{436, 35}], LineBox[{437, 36}], LineBox[{438, 37}], 
       LineBox[{439, 38}], LineBox[{440, 39}], LineBox[{441, 40}], 
       LineBox[{442, 41}], LineBox[{443, 42}], LineBox[{444, 43}], 
       LineBox[{459, 58}], LineBox[{460, 59}], LineBox[{461, 60}], 
       LineBox[{464, 63}], LineBox[{465, 64}], LineBox[{466, 65}], 
       LineBox[{467, 66}], LineBox[{468, 67}], LineBox[{469, 68}], 
       LineBox[{470, 69}], LineBox[{486, 85}], LineBox[{487, 86}], 
       LineBox[{491, 90}], LineBox[{544, 143}], LineBox[{545, 144}], 
       LineBox[{546, 145}], LineBox[{547, 146}], LineBox[{548, 147}], 
       LineBox[{549, 148}], LineBox[{550, 149}], LineBox[{551, 150}], 
       LineBox[{552, 151}], LineBox[{553, 152}], LineBox[{554, 153}], 
       LineBox[{555, 154}], LineBox[{556, 155}], LineBox[{557, 156}], 
       LineBox[{558, 157}], LineBox[{559, 158}], LineBox[{560, 159}], 
       LineBox[{561, 160}], LineBox[{562, 161}], LineBox[{563, 162}], 
       LineBox[{564, 163}], LineBox[{565, 164}], LineBox[{566, 165}], 
       LineBox[{567, 166}], LineBox[{568, 167}], LineBox[{569, 168}], 
       LineBox[{585, 184}], LineBox[{586, 185}], LineBox[{587, 186}], 
       LineBox[{588, 187}], LineBox[{589, 188}], LineBox[{590, 189}], 
       LineBox[{591, 190}], LineBox[{592, 191}], LineBox[{593, 192}], 
       LineBox[{594, 193}], LineBox[{595, 194}], LineBox[{596, 195}], 
       LineBox[{597, 196}], LineBox[{598, 197}], LineBox[{599, 198}], 
       LineBox[{600, 199}], LineBox[{601, 200}], LineBox[{602, 201}], 
       LineBox[{603, 202}], LineBox[{604, 203}], LineBox[{607, 206}], 
       LineBox[{617, 216}], LineBox[{623, 222}], LineBox[{624, 223}], 
       LineBox[{625, 224}], LineBox[{626, 225}], LineBox[{627, 226}], 
       LineBox[{628, 227}], LineBox[{629, 228}], LineBox[{630, 229}], 
       LineBox[{661, 260}], LineBox[{662, 261}], LineBox[{666, 265}], 
       LineBox[{667, 266}], LineBox[{668, 267}], LineBox[{669, 268}], 
       LineBox[{670, 269}], LineBox[{671, 270}], LineBox[{672, 271}], 
       LineBox[{673, 272}], LineBox[{674, 273}], LineBox[{675, 274}], 
       LineBox[{676, 275}], LineBox[{677, 276}], LineBox[{705, 304}], 
       LineBox[{706, 305}], LineBox[{707, 306}], LineBox[{708, 307}], 
       LineBox[{709, 308}], LineBox[{710, 309}], LineBox[{718, 317}], 
       LineBox[{728, 327}], LineBox[{729, 328}], LineBox[{730, 329}], 
       LineBox[{731, 330}], LineBox[{732, 331}], LineBox[{733, 332}], 
       LineBox[{734, 333}], LineBox[{735, 334}], LineBox[{736, 335}], 
       LineBox[{737, 336}], LineBox[{749, 348}], LineBox[{750, 349}], 
       LineBox[{751, 350}], LineBox[{752, 351}], LineBox[{753, 352}], 
       LineBox[{754, 353}], LineBox[{755, 354}], LineBox[{756, 355}], 
       LineBox[{757, 356}], LineBox[{758, 357}], LineBox[{759, 358}], 
       LineBox[{760, 359}], LineBox[{761, 360}], LineBox[{762, 361}], 
       LineBox[{763, 362}], LineBox[{764, 363}], LineBox[{765, 364}], 
       LineBox[{766, 365}], LineBox[{767, 366}], LineBox[{768, 367}], 
       LineBox[{769, 368}], LineBox[{770, 369}], LineBox[{771, 370}], 
       LineBox[{772, 371}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwNxFVgFQQAAMCHDBNBBUREgUl3jI5RGzF6wOgBo8YGG92M0bENGDG62Rhd
UiYoZbe0CgYGKKESBtzHXXBMYmRCjkAgkK7iOQOBEpSkFKUpQ1nKUZ4KVKQS
lalCVaoRQnVqUJNa1KYOdalHfRoQSkMa0ZgmNCWMcJrRnBa0JIJWtKYNbWlH
ezoQSUc60ZkoutCVbnSnBz3pRTS96UNfYuhHfwYwkEHEMpg44hnCUBJIZBjD
GcFIRjGaMYxlHOOZwEQmMZkkppDMVKYxnRnMZBazmcNc5pFCKmnMZwELSWcR
i1nCUjJYxnJWsJJVrGYNa1nHejawkU1sJpMstpDNVraxnR3sZBe72cNe9rGf
VznAQQ5xmCO8xuu8wZu8xdsc5Rjv8C7HOcFJTnGa93ifD/iQj/iYT/iUz/ic
L/iSr/iaM5zlHOe5wEUu8Q3f8h2XucL3/MCP/MRVfuYXfuU3rnGd3/mDG9zk
Frf5k7/4mzvc5R73+Yd/+Y//eUAgKBDIwSPkJIhcPMpjPM4TPMlT5OZp8pCX
Z3iW58hHfgrwPAV5gUK8SGFe4mWKUJRiBPMKxSlBSUpRmjKUpRzlqUBFKlGZ
KlSlGiFUpwY1qUVt6lCXetSnAaE0pBGNaUJTwginGc1pQUsiaEVr2tCWdrSn
A5F0pBOdiaILXelGd3rQk15E05s+9CWGfvRnAAMZRCyDiSOeIQwlgUSGMZwR
jGQUoxnDWMYxnglMZBKTSWIKyUxlGtOZwUxmMZs5zGUeKaSSxnwWsJB0FrGY
JSwlg2UsZwUrWcVq1rCWdaxnAxvZxGYyyWIL2WxlG9vZwU52sZs97GUf+3kI
xx7DyA==
        "]]}, {}}}], {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{27.391115525200807`, 0.},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
     FormBox["\"predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{27.852897329816695`, 
   57.406932825233625`}, {-21.687937987081835`, 21.687937987081835`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.793258195529544*^9},ExpressionUUID->"2a0a51df-13d3-441a-86bb-\
4541e9dd3fa9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ComparisonPlot\>\"", "]"}]], "Input",ExpressionUUID->"d7051f62-effe-49bd-a911-7faa4938a1e7"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          AbsolutePointSize[6]], 
         GeometricTransformationBox[
          InsetBox[
           GraphicsBox[{
             Directive[
              PointSize[0.007333333333333334], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              AbsolutePointSize[6]], 
             AbsoluteThickness[1.], 
             RGBColor[0.34398, 0.49112, 0.89936], 
             CircleBox[{0, 0}, 
              Offset[{1.8, 1.8}, {0., 0.}]]}], {0., 0.}], CompressedData["
1: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
vuIQ1g==
          "]]}, {}}, {
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.50157017568157, 38.16428479854924}]}}, 
          RowBox[{"{", 
            RowBox[{"53.50157017568157`", ",", "38.16428479854924`"}], "}"}]],
          Annotation[#, {53.50157017568157, 38.16428479854924}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{55.76507688401051, 36.60655489620997}]}}, 
          RowBox[{"{", 
            RowBox[{"55.76507688401051`", ",", "36.60655489620997`"}], "}"}]],
          Annotation[#, {55.76507688401051, 36.60655489620997}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{55.6294998980775, 34.974320862761466`}]}}, 
          RowBox[{"{", 
            RowBox[{"55.6294998980775`", ",", "34.974320862761466`"}], "}"}]],
          Annotation[#, {55.6294998980775, 34.974320862761466`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.643912460523346`, 34.655550449656864`}]}}, 
          RowBox[{"{", 
            RowBox[{"53.643912460523346`", ",", "34.655550449656864`"}], 
            "}"}]], Annotation[#, {53.643912460523346`, 34.655550449656864`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.5324173033138, 36.71414218858353}]}}, 
          RowBox[{"{", 
            RowBox[{"50.5324173033138`", ",", "36.71414218858353`"}], "}"}]], 
         Annotation[#, {50.5324173033138, 36.71414218858353}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.39885423800825, 35.77577723514706}]}}, 
          RowBox[{"{", 
            RowBox[{"50.39885423800825`", ",", "35.77577723514706`"}], "}"}]],
          Annotation[#, {50.39885423800825, 35.77577723514706}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.711136773938335`, 37.36790400763526}]}}, 
          RowBox[{"{", 
            RowBox[{"50.711136773938335`", ",", "37.36790400763526`"}], 
            "}"}]], 
         Annotation[#, {50.711136773938335`, 37.36790400763526}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.991612626392545`, 38.60571559473989}]}}, 
          RowBox[{"{", 
            RowBox[{"49.991612626392545`", ",", "38.60571559473989`"}], 
            "}"}]], Annotation[#, {49.991612626392545`, 38.60571559473989}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.95866913204101, 37.589657107355976`}]}}, 
          RowBox[{"{", 
            RowBox[{"45.95866913204101`", ",", "37.589657107355976`"}], 
            "}"}]], Annotation[#, {45.95866913204101, 37.589657107355976`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.93215497185251, 44.092954542922506`}]}}, 
          RowBox[{"{", 
            RowBox[{"45.93215497185251`", ",", "44.092954542922506`"}], 
            "}"}]], Annotation[#, {45.93215497185251, 44.092954542922506`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.39869484953372, 41.88301378719356}]}}, 
          RowBox[{"{", 
            RowBox[{"45.39869484953372`", ",", "41.88301378719356`"}], "}"}]],
          Annotation[#, {45.39869484953372, 41.88301378719356}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{44.96263719501072, 43.76223838051828}]}}, 
          RowBox[{"{", 
            RowBox[{"44.96263719501072`", ",", "43.76223838051828`"}], "}"}]],
          Annotation[#, {44.96263719501072, 43.76223838051828}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{44.148520463103594`, 42.43893805044584}]}}, 
          RowBox[{"{", 
            RowBox[{"44.148520463103594`", ",", "42.43893805044584`"}], 
            "}"}]], 
         Annotation[#, {44.148520463103594`, 42.43893805044584}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.39793849744709, 42.184015405617906`}]}}, 
          RowBox[{"{", 
            RowBox[{"41.39793849744709`", ",", "42.184015405617906`"}], 
            "}"}]], Annotation[#, {41.39793849744709, 42.184015405617906`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{38.89134813866978, 43.06441585500611}]}}, 
          RowBox[{"{", 
            RowBox[{"38.89134813866978`", ",", "43.06441585500611`"}], "}"}]],
          Annotation[#, {38.89134813866978, 43.06441585500611}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{36.423527308976134`, 43.91699860554599}]}}, 
          RowBox[{"{", 
            RowBox[{"36.423527308976134`", ",", "43.91699860554599`"}], 
            "}"}]], Annotation[#, {36.423527308976134`, 43.91699860554599}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{36.62196139382398, 44.27114848973329}]}}, 
          RowBox[{"{", 
            RowBox[{"36.62196139382398`", ",", "44.27114848973329`"}], "}"}]],
          Annotation[#, {36.62196139382398, 44.27114848973329}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{42.16090039436568, 49.09546597827365}]}}, 
          RowBox[{"{", 
            RowBox[{"42.16090039436568`", ",", "49.09546597827365`"}], "}"}]],
          Annotation[#, {42.16090039436568, 49.09546597827365}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{42.95241225195227, 49.354972157905294`}]}}, 
          RowBox[{"{", 
            RowBox[{"42.95241225195227`", ",", "49.354972157905294`"}], 
            "}"}]], 
         Annotation[#, {42.95241225195227, 49.354972157905294`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.29554286647043, 47.820116229494154`}]}}, 
          RowBox[{"{", 
            RowBox[{"41.29554286647043`", ",", "47.820116229494154`"}], 
            "}"}]], Annotation[#, {41.29554286647043, 47.820116229494154`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{36.8554888330389, 45.06473980189394}]}}, 
          RowBox[{"{", 
            RowBox[{"36.8554888330389`", ",", "45.06473980189394`"}], "}"}]], 
         Annotation[#, {36.8554888330389, 45.06473980189394}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{34.995210475746696`, 44.05286449102411}]}}, 
          RowBox[{"{", 
            RowBox[{"34.995210475746696`", ",", "44.05286449102411`"}], 
            "}"}]], Annotation[#, {34.995210475746696`, 44.05286449102411}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.94953890071422, 47.48493491836658}]}}, 
          RowBox[{"{", 
            RowBox[{"43.94953890071422`", ",", "47.48493491836658`"}], "}"}]],
          Annotation[#, {43.94953890071422, 47.48493491836658}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.83411770076309, 45.76696423160558}]}}, 
          RowBox[{"{", 
            RowBox[{"41.83411770076309`", ",", "45.76696423160558`"}], "}"}]],
          Annotation[#, {41.83411770076309, 45.76696423160558}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.69235038727052, 45.10319658490451}]}}, 
          RowBox[{"{", 
            RowBox[{"40.69235038727052`", ",", "45.10319658490451`"}], "}"}]],
          Annotation[#, {40.69235038727052, 45.10319658490451}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{42.212277320600364`, 45.69354817726215}]}}, 
          RowBox[{"{", 
            RowBox[{"42.212277320600364`", ",", "45.69354817726215`"}], 
            "}"}]], Annotation[#, {42.212277320600364`, 45.69354817726215}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{39.02006090990769, 43.358882289513204`}]}}, 
          RowBox[{"{", 
            RowBox[{"39.02006090990769`", ",", "43.358882289513204`"}], 
            "}"}]], Annotation[#, {39.02006090990769, 43.358882289513204`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{39.1265561818747, 44.061261773187276`}]}}, 
          RowBox[{"{", 
            RowBox[{"39.1265561818747`", ",", "44.061261773187276`"}], "}"}]],
          Annotation[#, {39.1265561818747, 44.061261773187276`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{38.437159194807926`, 42.84523754125369}]}}, 
          RowBox[{"{", 
            RowBox[{"38.437159194807926`", ",", "42.84523754125369`"}], 
            "}"}]], Annotation[#, {38.437159194807926`, 42.84523754125369}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{36.70832985683862, 41.323400679684866`}]}}, 
          RowBox[{"{", 
            RowBox[{"36.70832985683862`", ",", "41.323400679684866`"}], 
            "}"}]], Annotation[#, {36.70832985683862, 41.323400679684866`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{34.487392230799664`, 39.59287107937973}]}}, 
          RowBox[{"{", 
            RowBox[{"34.487392230799664`", ",", "39.59287107937973`"}], 
            "}"}]], 
         Annotation[#, {34.487392230799664`, 39.59287107937973}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{33.79170633895309, 38.05850757608943}]}}, 
          RowBox[{"{", 
            RowBox[{"33.79170633895309`", ",", "38.05850757608943`"}], "}"}]],
          Annotation[#, {33.79170633895309, 38.05850757608943}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{36.55236147801956, 40.82745077052539}]}}, 
          RowBox[{"{", 
            RowBox[{"36.55236147801956`", ",", "40.82745077052539`"}], "}"}]],
          Annotation[#, {36.55236147801956, 40.82745077052539}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{33.092987722343764`, 40.041217434685706`}]}}, 
          RowBox[{"{", 
            RowBox[{"33.092987722343764`", ",", "40.041217434685706`"}], 
            "}"}]], Annotation[#, {33.092987722343764`, 40.041217434685706`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{38.376988273410646`, 41.03498877304171}]}}, 
          RowBox[{"{", 
            RowBox[{"38.376988273410646`", ",", "41.03498877304171`"}], 
            "}"}]], Annotation[#, {38.376988273410646`, 41.03498877304171}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{37.92102606366224, 41.629913358928384`}]}}, 
          RowBox[{"{", 
            RowBox[{"37.92102606366224`", ",", "41.629913358928384`"}], 
            "}"}]], Annotation[#, {37.92102606366224, 41.629913358928384`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.10597495502764, 45.93998827438114}]}}, 
          RowBox[{"{", 
            RowBox[{"45.10597495502764`", ",", "45.93998827438114`"}], "}"}]],
          Annotation[#, {45.10597495502764, 45.93998827438114}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.92073807743202, 44.772542249501676`}]}}, 
          RowBox[{"{", 
            RowBox[{"41.92073807743202`", ",", "44.772542249501676`"}], 
            "}"}]], Annotation[#, {41.92073807743202, 44.772542249501676`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.003774046388216`, 43.436750433447024`}]}}, 
          RowBox[{"{", 
            RowBox[{"41.003774046388216`", ",", "43.436750433447024`"}], 
            "}"}]], Annotation[#, {41.003774046388216`, 43.436750433447024`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{37.834034218108044`, 42.14414511335361}]}}, 
          RowBox[{"{", 
            RowBox[{"37.834034218108044`", ",", "42.14414511335361`"}], 
            "}"}]], Annotation[#, {37.834034218108044`, 42.14414511335361}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{38.244382320890324`, 41.874293846789065`}]}}, 
          RowBox[{"{", 
            RowBox[{"38.244382320890324`", ",", "41.874293846789065`"}], 
            "}"}]], Annotation[#, {38.244382320890324`, 41.874293846789065`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.34861128500903, 41.45268138165381}]}}, 
          RowBox[{"{", 
            RowBox[{"40.34861128500903`", ",", "41.45268138165381`"}], "}"}]],
          Annotation[#, {40.34861128500903, 41.45268138165381}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.42301907356223, 42.26196964194479}]}}, 
          RowBox[{"{", 
            RowBox[{"40.42301907356223`", ",", "42.26196964194479`"}], "}"}]],
          Annotation[#, {40.42301907356223, 42.26196964194479}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.23944490794812, 39.92489693295875}]}}, 
          RowBox[{"{", 
            RowBox[{"40.23944490794812`", ",", "39.92489693295875`"}], "}"}]],
          Annotation[#, {40.23944490794812, 39.92489693295875}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.511366105763884`, 39.36013342110742}]}}, 
          RowBox[{"{", 
            RowBox[{"40.511366105763884`", ",", "39.36013342110742`"}], 
            "}"}]], Annotation[#, {40.511366105763884`, 39.36013342110742}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.477590307042064`, 38.675304497320454`}]}}, 
          RowBox[{"{", 
            RowBox[{"41.477590307042064`", ",", "38.675304497320454`"}], 
            "}"}]], Annotation[#, {41.477590307042064`, 38.675304497320454`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{44.84751843504357, 42.98409183692718}]}}, 
          RowBox[{"{", 
            RowBox[{"44.84751843504357`", ",", "42.98409183692718`"}], "}"}]],
          Annotation[#, {44.84751843504357, 42.98409183692718}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.133506655565, 42.39726715557504}]}}, 
          RowBox[{"{", 
            RowBox[{"46.133506655565`", ",", "42.39726715557504`"}], "}"}]], 
         Annotation[#, {46.133506655565, 42.39726715557504}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.274301878803776`, 47.023866006338814`}]}}, 
          RowBox[{"{", 
            RowBox[{"49.274301878803776`", ",", "47.023866006338814`"}], 
            "}"}]], 
         Annotation[#, {49.274301878803776`, 47.023866006338814`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.6707218483101, 46.649299797505776`}]}}, 
          RowBox[{"{", 
            RowBox[{"49.6707218483101`", ",", "46.649299797505776`"}], "}"}]],
          Annotation[#, {49.6707218483101, 46.649299797505776`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.54185870609315, 48.92372602719337}]}}, 
          RowBox[{"{", 
            RowBox[{"52.54185870609315`", ",", "48.92372602719337`"}], "}"}]],
          Annotation[#, {52.54185870609315, 48.92372602719337}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.201548170322624`, 49.39958277491413}]}}, 
          RowBox[{"{", 
            RowBox[{"52.201548170322624`", ",", "49.39958277491413`"}], 
            "}"}]], Annotation[#, {52.201548170322624`, 49.39958277491413}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.56225824096167, 50.05875013803275}]}}, 
          RowBox[{"{", 
            RowBox[{"52.56225824096167`", ",", "50.05875013803275`"}], "}"}]],
          Annotation[#, {52.56225824096167, 50.05875013803275}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.239312750406675`, 49.081082550606496`}]}}, 
          RowBox[{"{", 
            RowBox[{"52.239312750406675`", ",", "49.081082550606496`"}], 
            "}"}]], Annotation[#, {52.239312750406675`, 49.081082550606496`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.933499355588275`, 49.267542029171935`}]}}, 
          RowBox[{"{", 
            RowBox[{"49.933499355588275`", ",", "49.267542029171935`"}], 
            "}"}]], 
         Annotation[#, {49.933499355588275`, 49.267542029171935`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.39904354136392, 49.37571151567647}]}}, 
          RowBox[{"{", 
            RowBox[{"51.39904354136392`", ",", "49.37571151567647`"}], "}"}]],
          Annotation[#, {51.39904354136392, 49.37571151567647}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.00020396674695, 49.05533267549301}]}}, 
          RowBox[{"{", 
            RowBox[{"50.00020396674695`", ",", "49.05533267549301`"}], "}"}]],
          Annotation[#, {50.00020396674695, 49.05533267549301}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.726899392793996`, 54.084442886580185`}]}}, 
          RowBox[{"{", 
            RowBox[{"51.726899392793996`", ",", "54.084442886580185`"}], 
            "}"}]], Annotation[#, {51.726899392793996`, 54.084442886580185`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.73787198014359, 54.59170669559685}]}}, 
          RowBox[{"{", 
            RowBox[{"50.73787198014359`", ",", "54.59170669559685`"}], "}"}]],
          Annotation[#, {50.73787198014359, 54.59170669559685}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.20890464276463, 52.773380784390575`}]}}, 
          RowBox[{"{", 
            RowBox[{"51.20890464276463`", ",", "52.773380784390575`"}], 
            "}"}]], Annotation[#, {51.20890464276463, 52.773380784390575`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.007335083892244`, 51.00235264395432}]}}, 
          RowBox[{"{", 
            RowBox[{"52.007335083892244`", ",", "51.00235264395432`"}], 
            "}"}]], 
         Annotation[#, {52.007335083892244`, 51.00235264395432}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.263105995209955`, 49.17585713501965}]}}, 
          RowBox[{"{", 
            RowBox[{"50.263105995209955`", ",", "49.17585713501965`"}], 
            "}"}]], Annotation[#, {50.263105995209955`, 49.17585713501965}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.624701602526876`, 48.82827338113846}]}}, 
          RowBox[{"{", 
            RowBox[{"47.624701602526876`", ",", "48.82827338113846`"}], 
            "}"}]], Annotation[#, {47.624701602526876`, 48.82827338113846}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.23622382235389, 53.47550388085763}]}}, 
          RowBox[{"{", 
            RowBox[{"51.23622382235389`", ",", "53.47550388085763`"}], "}"}]],
          Annotation[#, {51.23622382235389, 53.47550388085763}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.48333271407966, 57.094801340052136`}]}}, 
          RowBox[{"{", 
            RowBox[{"51.48333271407966`", ",", "57.094801340052136`"}], 
            "}"}]], Annotation[#, {51.48333271407966, 57.094801340052136`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{54.9482890376024, 61.987258733569824`}]}}, 
          RowBox[{"{", 
            RowBox[{"54.9482890376024`", ",", "61.987258733569824`"}], "}"}]],
          Annotation[#, {54.9482890376024, 61.987258733569824`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{55.442429672044966`, 60.5540224571058}]}}, 
          RowBox[{"{", 
            RowBox[{"55.442429672044966`", ",", "60.5540224571058`"}], "}"}]],
          Annotation[#, {55.442429672044966`, 60.5540224571058}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{54.949313637714944`, 59.06649796606328}]}}, 
          RowBox[{"{", 
            RowBox[{"54.949313637714944`", ",", "59.06649796606328`"}], 
            "}"}]], Annotation[#, {54.949313637714944`, 59.06649796606328}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{56.34205485364209, 57.28823251790205}]}}, 
          RowBox[{"{", 
            RowBox[{"56.34205485364209`", ",", "57.28823251790205`"}], "}"}]],
          Annotation[#, {56.34205485364209, 57.28823251790205}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{56.787715494622894`, 55.28792101630718}]}}, 
          RowBox[{"{", 
            RowBox[{"56.787715494622894`", ",", "55.28792101630718`"}], 
            "}"}]], Annotation[#, {56.787715494622894`, 55.28792101630718}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{55.49096036619701, 53.63158325523676}]}}, 
          RowBox[{"{", 
            RowBox[{"55.49096036619701`", ",", "53.63158325523676`"}], "}"}]],
          Annotation[#, {55.49096036619701, 53.63158325523676}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.40302566447044, 51.924035442802754`}]}}, 
          RowBox[{"{", 
            RowBox[{"53.40302566447044`", ",", "51.924035442802754`"}], 
            "}"}]], Annotation[#, {53.40302566447044, 51.924035442802754`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.22648824363512, 50.398396351285456`}]}}, 
          RowBox[{"{", 
            RowBox[{"53.22648824363512`", ",", "50.398396351285456`"}], 
            "}"}]], 
         Annotation[#, {53.22648824363512, 50.398396351285456`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.820313022678405`, 48.17372641384202}]}}, 
          RowBox[{"{", 
            RowBox[{"48.820313022678405`", ",", "48.17372641384202`"}], 
            "}"}]], Annotation[#, {48.820313022678405`, 48.17372641384202}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.47274695787109, 45.86774058123825}]}}, 
          RowBox[{"{", 
            RowBox[{"48.47274695787109`", ",", "45.86774058123825`"}], "}"}]],
          Annotation[#, {48.47274695787109, 45.86774058123825}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{44.672638636845015`, 43.589226473887436`}]}}, 
          RowBox[{"{", 
            RowBox[{"44.672638636845015`", ",", "43.589226473887436`"}], 
            "}"}]], Annotation[#, {44.672638636845015`, 43.589226473887436`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{42.54532964752911, 41.13748995266453}]}}, 
          RowBox[{"{", 
            RowBox[{"42.54532964752911`", ",", "41.13748995266453`"}], "}"}]],
          Annotation[#, {42.54532964752911, 41.13748995266453}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.68599254192074, 39.66059148881078}]}}, 
          RowBox[{"{", 
            RowBox[{"40.68599254192074`", ",", "39.66059148881078`"}], "}"}]],
          Annotation[#, {40.68599254192074, 39.66059148881078}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{38.5069333149293, 36.949257094599574`}]}}, 
          RowBox[{"{", 
            RowBox[{"38.5069333149293`", ",", "36.949257094599574`"}], "}"}]],
          Annotation[#, {38.5069333149293, 36.949257094599574`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{37.68082125658249, 34.339330982196365`}]}}, 
          RowBox[{"{", 
            RowBox[{"37.68082125658249`", ",", "34.339330982196365`"}], 
            "}"}]], Annotation[#, {37.68082125658249, 34.339330982196365`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.88845285841296, 40.317342082290274`}]}}, 
          RowBox[{"{", 
            RowBox[{"41.88845285841296`", ",", "40.317342082290274`"}], 
            "}"}]], Annotation[#, {41.88845285841296, 40.317342082290274`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{42.079694891099216`, 39.844600385114006`}]}}, 
          RowBox[{"{", 
            RowBox[{"42.079694891099216`", ",", "39.844600385114006`"}], 
            "}"}]], Annotation[#, {42.079694891099216`, 39.844600385114006`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.57764737851689, 39.54893846026813}]}}, 
          RowBox[{"{", 
            RowBox[{"40.57764737851689`", ",", "39.54893846026813`"}], "}"}]],
          Annotation[#, {40.57764737851689, 39.54893846026813}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.20327491621374, 39.78643839444961}]}}, 
          RowBox[{"{", 
            RowBox[{"40.20327491621374`", ",", "39.78643839444961`"}], "}"}]],
          Annotation[#, {40.20327491621374, 39.78643839444961}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.54630191931138, 41.55284166558789}]}}, 
          RowBox[{"{", 
            RowBox[{"41.54630191931138`", ",", "41.55284166558789`"}], "}"}]],
          Annotation[#, {41.54630191931138, 41.55284166558789}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.014699458503785`, 40.253200055603635`}]}}, 
          RowBox[{"{", 
            RowBox[{"40.014699458503785`", ",", "40.253200055603635`"}], 
            "}"}]], Annotation[#, {40.014699458503785`, 40.253200055603635`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.5468352885925, 40.51508842039031}]}}, 
          RowBox[{"{", 
            RowBox[{"40.5468352885925`", ",", "40.51508842039031`"}], "}"}]], 
         Annotation[#, {40.5468352885925, 40.51508842039031}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{42.16610450433848, 41.710597913949904`}]}}, 
          RowBox[{"{", 
            RowBox[{"42.16610450433848`", ",", "41.710597913949904`"}], 
            "}"}]], Annotation[#, {42.16610450433848, 41.710597913949904`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.342397082334394`, 40.059277444627206`}]}}, 
          RowBox[{"{", 
            RowBox[{"40.342397082334394`", ",", "40.059277444627206`"}], 
            "}"}]], Annotation[#, {40.342397082334394`, 40.059277444627206`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{39.37435023852638, 39.5424112112084}]}}, 
          RowBox[{"{", 
            RowBox[{"39.37435023852638`", ",", "39.5424112112084`"}], "}"}]], 
         Annotation[#, {39.37435023852638, 39.5424112112084}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.67931013900094, 44.36138808013899}]}}, 
          RowBox[{"{", 
            RowBox[{"45.67931013900094`", ",", "44.36138808013899`"}], "}"}]],
          Annotation[#, {45.67931013900094, 44.36138808013899}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{44.20940138154784, 43.19318848743214}]}}, 
          RowBox[{"{", 
            RowBox[{"44.20940138154784`", ",", "43.19318848743214`"}], "}"}]],
          Annotation[#, {44.20940138154784, 43.19318848743214}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.55747947672947, 43.34981231810715}]}}, 
          RowBox[{"{", 
            RowBox[{"43.55747947672947`", ",", "43.34981231810715`"}], "}"}]],
          Annotation[#, {43.55747947672947, 43.34981231810715}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.34471315951708, 48.23817501733661}]}}, 
          RowBox[{"{", 
            RowBox[{"48.34471315951708`", ",", "48.23817501733661`"}], "}"}]],
          Annotation[#, {48.34471315951708, 48.23817501733661}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.77009253962648, 46.30542205807463}]}}, 
          RowBox[{"{", 
            RowBox[{"46.77009253962648`", ",", "46.30542205807463`"}], "}"}]],
          Annotation[#, {46.77009253962648, 46.30542205807463}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.94053599413195, 49.63943120543298}]}}, 
          RowBox[{"{", 
            RowBox[{"51.94053599413195`", ",", "49.63943120543298`"}], "}"}]],
          Annotation[#, {51.94053599413195, 49.63943120543298}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.27464668070543, 48.87625567746233}]}}, 
          RowBox[{"{", 
            RowBox[{"51.27464668070543`", ",", "48.87625567746233`"}], "}"}]],
          Annotation[#, {51.27464668070543, 48.87625567746233}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.64215458529753, 46.28727692526096}]}}, 
          RowBox[{"{", 
            RowBox[{"48.64215458529753`", ",", "46.28727692526096`"}], "}"}]],
          Annotation[#, {48.64215458529753, 46.28727692526096}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.895634783025294`, 43.52617534975837}]}}, 
          RowBox[{"{", 
            RowBox[{"46.895634783025294`", ",", "43.52617534975837`"}], 
            "}"}]], Annotation[#, {46.895634783025294`, 43.52617534975837}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.049146877769594`, 40.85791455143149}]}}, 
          RowBox[{"{", 
            RowBox[{"45.049146877769594`", ",", "40.85791455143149`"}], 
            "}"}]], Annotation[#, {45.049146877769594`, 40.85791455143149}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{44.53422224884612, 39.55785704401333}]}}, 
          RowBox[{"{", 
            RowBox[{"44.53422224884612`", ",", "39.55785704401333`"}], "}"}]],
          Annotation[#, {44.53422224884612, 39.55785704401333}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.50668928640465, 45.109393835941326`}]}}, 
          RowBox[{"{", 
            RowBox[{"48.50668928640465`", ",", "45.109393835941326`"}], 
            "}"}]], Annotation[#, {48.50668928640465, 45.109393835941326`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.33157450450818, 42.58278566547018}]}}, 
          RowBox[{"{", 
            RowBox[{"47.33157450450818`", ",", "42.58278566547018`"}], "}"}]],
          Annotation[#, {47.33157450450818, 42.58278566547018}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.041960983642944`, 44.499893673715}]}}, 
          RowBox[{"{", 
            RowBox[{"48.041960983642944`", ",", "44.499893673715`"}], "}"}]], 
         Annotation[#, {48.041960983642944`, 44.499893673715}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.72484217903651, 46.63969984824654}]}}, 
          RowBox[{"{", 
            RowBox[{"50.72484217903651`", ",", "46.63969984824654`"}], "}"}]],
          Annotation[#, {50.72484217903651, 46.63969984824654}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.58594178669313, 44.25642894060739}]}}, 
          RowBox[{"{", 
            RowBox[{"47.58594178669313`", ",", "44.25642894060739`"}], "}"}]],
          Annotation[#, {47.58594178669313, 44.25642894060739}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.899565671325234`, 42.890076273924656`}]}}, 
          RowBox[{"{", 
            RowBox[{"45.899565671325234`", ",", "42.890076273924656`"}], 
            "}"}]], Annotation[#, {45.899565671325234`, 42.890076273924656`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.12091308042929, 43.12520168959}]}}, 
          RowBox[{"{", 
            RowBox[{"45.12091308042929`", ",", "43.12520168959`"}], "}"}]], 
         Annotation[#, {45.12091308042929, 43.12520168959}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.29433169134439, 43.96732376575597}]}}, 
          RowBox[{"{", 
            RowBox[{"47.29433169134439`", ",", "43.96732376575597`"}], "}"}]],
          Annotation[#, {47.29433169134439, 43.96732376575597}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.45269389452878, 46.07053155154782}]}}, 
          RowBox[{"{", 
            RowBox[{"50.45269389452878`", ",", "46.07053155154782`"}], "}"}]],
          Annotation[#, {50.45269389452878, 46.07053155154782}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.22204872778731, 44.06085213993265}]}}, 
          RowBox[{"{", 
            RowBox[{"46.22204872778731`", ",", "44.06085213993265`"}], "}"}]],
          Annotation[#, {46.22204872778731, 44.06085213993265}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.47594242134117, 43.59754957864397}]}}, 
          RowBox[{"{", 
            RowBox[{"47.47594242134117`", ",", "43.59754957864397`"}], "}"}]],
          Annotation[#, {47.47594242134117, 43.59754957864397}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.847595182781546`, 47.048303816201326`}]}}, 
          RowBox[{"{", 
            RowBox[{"52.847595182781546`", ",", "47.048303816201326`"}], 
            "}"}]], Annotation[#, {52.847595182781546`, 47.048303816201326`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.61497215371071, 47.66241732782723}]}}, 
          RowBox[{"{", 
            RowBox[{"51.61497215371071`", ",", "47.66241732782723`"}], "}"}]],
          Annotation[#, {51.61497215371071, 47.66241732782723}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.409850686310094`, 47.0784352226108}]}}, 
          RowBox[{"{", 
            RowBox[{"52.409850686310094`", ",", "47.0784352226108`"}], "}"}]],
          Annotation[#, {52.409850686310094`, 47.0784352226108}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{54.18379732162123, 47.96580565193531}]}}, 
          RowBox[{"{", 
            RowBox[{"54.18379732162123`", ",", "47.96580565193531`"}], "}"}]],
          Annotation[#, {54.18379732162123, 47.96580565193531}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.155851908957665`, 45.132494812651565`}]}}, 
          RowBox[{"{", 
            RowBox[{"51.155851908957665`", ",", "45.132494812651565`"}], 
            "}"}]], Annotation[#, {51.155851908957665`, 45.132494812651565`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.15939717571869, 43.34710116671016}]}}, 
          RowBox[{"{", 
            RowBox[{"50.15939717571869`", ",", "43.34710116671016`"}], "}"}]],
          Annotation[#, {50.15939717571869, 43.34710116671016}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.182326083606476`, 42.042651098474096`}]}}, 
          RowBox[{"{", 
            RowBox[{"46.182326083606476`", ",", "42.042651098474096`"}], 
            "}"}]], Annotation[#, {46.182326083606476`, 42.042651098474096`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.78579114601009, 42.427814838462226`}]}}, 
          RowBox[{"{", 
            RowBox[{"47.78579114601009`", ",", "42.427814838462226`"}], 
            "}"}]], Annotation[#, {47.78579114601009, 42.427814838462226`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.74319604806445, 41.644335302204254`}]}}, 
          RowBox[{"{", 
            RowBox[{"46.74319604806445`", ",", "41.644335302204254`"}], 
            "}"}]], 
         Annotation[#, {46.74319604806445, 41.644335302204254`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.55045742183104, 40.397222607247464`}]}}, 
          RowBox[{"{", 
            RowBox[{"46.55045742183104`", ",", "40.397222607247464`"}], 
            "}"}]], Annotation[#, {46.55045742183104, 40.397222607247464`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.24023477161032, 44.093104303349264`}]}}, 
          RowBox[{"{", 
            RowBox[{"50.24023477161032`", ",", "44.093104303349264`"}], 
            "}"}]], Annotation[#, {50.24023477161032, 44.093104303349264`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.67472642177702, 43.0092528190684}]}}, 
          RowBox[{"{", 
            RowBox[{"47.67472642177702`", ",", "43.0092528190684`"}], "}"}]], 
         Annotation[#, {47.67472642177702, 43.0092528190684}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.83027014012647, 47.30010060168715}]}}, 
          RowBox[{"{", 
            RowBox[{"52.83027014012647`", ",", "47.30010060168715`"}], "}"}]],
          Annotation[#, {52.83027014012647, 47.30010060168715}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.23296878264227, 45.48136873955543}]}}, 
          RowBox[{"{", 
            RowBox[{"51.23296878264227`", ",", "45.48136873955543`"}], "}"}]],
          Annotation[#, {51.23296878264227, 45.48136873955543}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.177992615184564`, 43.93714162240553}]}}, 
          RowBox[{"{", 
            RowBox[{"50.177992615184564`", ",", "43.93714162240553`"}], 
            "}"}]], 
         Annotation[#, {50.177992615184564`, 43.93714162240553}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.32142185339865, 43.66778470317231}]}}, 
          RowBox[{"{", 
            RowBox[{"50.32142185339865`", ",", "43.66778470317231`"}], "}"}]],
          Annotation[#, {50.32142185339865, 43.66778470317231}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.17482466293998, 43.25373138552607}]}}, 
          RowBox[{"{", 
            RowBox[{"48.17482466293998`", ",", "43.25373138552607`"}], "}"}]],
          Annotation[#, {48.17482466293998, 43.25373138552607}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.867053414975295`, 42.55021200126168}]}}, 
          RowBox[{"{", 
            RowBox[{"47.867053414975295`", ",", "42.55021200126168`"}], 
            "}"}]], Annotation[#, {47.867053414975295`, 42.55021200126168}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.73035671316056, 47.19645862189004}]}}, 
          RowBox[{"{", 
            RowBox[{"52.73035671316056`", ",", "47.19645862189004`"}], "}"}]],
          Annotation[#, {52.73035671316056, 47.19645862189004}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.88894785622175, 46.95599615151705}]}}, 
          RowBox[{"{", 
            RowBox[{"50.88894785622175`", ",", "46.95599615151705`"}], "}"}]],
          Annotation[#, {50.88894785622175, 46.95599615151705}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.578308585683764`, 46.93121154413}]}}, 
          RowBox[{"{", 
            RowBox[{"49.578308585683764`", ",", "46.93121154413`"}], "}"}]], 
         Annotation[#, {49.578308585683764`, 46.93121154413}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.40867255463177, 44.14923590799571}]}}, 
          RowBox[{"{", 
            RowBox[{"46.40867255463177`", ",", "44.14923590799571`"}], "}"}]],
          Annotation[#, {46.40867255463177, 44.14923590799571}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.793468977320885`, 44.28405854617242}]}}, 
          RowBox[{"{", 
            RowBox[{"46.793468977320885`", ",", "44.28405854617242`"}], 
            "}"}]], Annotation[#, {46.793468977320885`, 44.28405854617242}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.16618618602893, 46.02208907420824}]}}, 
          RowBox[{"{", 
            RowBox[{"49.16618618602893`", ",", "46.02208907420824`"}], "}"}]],
          Annotation[#, {49.16618618602893, 46.02208907420824}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.642000056908024`, 43.86139797459831}]}}, 
          RowBox[{"{", 
            RowBox[{"46.642000056908024`", ",", "43.86139797459831`"}], 
            "}"}]], Annotation[#, {46.642000056908024`, 43.86139797459831}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.30942279628111, 45.21236768207537}]}}, 
          RowBox[{"{", 
            RowBox[{"45.30942279628111`", ",", "45.21236768207537`"}], "}"}]],
          Annotation[#, {45.30942279628111, 45.21236768207537}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.24428387656757, 43.86320633054999}]}}, 
          RowBox[{"{", 
            RowBox[{"46.24428387656757`", ",", "43.86320633054999`"}], "}"}]],
          Annotation[#, {46.24428387656757, 43.86320633054999}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.53789699693861, 47.417625466661576`}]}}, 
          RowBox[{"{", 
            RowBox[{"52.53789699693861`", ",", "47.417625466661576`"}], 
            "}"}]], Annotation[#, {52.53789699693861, 47.417625466661576`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.98892054438672, 49.4686967497754}]}}, 
          RowBox[{"{", 
            RowBox[{"51.98892054438672`", ",", "49.4686967497754`"}], "}"}]], 
         Annotation[#, {51.98892054438672, 49.4686967497754}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.748397272026715`, 51.12836400687806}]}}, 
          RowBox[{"{", 
            RowBox[{"51.748397272026715`", ",", "51.12836400687806`"}], 
            "}"}]], Annotation[#, {51.748397272026715`, 51.12836400687806}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.311092034160055`, 53.14386184954856}]}}, 
          RowBox[{"{", 
            RowBox[{"51.311092034160055`", ",", "53.14386184954856`"}], 
            "}"}]], Annotation[#, {51.311092034160055`, 53.14386184954856}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{55.365869101035884`, 56.42759338846003}]}}, 
          RowBox[{"{", 
            RowBox[{"55.365869101035884`", ",", "56.42759338846003`"}], 
            "}"}]], Annotation[#, {55.365869101035884`, 56.42759338846003}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.44239384042724, 53.847170658894406`}]}}, 
          RowBox[{"{", 
            RowBox[{"52.44239384042724`", ",", "53.847170658894406`"}], 
            "}"}]], 
         Annotation[#, {52.44239384042724, 53.847170658894406`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.898751977022805`, 53.83180394050333}]}}, 
          RowBox[{"{", 
            RowBox[{"52.898751977022805`", ",", "53.83180394050333`"}], 
            "}"}]], Annotation[#, {52.898751977022805`, 53.83180394050333}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.475969777150574`, 58.54535778720661}]}}, 
          RowBox[{"{", 
            RowBox[{"52.475969777150574`", ",", "58.54535778720661`"}], 
            "}"}]], Annotation[#, {52.475969777150574`, 58.54535778720661}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.55985664403032, 57.322409760679506`}]}}, 
          RowBox[{"{", 
            RowBox[{"52.55985664403032`", ",", "57.322409760679506`"}], 
            "}"}]], Annotation[#, {52.55985664403032, 57.322409760679506`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.47049541930151, 57.01040571489126}]}}, 
          RowBox[{"{", 
            RowBox[{"51.47049541930151`", ",", "57.01040571489126`"}], "}"}]],
          Annotation[#, {51.47049541930151, 57.01040571489126}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.33862737489855, 55.17083700463154}]}}, 
          RowBox[{"{", 
            RowBox[{"49.33862737489855`", ",", "55.17083700463154`"}], "}"}]],
          Annotation[#, {49.33862737489855, 55.17083700463154}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.1721050285444, 55.76840003096525}]}}, 
          RowBox[{"{", 
            RowBox[{"50.1721050285444`", ",", "55.76840003096525`"}], "}"}]], 
         Annotation[#, {50.1721050285444, 55.76840003096525}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.90767453901834, 53.89932880576981}]}}, 
          RowBox[{"{", 
            RowBox[{"48.90767453901834`", ",", "53.89932880576981`"}], "}"}]],
          Annotation[#, {48.90767453901834, 53.89932880576981}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.67657567890545, 52.098975705013935`}]}}, 
          RowBox[{"{", 
            RowBox[{"48.67657567890545`", ",", "52.098975705013935`"}], 
            "}"}]], Annotation[#, {48.67657567890545, 52.098975705013935`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.407928064300094`, 52.02738320404394}]}}, 
          RowBox[{"{", 
            RowBox[{"47.407928064300094`", ",", "52.02738320404394`"}], 
            "}"}]], Annotation[#, {47.407928064300094`, 52.02738320404394}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.677378493243666`, 50.523723657897136`}]}}, 
          RowBox[{"{", 
            RowBox[{"46.677378493243666`", ",", "50.523723657897136`"}], 
            "}"}]], Annotation[#, {46.677378493243666`, 50.523723657897136`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.548211727356396`, 48.50513026380869}]}}, 
          RowBox[{"{", 
            RowBox[{"46.548211727356396`", ",", "48.50513026380869`"}], 
            "}"}]], Annotation[#, {46.548211727356396`, 48.50513026380869}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.56393378289416, 53.51396144140049}]}}, 
          RowBox[{"{", 
            RowBox[{"45.56393378289416`", ",", "53.51396144140049`"}], "}"}]],
          Annotation[#, {45.56393378289416, 53.51396144140049}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.1029462144682, 52.816540808038226`}]}}, 
          RowBox[{"{", 
            RowBox[{"45.1029462144682`", ",", "52.816540808038226`"}], "}"}]],
          Annotation[#, {45.1029462144682, 52.816540808038226`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.05254127970579, 53.771483997683156`}]}}, 
          RowBox[{"{", 
            RowBox[{"45.05254127970579`", ",", "53.771483997683156`"}], 
            "}"}]], Annotation[#, {45.05254127970579, 53.771483997683156`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{44.979914842332576`, 57.586686983349686`}]}}, 
          RowBox[{"{", 
            RowBox[{"44.979914842332576`", ",", "57.586686983349686`"}], 
            "}"}]], Annotation[#, {44.979914842332576`, 57.586686983349686`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{44.76883115460017, 56.081512604028724`}]}}, 
          RowBox[{"{", 
            RowBox[{"44.76883115460017`", ",", "56.081512604028724`"}], 
            "}"}]], Annotation[#, {44.76883115460017, 56.081512604028724`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.126331251280035`, 57.85348144564697}]}}, 
          RowBox[{"{", 
            RowBox[{"45.126331251280035`", ",", "57.85348144564697`"}], 
            "}"}]], Annotation[#, {45.126331251280035`, 57.85348144564697}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.015329193092256`, 58.83700324340525}]}}, 
          RowBox[{"{", 
            RowBox[{"45.015329193092256`", ",", "58.83700324340525`"}], 
            "}"}]], 
         Annotation[#, {45.015329193092256`, 58.83700324340525}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.48767705365725, 63.88745934739798}]}}, 
          RowBox[{"{", 
            RowBox[{"47.48767705365725`", ",", "63.88745934739798`"}], "}"}]],
          Annotation[#, {47.48767705365725, 63.88745934739798}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.31681080447098, 61.19427593114286}]}}, 
          RowBox[{"{", 
            RowBox[{"47.31681080447098`", ",", "61.19427593114286`"}], "}"}]],
          Annotation[#, {47.31681080447098, 61.19427593114286}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.77765081177915, 58.630940771201665`}]}}, 
          RowBox[{"{", 
            RowBox[{"48.77765081177915`", ",", "58.630940771201665`"}], 
            "}"}]], Annotation[#, {48.77765081177915, 58.630940771201665`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.199343800377534`, 56.33260612590925}]}}, 
          RowBox[{"{", 
            RowBox[{"47.199343800377534`", ",", "56.33260612590925`"}], 
            "}"}]], Annotation[#, {47.199343800377534`, 56.33260612590925}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.717075262160314`, 54.18686340796397}]}}, 
          RowBox[{"{", 
            RowBox[{"46.717075262160314`", ",", "54.18686340796397`"}], 
            "}"}]], Annotation[#, {46.717075262160314`, 54.18686340796397}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.6907508748068, 51.79488433841746}]}}, 
          RowBox[{"{", 
            RowBox[{"53.6907508748068`", ",", "51.79488433841746`"}], "}"}]], 
         Annotation[#, {53.6907508748068, 51.79488433841746}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.45727174326762, 49.031088842585795`}]}}, 
          RowBox[{"{", 
            RowBox[{"51.45727174326762`", ",", "49.031088842585795`"}], 
            "}"}]], Annotation[#, {51.45727174326762, 49.031088842585795`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.974256756010085`, 46.289197588178006`}]}}, 
          RowBox[{"{", 
            RowBox[{"50.974256756010085`", ",", "46.289197588178006`"}], 
            "}"}]], Annotation[#, {50.974256756010085`, 46.289197588178006`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.36368241321087, 45.01569326979364}]}}, 
          RowBox[{"{", 
            RowBox[{"45.36368241321087`", ",", "45.01569326979364`"}], "}"}]],
          Annotation[#, {45.36368241321087, 45.01569326979364}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.86646187450298, 42.273077552522906`}]}}, 
          RowBox[{"{", 
            RowBox[{"47.86646187450298`", ",", "42.273077552522906`"}], 
            "}"}]], Annotation[#, {47.86646187450298, 42.273077552522906`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.250098528428715`, 39.477170910988704`}]}}, 
          RowBox[{"{", 
            RowBox[{"49.250098528428715`", ",", "39.477170910988704`"}], 
            "}"}]], Annotation[#, {49.250098528428715`, 39.477170910988704`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.92030874468708, 37.33116163568047}]}}, 
          RowBox[{"{", 
            RowBox[{"51.92030874468708`", ",", "37.33116163568047`"}], "}"}]],
          Annotation[#, {51.92030874468708, 37.33116163568047}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{54.14404455990397, 34.48642314433238}]}}, 
          RowBox[{"{", 
            RowBox[{"54.14404455990397`", ",", "34.48642314433238`"}], "}"}]],
          Annotation[#, {54.14404455990397, 34.48642314433238}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.21384291475987, 36.4989286688875}]}}, 
          RowBox[{"{", 
            RowBox[{"51.21384291475987`", ",", "36.4989286688875`"}], "}"}]], 
         Annotation[#, {51.21384291475987, 36.4989286688875}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.264918895655796`, 34.563232909676145`}]}}, 
          RowBox[{"{", 
            RowBox[{"49.264918895655796`", ",", "34.563232909676145`"}], 
            "}"}]], Annotation[#, {49.264918895655796`, 34.563232909676145`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.91848950192061, 39.873007228802535`}]}}, 
          RowBox[{"{", 
            RowBox[{"50.91848950192061`", ",", "39.873007228802535`"}], 
            "}"}]], Annotation[#, {50.91848950192061, 39.873007228802535`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.10747406094642, 40.47563338799056}]}}, 
          RowBox[{"{", 
            RowBox[{"51.10747406094642`", ",", "40.47563338799056`"}], "}"}]],
          Annotation[#, {51.10747406094642, 40.47563338799056}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.65047226356621, 45.79595099525096}]}}, 
          RowBox[{"{", 
            RowBox[{"49.65047226356621`", ",", "45.79595099525096`"}], "}"}]],
          Annotation[#, {49.65047226356621, 45.79595099525096}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.724531112416805`, 44.531420878882216`}]}}, 
          RowBox[{"{", 
            RowBox[{"45.724531112416805`", ",", "44.531420878882216`"}], 
            "}"}]], Annotation[#, {45.724531112416805`, 44.531420878882216`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.26150418193219, 42.296240137004304`}]}}, 
          RowBox[{"{", 
            RowBox[{"43.26150418193219`", ",", "42.296240137004304`"}], 
            "}"}]], Annotation[#, {43.26150418193219, 42.296240137004304`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.093439608791655`, 42.12601686849553}]}}, 
          RowBox[{"{", 
            RowBox[{"41.093439608791655`", ",", "42.12601686849553`"}], 
            "}"}]], Annotation[#, {41.093439608791655`, 42.12601686849553}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.927269554883466`, 46.77340886534504}]}}, 
          RowBox[{"{", 
            RowBox[{"45.927269554883466`", ",", "46.77340886534504`"}], 
            "}"}]], Annotation[#, {45.927269554883466`, 46.77340886534504}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.23414488978029, 45.3477415098746}]}}, 
          RowBox[{"{", 
            RowBox[{"43.23414488978029`", ",", "45.3477415098746`"}], "}"}]], 
         Annotation[#, {43.23414488978029, 45.3477415098746}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.68319909087834, 43.25787782367982}]}}, 
          RowBox[{"{", 
            RowBox[{"40.68319909087834`", ",", "43.25787782367982`"}], "}"}]],
          Annotation[#, {40.68319909087834, 43.25787782367982}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.417123797039075`, 45.05495494563896}]}}, 
          RowBox[{"{", 
            RowBox[{"40.417123797039075`", ",", "45.05495494563896`"}], 
            "}"}]], Annotation[#, {40.417123797039075`, 45.05495494563896}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{39.54113220759825, 44.61067110079392}]}}, 
          RowBox[{"{", 
            RowBox[{"39.54113220759825`", ",", "44.61067110079392`"}], "}"}]],
          Annotation[#, {39.54113220759825, 44.61067110079392}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{42.09006741135262, 46.31272853518285}]}}, 
          RowBox[{"{", 
            RowBox[{"42.09006741135262`", ",", "46.31272853518285`"}], "}"}]],
          Annotation[#, {42.09006741135262, 46.31272853518285}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.67207626581835, 45.428290169863615`}]}}, 
          RowBox[{"{", 
            RowBox[{"40.67207626581835`", ",", "45.428290169863615`"}], 
            "}"}]], Annotation[#, {40.67207626581835, 45.428290169863615`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.981171677614014`, 43.620815935881865`}]}}, 
          RowBox[{"{", 
            RowBox[{"40.981171677614014`", ",", "43.620815935881865`"}], 
            "}"}]], Annotation[#, {40.981171677614014`, 43.620815935881865`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.35110639129345, 47.9203269517004}]}}, 
          RowBox[{"{", 
            RowBox[{"47.35110639129345`", ",", "47.9203269517004`"}], "}"}]], 
         Annotation[#, {47.35110639129345, 47.9203269517004}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.29576597534224, 47.67526387624989}]}}, 
          RowBox[{"{", 
            RowBox[{"46.29576597534224`", ",", "47.67526387624989`"}], "}"}]],
          Annotation[#, {46.29576597534224, 47.67526387624989}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{44.389048531407184`, 46.25949857628171}]}}, 
          RowBox[{"{", 
            RowBox[{"44.389048531407184`", ",", "46.25949857628171`"}], 
            "}"}]], Annotation[#, {44.389048531407184`, 46.25949857628171}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{42.314301592712916`, 44.148139679906045`}]}}, 
          RowBox[{"{", 
            RowBox[{"42.314301592712916`", ",", "44.148139679906045`"}], 
            "}"}]], Annotation[#, {42.314301592712916`, 44.148139679906045`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.80258852327841, 44.9195735077261}]}}, 
          RowBox[{"{", 
            RowBox[{"41.80258852327841`", ",", "44.9195735077261`"}], "}"}]], 
         Annotation[#, {41.80258852327841, 44.9195735077261}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{35.48345065301834, 42.007465729561574`}]}}, 
          RowBox[{"{", 
            RowBox[{"35.48345065301834`", ",", "42.007465729561574`"}], 
            "}"}]], Annotation[#, {35.48345065301834, 42.007465729561574`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{30.44220787283948, 39.076370668398965`}]}}, 
          RowBox[{"{", 
            RowBox[{"30.44220787283948`", ",", "39.076370668398965`"}], 
            "}"}]], 
         Annotation[#, {30.44220787283948, 39.076370668398965`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{28.850068030414384`, 37.8158432474572}]}}, 
          RowBox[{"{", 
            RowBox[{"28.850068030414384`", ",", "37.8158432474572`"}], "}"}]],
          Annotation[#, {28.850068030414384`, 37.8158432474572}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{27.852897329816695`, 36.4814329079081}]}}, 
          RowBox[{"{", 
            RowBox[{"27.852897329816695`", ",", "36.4814329079081`"}], "}"}]],
          Annotation[#, {27.852897329816695`, 36.4814329079081}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{29.05054010952671, 37.82565331508576}]}}, 
          RowBox[{"{", 
            RowBox[{"29.05054010952671`", ",", "37.82565331508576`"}], "}"}]],
          Annotation[#, {29.05054010952671, 37.82565331508576}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{28.503988636501862`, 36.110659417537434`}]}}, 
          RowBox[{"{", 
            RowBox[{"28.503988636501862`", ",", "36.110659417537434`"}], 
            "}"}]], Annotation[#, {28.503988636501862`, 36.110659417537434`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.376015020811856`, 41.851488837982906`}]}}, 
          RowBox[{"{", 
            RowBox[{"43.376015020811856`", ",", "41.851488837982906`"}], 
            "}"}]], Annotation[#, {43.376015020811856`, 41.851488837982906`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.1122373754299, 39.11907230482369}]}}, 
          RowBox[{"{", 
            RowBox[{"41.1122373754299`", ",", "39.11907230482369`"}], "}"}]], 
         Annotation[#, {41.1122373754299, 39.11907230482369}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{34.39833289036718, 36.853604976661714`}]}}, 
          RowBox[{"{", 
            RowBox[{"34.39833289036718`", ",", "36.853604976661714`"}], 
            "}"}]], Annotation[#, {34.39833289036718, 36.853604976661714`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.944655403586765`, 41.81822615527582}]}}, 
          RowBox[{"{", 
            RowBox[{"43.944655403586765`", ",", "41.81822615527582`"}], 
            "}"}]], Annotation[#, {43.944655403586765`, 41.81822615527582}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{42.95671236517466, 41.357255579308365`}]}}, 
          RowBox[{"{", 
            RowBox[{"42.95671236517466`", ",", "41.357255579308365`"}], 
            "}"}]], Annotation[#, {42.95671236517466, 41.357255579308365`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{42.656669703895645`, 41.80146706043954}]}}, 
          RowBox[{"{", 
            RowBox[{"42.656669703895645`", ",", "41.80146706043954`"}], 
            "}"}]], Annotation[#, {42.656669703895645`, 41.80146706043954}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{44.581289306561104`, 42.06641419809964}]}}, 
          RowBox[{"{", 
            RowBox[{"44.581289306561104`", ",", "42.06641419809964`"}], 
            "}"}]], Annotation[#, {44.581289306561104`, 42.06641419809964}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.64939537863238, 42.84260818521832}]}}, 
          RowBox[{"{", 
            RowBox[{"45.64939537863238`", ",", "42.84260818521832`"}], "}"}]],
          Annotation[#, {45.64939537863238, 42.84260818521832}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.942599847977036`, 46.50712485176301}]}}, 
          RowBox[{"{", 
            RowBox[{"48.942599847977036`", ",", "46.50712485176301`"}], 
            "}"}]], Annotation[#, {48.942599847977036`, 46.50712485176301}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.72329156145643, 47.049880593918225`}]}}, 
          RowBox[{"{", 
            RowBox[{"49.72329156145643`", ",", "47.049880593918225`"}], 
            "}"}]], Annotation[#, {49.72329156145643, 47.049880593918225`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.953546843026444`, 48.69488672829447}]}}, 
          RowBox[{"{", 
            RowBox[{"49.953546843026444`", ",", "48.69488672829447`"}], 
            "}"}]], Annotation[#, {49.953546843026444`, 48.69488672829447}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.781572195035544`, 49.853216494594896`}]}}, 
          RowBox[{"{", 
            RowBox[{"50.781572195035544`", ",", "49.853216494594896`"}], 
            "}"}]], Annotation[#, {50.781572195035544`, 49.853216494594896`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{54.074835299338496`, 54.395380794953454`}]}}, 
          RowBox[{"{", 
            RowBox[{"54.074835299338496`", ",", "54.395380794953454`"}], 
            "}"}]], Annotation[#, {54.074835299338496`, 54.395380794953454`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{54.251432823244045`, 53.64586414337145}]}}, 
          RowBox[{"{", 
            RowBox[{"54.251432823244045`", ",", "53.64586414337145`"}], 
            "}"}]], 
         Annotation[#, {54.251432823244045`, 53.64586414337145}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.62579475030951, 53.36626657938889}]}}, 
          RowBox[{"{", 
            RowBox[{"53.62579475030951`", ",", "53.36626657938889`"}], "}"}]],
          Annotation[#, {53.62579475030951, 53.36626657938889}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.4012410994628, 52.46797742118421}]}}, 
          RowBox[{"{", 
            RowBox[{"53.4012410994628`", ",", "52.46797742118421`"}], "}"}]], 
         Annotation[#, {53.4012410994628, 52.46797742118421}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.89942138772606, 53.82747610264431}]}}, 
          RowBox[{"{", 
            RowBox[{"53.89942138772606`", ",", "53.82747610264431`"}], "}"}]],
          Annotation[#, {53.89942138772606, 53.82747610264431}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.86435238253252, 52.93345077545018}]}}, 
          RowBox[{"{", 
            RowBox[{"53.86435238253252`", ",", "52.93345077545018`"}], "}"}]],
          Annotation[#, {53.86435238253252, 52.93345077545018}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{54.1744112201768, 54.550156530998315`}]}}, 
          RowBox[{"{", 
            RowBox[{"54.1744112201768`", ",", "54.550156530998315`"}], "}"}]],
          Annotation[#, {54.1744112201768, 54.550156530998315`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.636034963436416`, 54.82118240073157}]}}, 
          RowBox[{"{", 
            RowBox[{"52.636034963436416`", ",", "54.82118240073157`"}], 
            "}"}]], 
         Annotation[#, {52.636034963436416`, 54.82118240073157}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.453114149951276`, 53.535616698794}]}}, 
          RowBox[{"{", 
            RowBox[{"53.453114149951276`", ",", "53.535616698794`"}], "}"}]], 
         Annotation[#, {53.453114149951276`, 53.535616698794}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{54.864088304064815`, 57.0737802630544}]}}, 
          RowBox[{"{", 
            RowBox[{"54.864088304064815`", ",", "57.0737802630544`"}], "}"}]],
          Annotation[#, {54.864088304064815`, 57.0737802630544}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{56.30966378050571, 58.11116364238265}]}}, 
          RowBox[{"{", 
            RowBox[{"56.30966378050571`", ",", "58.11116364238265`"}], "}"}]],
          Annotation[#, {56.30966378050571, 58.11116364238265}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{57.406932825233625`, 59.10238016108864}]}}, 
          RowBox[{"{", 
            RowBox[{"57.406932825233625`", ",", "59.10238016108864`"}], 
            "}"}]], Annotation[#, {57.406932825233625`, 59.10238016108864}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{57.23254640899127, 60.141917768328234`}]}}, 
          RowBox[{"{", 
            RowBox[{"57.23254640899127`", ",", "60.141917768328234`"}], 
            "}"}]], Annotation[#, {57.23254640899127, 60.141917768328234`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{56.624089335021786`, 57.587878014834025`}]}}, 
          RowBox[{"{", 
            RowBox[{"56.624089335021786`", ",", "57.587878014834025`"}], 
            "}"}]], 
         Annotation[#, {56.624089335021786`, 57.587878014834025`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{55.26794478973555, 54.90976525390123}]}}, 
          RowBox[{"{", 
            RowBox[{"55.26794478973555`", ",", "54.90976525390123`"}], "}"}]],
          Annotation[#, {55.26794478973555, 54.90976525390123}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.84471690169479, 51.912210048293765`}]}}, 
          RowBox[{"{", 
            RowBox[{"52.84471690169479`", ",", "51.912210048293765`"}], 
            "}"}]], Annotation[#, {52.84471690169479, 51.912210048293765`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.716689827516014`, 49.70478331989748}]}}, 
          RowBox[{"{", 
            RowBox[{"50.716689827516014`", ",", "49.70478331989748`"}], 
            "}"}]], Annotation[#, {50.716689827516014`, 49.70478331989748}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.12413246352498, 47.95196956125154}]}}, 
          RowBox[{"{", 
            RowBox[{"49.12413246352498`", ",", "47.95196956125154`"}], "}"}]],
          Annotation[#, {49.12413246352498, 47.95196956125154}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.602446957351546`, 45.37860482176604}]}}, 
          RowBox[{"{", 
            RowBox[{"46.602446957351546`", ",", "45.37860482176604`"}], 
            "}"}]], Annotation[#, {46.602446957351546`, 45.37860482176604}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.54353303681387, 42.456069782633904`}]}}, 
          RowBox[{"{", 
            RowBox[{"43.54353303681387`", ",", "42.456069782633904`"}], 
            "}"}]], 
         Annotation[#, {43.54353303681387, 42.456069782633904`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{44.76683193982357, 40.23876917766665}]}}, 
          RowBox[{"{", 
            RowBox[{"44.76683193982357`", ",", "40.23876917766665`"}], "}"}]],
          Annotation[#, {44.76683193982357, 40.23876917766665}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.88751039971353, 38.1200914190086}]}}, 
          RowBox[{"{", 
            RowBox[{"43.88751039971353`", ",", "38.1200914190086`"}], "}"}]], 
         Annotation[#, {43.88751039971353, 38.1200914190086}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.09128750730029, 35.77187308494961}]}}, 
          RowBox[{"{", 
            RowBox[{"40.09128750730029`", ",", "35.77187308494961`"}], "}"}]],
          Annotation[#, {40.09128750730029, 35.77187308494961}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{37.37598775157584, 33.29438422062188}]}}, 
          RowBox[{"{", 
            RowBox[{"37.37598775157584`", ",", "33.29438422062188`"}], "}"}]],
          Annotation[#, {37.37598775157584, 33.29438422062188}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{33.99106542414114, 32.727354251871894`}]}}, 
          RowBox[{"{", 
            RowBox[{"33.99106542414114`", ",", "32.727354251871894`"}], 
            "}"}]], Annotation[#, {33.99106542414114, 32.727354251871894`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{33.4895215169534, 31.89802937158642}]}}, 
          RowBox[{"{", 
            RowBox[{"33.4895215169534`", ",", "31.89802937158642`"}], "}"}]], 
         Annotation[#, {33.4895215169534, 31.89802937158642}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{32.18732766849084, 30.946209390933188`}]}}, 
          RowBox[{"{", 
            RowBox[{"32.18732766849084`", ",", "30.946209390933188`"}], 
            "}"}]], Annotation[#, {32.18732766849084, 30.946209390933188`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{29.327473305533836`, 28.109083449932204`}]}}, 
          RowBox[{"{", 
            RowBox[{"29.327473305533836`", ",", "28.109083449932204`"}], 
            "}"}]], Annotation[#, {29.327473305533836`, 28.109083449932204`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{29.201643593574186`, 26.35815575612861}]}}, 
          RowBox[{"{", 
            RowBox[{"29.201643593574186`", ",", "26.35815575612861`"}], 
            "}"}]], Annotation[#, {29.201643593574186`, 26.35815575612861}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{28.479787674919102`, 24.268816518366126`}]}}, 
          RowBox[{"{", 
            RowBox[{"28.479787674919102`", ",", "24.268816518366126`"}], 
            "}"}]], Annotation[#, {28.479787674919102`, 24.268816518366126`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{38.06707415130422, 35.27452821377527}]}}, 
          RowBox[{"{", 
            RowBox[{"38.06707415130422`", ",", "35.27452821377527`"}], "}"}]],
          Annotation[#, {38.06707415130422, 35.27452821377527}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.80311114998425, 41.01712537312825}]}}, 
          RowBox[{"{", 
            RowBox[{"45.80311114998425`", ",", "41.01712537312825`"}], "}"}]],
          Annotation[#, {45.80311114998425, 41.01712537312825}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.87596115153288, 41.88013559790118}]}}, 
          RowBox[{"{", 
            RowBox[{"45.87596115153288`", ",", "41.88013559790118`"}], "}"}]],
          Annotation[#, {45.87596115153288, 41.88013559790118}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.10339080072185, 40.76984484211358}]}}, 
          RowBox[{"{", 
            RowBox[{"46.10339080072185`", ",", "40.76984484211358`"}], "}"}]],
          Annotation[#, {46.10339080072185, 40.76984484211358}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.3814040587002, 44.79494851792448}]}}, 
          RowBox[{"{", 
            RowBox[{"49.3814040587002`", ",", "44.79494851792448`"}], "}"}]], 
         Annotation[#, {49.3814040587002, 44.79494851792448}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.78172465551202, 45.3213851577411}]}}, 
          RowBox[{"{", 
            RowBox[{"48.78172465551202`", ",", "45.3213851577411`"}], "}"}]], 
         Annotation[#, {48.78172465551202, 45.3213851577411}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.11476005615194, 44.44676983583343}]}}, 
          RowBox[{"{", 
            RowBox[{"48.11476005615194`", ",", "44.44676983583343`"}], "}"}]],
          Annotation[#, {48.11476005615194, 44.44676983583343}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.14232723317656, 48.66159888390007}]}}, 
          RowBox[{"{", 
            RowBox[{"53.14232723317656`", ",", "48.66159888390007`"}], "}"}]],
          Annotation[#, {53.14232723317656, 48.66159888390007}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.2285407663814, 47.19943034182357}]}}, 
          RowBox[{"{", 
            RowBox[{"53.2285407663814`", ",", "47.19943034182357`"}], "}"}]], 
         Annotation[#, {53.2285407663814, 47.19943034182357}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.57356793430826, 47.92010838095018}]}}, 
          RowBox[{"{", 
            RowBox[{"53.57356793430826`", ",", "47.92010838095018`"}], "}"}]],
          Annotation[#, {53.57356793430826, 47.92010838095018}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.75931201647046, 47.236725055483504`}]}}, 
          RowBox[{"{", 
            RowBox[{"53.75931201647046`", ",", "47.236725055483504`"}], 
            "}"}]], Annotation[#, {53.75931201647046, 47.236725055483504`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{54.50073623521373, 49.71261028338454}]}}, 
          RowBox[{"{", 
            RowBox[{"54.50073623521373`", ",", "49.71261028338454`"}], "}"}]],
          Annotation[#, {54.50073623521373, 49.71261028338454}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.29000282394644, 50.49301201913495}]}}, 
          RowBox[{"{", 
            RowBox[{"53.29000282394644`", ",", "50.49301201913495`"}], "}"}]],
          Annotation[#, {53.29000282394644, 50.49301201913495}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{54.71013503086229, 48.61090041053215}]}}, 
          RowBox[{"{", 
            RowBox[{"54.71013503086229`", ",", "48.61090041053215`"}], "}"}]],
          Annotation[#, {54.71013503086229, 48.61090041053215}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.680811701989235`, 52.96306500475472}]}}, 
          RowBox[{"{", 
            RowBox[{"51.680811701989235`", ",", "52.96306500475472`"}], 
            "}"}]], Annotation[#, {51.680811701989235`, 52.96306500475472}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.03799511841495, 51.08104723446628}]}}, 
          RowBox[{"{", 
            RowBox[{"51.03799511841495`", ",", "51.08104723446628`"}], "}"}]],
          Annotation[#, {51.03799511841495, 51.08104723446628}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.49689368108613, 50.476460811052846`}]}}, 
          RowBox[{"{", 
            RowBox[{"50.49689368108613`", ",", "50.476460811052846`"}], 
            "}"}]], Annotation[#, {50.49689368108613, 50.476460811052846`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{56.963995429320775`, 54.38838190353121}]}}, 
          RowBox[{"{", 
            RowBox[{"56.963995429320775`", ",", "54.38838190353121`"}], 
            "}"}]], Annotation[#, {56.963995429320775`, 54.38838190353121}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{56.97031104900387, 56.32925603179018}]}}, 
          RowBox[{"{", 
            RowBox[{"56.97031104900387`", ",", "56.32925603179018`"}], "}"}]],
          Annotation[#, {56.97031104900387, 56.32925603179018}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.837718172899784`, 55.951934402590894`}]}}, 
          RowBox[{"{", 
            RowBox[{"53.837718172899784`", ",", "55.951934402590894`"}], 
            "}"}]], Annotation[#, {53.837718172899784`, 55.951934402590894`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.489659944442494`, 54.657124047949274`}]}}, 
          RowBox[{"{", 
            RowBox[{"52.489659944442494`", ",", "54.657124047949274`"}], 
            "}"}]], Annotation[#, {52.489659944442494`, 54.657124047949274`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.362100796625896`, 58.8279004789371}]}}, 
          RowBox[{"{", 
            RowBox[{"52.362100796625896`", ",", "58.8279004789371`"}], "}"}]],
          Annotation[#, {52.362100796625896`, 58.8279004789371}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.06222578140937, 63.22806993808722}]}}, 
          RowBox[{"{", 
            RowBox[{"52.06222578140937`", ",", "63.22806993808722`"}], "}"}]],
          Annotation[#, {52.06222578140937, 63.22806993808722}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.465662773756996`, 61.047358084294956`}]}}, 
          RowBox[{"{", 
            RowBox[{"51.465662773756996`", ",", "61.047358084294956`"}], 
            "}"}]], Annotation[#, {51.465662773756996`, 61.047358084294956`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.56600390855407, 59.0553720041944}]}}, 
          RowBox[{"{", 
            RowBox[{"52.56600390855407`", ",", "59.0553720041944`"}], "}"}]], 
         Annotation[#, {52.56600390855407, 59.0553720041944}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.71077307133302, 57.56811857055565}]}}, 
          RowBox[{"{", 
            RowBox[{"52.71077307133302`", ",", "57.56811857055565`"}], "}"}]],
          Annotation[#, {52.71077307133302, 57.56811857055565}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.268644717532155`, 55.3684366152119}]}}, 
          RowBox[{"{", 
            RowBox[{"50.268644717532155`", ",", "55.3684366152119`"}], "}"}]],
          Annotation[#, {50.268644717532155`, 55.3684366152119}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.083620431892925`, 52.831577463145656`}]}}, 
          RowBox[{"{", 
            RowBox[{"48.083620431892925`", ",", "52.831577463145656`"}], 
            "}"}]], Annotation[#, {48.083620431892925`, 52.831577463145656`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{44.91147885374044, 50.9777741662955}]}}, 
          RowBox[{"{", 
            RowBox[{"44.91147885374044`", ",", "50.9777741662955`"}], "}"}]], 
         Annotation[#, {44.91147885374044, 50.9777741662955}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.69020230553395, 49.03953965644777}]}}, 
          RowBox[{"{", 
            RowBox[{"47.69020230553395`", ",", "49.03953965644777`"}], "}"}]],
          Annotation[#, {47.69020230553395, 49.03953965644777}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.34690764335952, 47.71904760480599}]}}, 
          RowBox[{"{", 
            RowBox[{"47.34690764335952`", ",", "47.71904760480599`"}], "}"}]],
          Annotation[#, {47.34690764335952, 47.71904760480599}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.24821654414574, 45.16963731894117}]}}, 
          RowBox[{"{", 
            RowBox[{"47.24821654414574`", ",", "45.16963731894117`"}], "}"}]],
          Annotation[#, {47.24821654414574, 45.16963731894117}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{44.61772354023614, 43.22708739361043}]}}, 
          RowBox[{"{", 
            RowBox[{"44.61772354023614`", ",", "43.22708739361043`"}], "}"}]],
          Annotation[#, {44.61772354023614, 43.22708739361043}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.023321567314724`, 42.023695260928}]}}, 
          RowBox[{"{", 
            RowBox[{"45.023321567314724`", ",", "42.023695260928`"}], "}"}]], 
         Annotation[#, {45.023321567314724`, 42.023695260928}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{42.11773270872337, 40.23237349574275}]}}, 
          RowBox[{"{", 
            RowBox[{"42.11773270872337`", ",", "40.23237349574275`"}], "}"}]],
          Annotation[#, {42.11773270872337, 40.23237349574275}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{39.936218034027014`, 38.77115489177733}]}}, 
          RowBox[{"{", 
            RowBox[{"39.936218034027014`", ",", "38.77115489177733`"}], 
            "}"}]], Annotation[#, {39.936218034027014`, 38.77115489177733}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{39.33592571481761, 37.709130060978815`}]}}, 
          RowBox[{"{", 
            RowBox[{"39.33592571481761`", ",", "37.709130060978815`"}], 
            "}"}]], Annotation[#, {39.33592571481761, 37.709130060978815`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{38.582352684115634`, 35.14529003454661}]}}, 
          RowBox[{"{", 
            RowBox[{"38.582352684115634`", ",", "35.14529003454661`"}], 
            "}"}]], Annotation[#, {38.582352684115634`, 35.14529003454661}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{37.284951699779455`, 33.15077799847108}]}}, 
          RowBox[{"{", 
            RowBox[{"37.284951699779455`", ",", "33.15077799847108`"}], 
            "}"}]], Annotation[#, {37.284951699779455`, 33.15077799847108}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{36.52444654919849, 33.19147366861748}]}}, 
          RowBox[{"{", 
            RowBox[{"36.52444654919849`", ",", "33.19147366861748`"}], "}"}]],
          Annotation[#, {36.52444654919849, 33.19147366861748}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{37.38753751590616, 34.40369168441693}]}}, 
          RowBox[{"{", 
            RowBox[{"37.38753751590616`", ",", "34.40369168441693`"}], "}"}]],
          Annotation[#, {37.38753751590616, 34.40369168441693}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{44.846491830311884`, 40.13841186829257}]}}, 
          RowBox[{"{", 
            RowBox[{"44.846491830311884`", ",", "40.13841186829257`"}], 
            "}"}]], Annotation[#, {44.846491830311884`, 40.13841186829257}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.50759470571212, 41.14830277276847}]}}, 
          RowBox[{"{", 
            RowBox[{"45.50759470571212`", ",", "41.14830277276847`"}], "}"}]],
          Annotation[#, {45.50759470571212, 41.14830277276847}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.99955766421361, 41.44388924288828}]}}, 
          RowBox[{"{", 
            RowBox[{"45.99955766421361`", ",", "41.44388924288828`"}], "}"}]],
          Annotation[#, {45.99955766421361, 41.44388924288828}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.585074602110225`, 46.60784965828781}]}}, 
          RowBox[{"{", 
            RowBox[{"49.585074602110225`", ",", "46.60784965828781`"}], 
            "}"}]], Annotation[#, {49.585074602110225`, 46.60784965828781}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.14963668263213, 46.19571413857692}]}}, 
          RowBox[{"{", 
            RowBox[{"47.14963668263213`", ",", "46.19571413857692`"}], "}"}]],
          Annotation[#, {47.14963668263213, 46.19571413857692}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.7480371105341, 44.744754591894534`}]}}, 
          RowBox[{"{", 
            RowBox[{"45.7480371105341`", ",", "44.744754591894534`"}], "}"}]],
          Annotation[#, {45.7480371105341, 44.744754591894534`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.238701679793046`, 48.13595402631842}]}}, 
          RowBox[{"{", 
            RowBox[{"50.238701679793046`", ",", "48.13595402631842`"}], 
            "}"}]], Annotation[#, {50.238701679793046`, 48.13595402631842}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.051206300229865`, 48.10882486013489}]}}, 
          RowBox[{"{", 
            RowBox[{"51.051206300229865`", ",", "48.10882486013489`"}], 
            "}"}]], Annotation[#, {51.051206300229865`, 48.10882486013489}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.843846635459975`, 46.176569804218005`}]}}, 
          RowBox[{"{", 
            RowBox[{"48.843846635459975`", ",", "46.176569804218005`"}], 
            "}"}]], Annotation[#, {48.843846635459975`, 46.176569804218005`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.6363377107829, 48.33188172390597}]}}, 
          RowBox[{"{", 
            RowBox[{"51.6363377107829`", ",", "48.33188172390597`"}], "}"}]], 
         Annotation[#, {51.6363377107829, 48.33188172390597}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.68735095674939, 48.00136605323139}]}}, 
          RowBox[{"{", 
            RowBox[{"49.68735095674939`", ",", "48.00136605323139`"}], "}"}]],
          Annotation[#, {49.68735095674939, 48.00136605323139}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.894997219821825`, 45.61243396635485}]}}, 
          RowBox[{"{", 
            RowBox[{"46.894997219821825`", ",", "45.61243396635485`"}], 
            "}"}]], Annotation[#, {46.894997219821825`, 45.61243396635485}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.97581235190154, 45.19911938052631}]}}, 
          RowBox[{"{", 
            RowBox[{"46.97581235190154`", ",", "45.19911938052631`"}], "}"}]],
          Annotation[#, {46.97581235190154, 45.19911938052631}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.366820660231646`, 44.19053749099037}]}}, 
          RowBox[{"{", 
            RowBox[{"46.366820660231646`", ",", "44.19053749099037`"}], 
            "}"}]], Annotation[#, {46.366820660231646`, 44.19053749099037}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.23383076701409, 46.00404424422278}]}}, 
          RowBox[{"{", 
            RowBox[{"47.23383076701409`", ",", "46.00404424422278`"}], "}"}]],
          Annotation[#, {47.23383076701409, 46.00404424422278}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.97478277769518, 47.508331578465565`}]}}, 
          RowBox[{"{", 
            RowBox[{"49.97478277769518`", ",", "47.508331578465565`"}], 
            "}"}]], Annotation[#, {49.97478277769518, 47.508331578465565`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.04913900156088, 47.32452622245386}]}}, 
          RowBox[{"{", 
            RowBox[{"49.04913900156088`", ",", "47.32452622245386`"}], "}"}]],
          Annotation[#, {49.04913900156088, 47.32452622245386}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.52646076299465, 51.73059433564929}]}}, 
          RowBox[{"{", 
            RowBox[{"51.52646076299465`", ",", "51.73059433564929`"}], "}"}]],
          Annotation[#, {51.52646076299465, 51.73059433564929}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{55.089053351555755`, 55.71065302058672}]}}, 
          RowBox[{"{", 
            RowBox[{"55.089053351555755`", ",", "55.71065302058672`"}], 
            "}"}]], Annotation[#, {55.089053351555755`, 55.71065302058672}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{55.730464339791205`, 60.39728465988968}]}}, 
          RowBox[{"{", 
            RowBox[{"55.730464339791205`", ",", "60.39728465988968`"}], 
            "}"}]], Annotation[#, {55.730464339791205`, 60.39728465988968}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{56.45277588158317, 59.379486433492545`}]}}, 
          RowBox[{"{", 
            RowBox[{"56.45277588158317`", ",", "59.379486433492545`"}], 
            "}"}]], Annotation[#, {56.45277588158317, 59.379486433492545`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.035417298790094`, 56.438264477039546`}]}}, 
          RowBox[{"{", 
            RowBox[{"53.035417298790094`", ",", "56.438264477039546`"}], 
            "}"}]], Annotation[#, {53.035417298790094`, 56.438264477039546`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.55399010332723, 55.021284775474605`}]}}, 
          RowBox[{"{", 
            RowBox[{"53.55399010332723`", ",", "55.021284775474605`"}], 
            "}"}]], Annotation[#, {53.55399010332723, 55.021284775474605`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.36430815359387, 52.11739696182532}]}}, 
          RowBox[{"{", 
            RowBox[{"52.36430815359387`", ",", "52.11739696182532`"}], "}"}]],
          Annotation[#, {52.36430815359387, 52.11739696182532}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.96401893117645, 50.65899812545142}]}}, 
          RowBox[{"{", 
            RowBox[{"50.96401893117645`", ",", "50.65899812545142`"}], "}"}]],
          Annotation[#, {50.96401893117645, 50.65899812545142}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.11754595061192, 48.498000372754504`}]}}, 
          RowBox[{"{", 
            RowBox[{"51.11754595061192`", ",", "48.498000372754504`"}], 
            "}"}]], Annotation[#, {51.11754595061192, 48.498000372754504`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.450155146215295`, 47.24642743292129}]}}, 
          RowBox[{"{", 
            RowBox[{"48.450155146215295`", ",", "47.24642743292129`"}], 
            "}"}]], Annotation[#, {48.450155146215295`, 47.24642743292129}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.513935423316134`, 44.49673540429742}]}}, 
          RowBox[{"{", 
            RowBox[{"47.513935423316134`", ",", "44.49673540429742`"}], 
            "}"}]], Annotation[#, {47.513935423316134`, 44.49673540429742}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{44.729479149508805`, 42.777290770484655`}]}}, 
          RowBox[{"{", 
            RowBox[{"44.729479149508805`", ",", "42.777290770484655`"}], 
            "}"}]], Annotation[#, {44.729479149508805`, 42.777290770484655`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.36674408121305, 41.30151164677475}]}}, 
          RowBox[{"{", 
            RowBox[{"41.36674408121305`", ",", "41.30151164677475`"}], "}"}]],
          Annotation[#, {41.36674408121305, 41.30151164677475}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{39.28405852554906, 39.38878957491836}]}}, 
          RowBox[{"{", 
            RowBox[{"39.28405852554906`", ",", "39.38878957491836`"}], "}"}]],
          Annotation[#, {39.28405852554906, 39.38878957491836}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{39.41035979927957, 38.0325628808012}]}}, 
          RowBox[{"{", 
            RowBox[{"39.41035979927957`", ",", "38.0325628808012`"}], "}"}]], 
         Annotation[#, {39.41035979927957, 38.0325628808012}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.093162527699306`, 35.67771827827621}]}}, 
          RowBox[{"{", 
            RowBox[{"41.093162527699306`", ",", "35.67771827827621`"}], 
            "}"}]], Annotation[#, {41.093162527699306`, 35.67771827827621}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{39.81433358050879, 33.501151548520994`}]}}, 
          RowBox[{"{", 
            RowBox[{"39.81433358050879`", ",", "33.501151548520994`"}], 
            "}"}]], Annotation[#, {39.81433358050879, 33.501151548520994`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.662418592039316`, 33.12783791457441}]}}, 
          RowBox[{"{", 
            RowBox[{"40.662418592039316`", ",", "33.12783791457441`"}], 
            "}"}]], Annotation[#, {40.662418592039316`, 33.12783791457441}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.96997752789528, 36.60129240126162}]}}, 
          RowBox[{"{", 
            RowBox[{"40.96997752789528`", ",", "36.60129240126162`"}], "}"}]],
          Annotation[#, {40.96997752789528, 36.60129240126162}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.269020623738555`, 34.84835869118109}]}}, 
          RowBox[{"{", 
            RowBox[{"41.269020623738555`", ",", "34.84835869118109`"}], 
            "}"}]], Annotation[#, {41.269020623738555`, 34.84835869118109}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.94079778292677, 36.88069526191626}]}}, 
          RowBox[{"{", 
            RowBox[{"41.94079778292677`", ",", "36.88069526191626`"}], "}"}]],
          Annotation[#, {41.94079778292677, 36.88069526191626}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.44213662030908, 38.81426257977578}]}}, 
          RowBox[{"{", 
            RowBox[{"43.44213662030908`", ",", "38.81426257977578`"}], "}"}]],
          Annotation[#, {43.44213662030908, 38.81426257977578}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.63828685042965, 45.061575686315784`}]}}, 
          RowBox[{"{", 
            RowBox[{"46.63828685042965`", ",", "45.061575686315784`"}], 
            "}"}]], Annotation[#, {46.63828685042965, 45.061575686315784`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.98778352586891, 49.31749106047761}]}}, 
          RowBox[{"{", 
            RowBox[{"47.98778352586891`", ",", "49.31749106047761`"}], "}"}]],
          Annotation[#, {47.98778352586891, 49.31749106047761}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.704420785103785`, 50.857420386210244`}]}}, 
          RowBox[{"{", 
            RowBox[{"47.704420785103785`", ",", "50.857420386210244`"}], 
            "}"}]], Annotation[#, {47.704420785103785`, 50.857420386210244`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.6939380773036, 55.584990047125}]}}, 
          RowBox[{"{", 
            RowBox[{"49.6939380773036`", ",", "55.584990047125`"}], "}"}]], 
         Annotation[#, {49.6939380773036, 55.584990047125}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.070826181177544`, 59.53355297347644}]}}, 
          RowBox[{"{", 
            RowBox[{"51.070826181177544`", ",", "59.53355297347644`"}], 
            "}"}]], Annotation[#, {51.070826181177544`, 59.53355297347644}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.511483327452474`, 59.98386869764443}]}}, 
          RowBox[{"{", 
            RowBox[{"50.511483327452474`", ",", "59.98386869764443`"}], 
            "}"}]], Annotation[#, {50.511483327452474`, 59.98386869764443}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.75626149932358, 59.51297983052096}]}}, 
          RowBox[{"{", 
            RowBox[{"49.75626149932358`", ",", "59.51297983052096`"}], "}"}]],
          Annotation[#, {49.75626149932358, 59.51297983052096}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.87711940622162, 61.49218197907302}]}}, 
          RowBox[{"{", 
            RowBox[{"49.87711940622162`", ",", "61.49218197907302`"}], "}"}]],
          Annotation[#, {49.87711940622162, 61.49218197907302}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.25492818390989, 58.860531143862275`}]}}, 
          RowBox[{"{", 
            RowBox[{"53.25492818390989`", ",", "58.860531143862275`"}], 
            "}"}]], Annotation[#, {53.25492818390989, 58.860531143862275`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.22045577239869, 56.700151397074976`}]}}, 
          RowBox[{"{", 
            RowBox[{"52.22045577239869`", ",", "56.700151397074976`"}], 
            "}"}]], Annotation[#, {52.22045577239869, 56.700151397074976`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.03436406976232, 54.65515607395139}]}}, 
          RowBox[{"{", 
            RowBox[{"51.03436406976232`", ",", "54.65515607395139`"}], "}"}]],
          Annotation[#, {51.03436406976232, 54.65515607395139}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{53.28642016502782, 51.870735373296796`}]}}, 
          RowBox[{"{", 
            RowBox[{"53.28642016502782`", ",", "51.870735373296796`"}], 
            "}"}]], Annotation[#, {53.28642016502782, 51.870735373296796`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{52.413132555554874`, 50.181723623319826`}]}}, 
          RowBox[{"{", 
            RowBox[{"52.413132555554874`", ",", "50.181723623319826`"}], 
            "}"}]], Annotation[#, {52.413132555554874`, 50.181723623319826`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.65564934909335, 48.674253125125425`}]}}, 
          RowBox[{"{", 
            RowBox[{"49.65564934909335`", ",", "48.674253125125425`"}], 
            "}"}]], Annotation[#, {49.65564934909335, 48.674253125125425`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.99712819982393, 45.99723043416706}]}}, 
          RowBox[{"{", 
            RowBox[{"47.99712819982393`", ",", "45.99723043416706`"}], "}"}]],
          Annotation[#, {47.99712819982393, 45.99723043416706}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.117343856264874`, 43.999828363179816`}]}}, 
          RowBox[{"{", 
            RowBox[{"51.117343856264874`", ",", "43.999828363179816`"}], 
            "}"}]], Annotation[#, {51.117343856264874`, 43.999828363179816`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.85802511117612, 42.41667204104485}]}}, 
          RowBox[{"{", 
            RowBox[{"49.85802511117612`", ",", "42.41667204104485`"}], "}"}]],
          Annotation[#, {49.85802511117612, 42.41667204104485}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.18143399999085, 39.63286668162922}]}}, 
          RowBox[{"{", 
            RowBox[{"48.18143399999085`", ",", "39.63286668162922`"}], "}"}]],
          Annotation[#, {48.18143399999085, 39.63286668162922}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.76752921974419, 37.77654134313792}]}}, 
          RowBox[{"{", 
            RowBox[{"47.76752921974419`", ",", "37.77654134313792`"}], "}"}]],
          Annotation[#, {47.76752921974419, 37.77654134313792}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.839658734071136`, 34.81297772540934}]}}, 
          RowBox[{"{", 
            RowBox[{"46.839658734071136`", ",", "34.81297772540934`"}], 
            "}"}]], Annotation[#, {46.839658734071136`, 34.81297772540934}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.69688292314316, 32.577329104536325`}]}}, 
          RowBox[{"{", 
            RowBox[{"43.69688292314316`", ",", "32.577329104536325`"}], 
            "}"}]], Annotation[#, {43.69688292314316, 32.577329104536325`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.52364224278606, 38.468494304042615`}]}}, 
          RowBox[{"{", 
            RowBox[{"43.52364224278606`", ",", "38.468494304042615`"}], 
            "}"}]], Annotation[#, {43.52364224278606, 38.468494304042615`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.280206729338815`, 44.53129458693728}]}}, 
          RowBox[{"{", 
            RowBox[{"41.280206729338815`", ",", "44.53129458693728`"}], 
            "}"}]], Annotation[#, {41.280206729338815`, 44.53129458693728}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.385452662327275`, 44.45428856254284}]}}, 
          RowBox[{"{", 
            RowBox[{"41.385452662327275`", ",", "44.45428856254284`"}], 
            "}"}]], Annotation[#, {41.385452662327275`, 44.45428856254284}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.53697224291927, 45.092330027458665`}]}}, 
          RowBox[{"{", 
            RowBox[{"41.53697224291927`", ",", "45.092330027458665`"}], 
            "}"}]], Annotation[#, {41.53697224291927, 45.092330027458665`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.01078589408063, 46.75401228061476}]}}, 
          RowBox[{"{", 
            RowBox[{"43.01078589408063`", ",", "46.75401228061476`"}], "}"}]],
          Annotation[#, {43.01078589408063, 46.75401228061476}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{42.51571310308669, 46.24035917603505}]}}, 
          RowBox[{"{", 
            RowBox[{"42.51571310308669`", ",", "46.24035917603505`"}], "}"}]],
          Annotation[#, {42.51571310308669, 46.24035917603505}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{42.571283156655674`, 48.67612996288793}]}}, 
          RowBox[{"{", 
            RowBox[{"42.571283156655674`", ",", "48.67612996288793`"}], 
            "}"}]], Annotation[#, {42.571283156655674`, 48.67612996288793}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.37368936137182, 53.257536315473}]}}, 
          RowBox[{"{", 
            RowBox[{"47.37368936137182`", ",", "53.257536315473`"}], "}"}]], 
         Annotation[#, {47.37368936137182, 53.257536315473}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.84720462484128, 50.64385981299522}]}}, 
          RowBox[{"{", 
            RowBox[{"43.84720462484128`", ",", "50.64385981299522`"}], "}"}]],
          Annotation[#, {43.84720462484128, 50.64385981299522}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.698877689734815`, 51.10855507917322}]}}, 
          RowBox[{"{", 
            RowBox[{"43.698877689734815`", ",", "51.10855507917322`"}], 
            "}"}]], Annotation[#, {43.698877689734815`, 51.10855507917322}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.66920356593661, 51.54028387642093}]}}, 
          RowBox[{"{", 
            RowBox[{"46.66920356593661`", ",", "51.54028387642093`"}], "}"}]],
          Annotation[#, {46.66920356593661, 51.54028387642093}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.18484139207336, 51.83796934371097}]}}, 
          RowBox[{"{", 
            RowBox[{"46.18484139207336`", ",", "51.83796934371097`"}], "}"}]],
          Annotation[#, {46.18484139207336, 51.83796934371097}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.2079855822284, 53.01186223268565}]}}, 
          RowBox[{"{", 
            RowBox[{"46.2079855822284`", ",", "53.01186223268565`"}], "}"}]], 
         Annotation[#, {46.2079855822284, 53.01186223268565}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.33853904777334, 51.587305482799074`}]}}, 
          RowBox[{"{", 
            RowBox[{"43.33853904777334`", ",", "51.587305482799074`"}], 
            "}"}]], Annotation[#, {43.33853904777334, 51.587305482799074`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.474394405086414`, 52.6492916325897}]}}, 
          RowBox[{"{", 
            RowBox[{"43.474394405086414`", ",", "52.6492916325897`"}], "}"}]],
          Annotation[#, {43.474394405086414`, 52.6492916325897}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.51753828501814, 54.467448023858864`}]}}, 
          RowBox[{"{", 
            RowBox[{"45.51753828501814`", ",", "54.467448023858864`"}], 
            "}"}]], Annotation[#, {45.51753828501814, 54.467448023858864`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.38432363137153, 57.98532170582603}]}}, 
          RowBox[{"{", 
            RowBox[{"47.38432363137153`", ",", "57.98532170582603`"}], "}"}]],
          Annotation[#, {47.38432363137153, 57.98532170582603}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.94914842003492, 62.75659557286364}]}}, 
          RowBox[{"{", 
            RowBox[{"49.94914842003492`", ",", "62.75659557286364`"}], "}"}]],
          Annotation[#, {49.94914842003492, 62.75659557286364}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{50.34351006930045, 61.07480615920292}]}}, 
          RowBox[{"{", 
            RowBox[{"50.34351006930045`", ",", "61.07480615920292`"}], "}"}]],
          Annotation[#, {50.34351006930045, 61.07480615920292}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.61892158242514, 59.66173466758481}]}}, 
          RowBox[{"{", 
            RowBox[{"47.61892158242514`", ",", "59.66173466758481`"}], "}"}]],
          Annotation[#, {47.61892158242514, 59.66173466758481}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{45.77351235989464, 58.640554047975954`}]}}, 
          RowBox[{"{", 
            RowBox[{"45.77351235989464`", ",", "58.640554047975954`"}], 
            "}"}]], Annotation[#, {45.77351235989464, 58.640554047975954`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.3181820687298, 57.18415675070014}]}}, 
          RowBox[{"{", 
            RowBox[{"43.3181820687298`", ",", "57.18415675070014`"}], "}"}]], 
         Annotation[#, {43.3181820687298, 57.18415675070014}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{46.33259389030257, 54.426958220403606`}]}}, 
          RowBox[{"{", 
            RowBox[{"46.33259389030257`", ",", "54.426958220403606`"}], 
            "}"}]], Annotation[#, {46.33259389030257, 54.426958220403606`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{42.3778618937259, 51.696076953182754`}]}}, 
          RowBox[{"{", 
            RowBox[{"42.3778618937259`", ",", "51.696076953182754`"}], "}"}]],
          Annotation[#, {42.3778618937259, 51.696076953182754`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.456907796253695`, 48.905865102310635`}]}}, 
          RowBox[{"{", 
            RowBox[{"41.456907796253695`", ",", "48.905865102310635`"}], 
            "}"}]], Annotation[#, {41.456907796253695`, 48.905865102310635`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.17601746716748, 47.699031887142155`}]}}, 
          RowBox[{"{", 
            RowBox[{"48.17601746716748`", ",", "47.699031887142155`"}], 
            "}"}]], Annotation[#, {48.17601746716748, 47.699031887142155`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.51979992531124, 46.0305309319422}]}}, 
          RowBox[{"{", 
            RowBox[{"48.51979992531124`", ",", "46.0305309319422`"}], "}"}]], 
         Annotation[#, {48.51979992531124, 46.0305309319422}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{47.842373295705215`, 44.48938764090077}]}}, 
          RowBox[{"{", 
            RowBox[{"47.842373295705215`", ",", "44.48938764090077`"}], 
            "}"}]], Annotation[#, {47.842373295705215`, 44.48938764090077}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.76113770938823, 41.54708379748115}]}}, 
          RowBox[{"{", 
            RowBox[{"48.76113770938823`", ",", "41.54708379748115`"}], "}"}]],
          Annotation[#, {48.76113770938823, 41.54708379748115}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.13723854272716, 38.77287307507544}]}}, 
          RowBox[{"{", 
            RowBox[{"49.13723854272716`", ",", "38.77287307507544`"}], "}"}]],
          Annotation[#, {49.13723854272716, 38.77287307507544}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{49.85445412643863, 36.5946347550955}]}}, 
          RowBox[{"{", 
            RowBox[{"49.85445412643863`", ",", "36.5946347550955`"}], "}"}]], 
         Annotation[#, {49.85445412643863, 36.5946347550955}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{51.257098012861654`, 35.12852686207865}]}}, 
          RowBox[{"{", 
            RowBox[{"51.257098012861654`", ",", "35.12852686207865`"}], 
            "}"}]], Annotation[#, {51.257098012861654`, 35.12852686207865}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.71181197617141, 32.897480603693275`}]}}, 
          RowBox[{"{", 
            RowBox[{"43.71181197617141`", ",", "32.897480603693275`"}], 
            "}"}]], Annotation[#, {43.71181197617141, 32.897480603693275`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{39.027893215454455`, 30.007129770488834`}]}}, 
          RowBox[{"{", 
            RowBox[{"39.027893215454455`", ",", "30.007129770488834`"}], 
            "}"}]], Annotation[#, {39.027893215454455`, 30.007129770488834`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{34.58016942541667, 27.992314373721623`}]}}, 
          RowBox[{"{", 
            RowBox[{"34.58016942541667`", ",", "27.992314373721623`"}], 
            "}"}]], Annotation[#, {34.58016942541667, 27.992314373721623`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{32.67694895916654, 25.551551486211327`}]}}, 
          RowBox[{"{", 
            RowBox[{"32.67694895916654`", ",", "25.551551486211327`"}], 
            "}"}]], Annotation[#, {32.67694895916654, 25.551551486211327`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{30.944772136634747`, 24.57563256737007}]}}, 
          RowBox[{"{", 
            RowBox[{"30.944772136634747`", ",", "24.57563256737007`"}], 
            "}"}]], Annotation[#, {30.944772136634747`, 24.57563256737007}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{41.476830834122254`, 34.585533021085425`}]}}, 
          RowBox[{"{", 
            RowBox[{"41.476830834122254`", ",", "34.585533021085425`"}], 
            "}"}]], Annotation[#, {41.476830834122254`, 34.585533021085425`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{36.905934386222256`, 32.63726022286328}]}}, 
          RowBox[{"{", 
            RowBox[{"36.905934386222256`", ",", "32.63726022286328`"}], 
            "}"}]], Annotation[#, {36.905934386222256`, 32.63726022286328}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{35.83658115549163, 32.219748377772824`}]}}, 
          RowBox[{"{", 
            RowBox[{"35.83658115549163`", ",", "32.219748377772824`"}], 
            "}"}]], Annotation[#, {35.83658115549163, 32.219748377772824`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{39.622980778504086`, 34.353058106255695`}]}}, 
          RowBox[{"{", 
            RowBox[{"39.622980778504086`", ",", "34.353058106255695`"}], 
            "}"}]], Annotation[#, {39.622980778504086`, 34.353058106255695`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{39.51990813852392, 34.3751020663108}]}}, 
          RowBox[{"{", 
            RowBox[{"39.51990813852392`", ",", "34.3751020663108`"}], "}"}]], 
         Annotation[#, {39.51990813852392, 34.3751020663108}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.526933599493006`, 34.99023297490864}]}}, 
          RowBox[{"{", 
            RowBox[{"40.526933599493006`", ",", "34.99023297490864`"}], 
            "}"}]], Annotation[#, {40.526933599493006`, 34.99023297490864}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{40.06216272770607, 34.09537716581283}]}}, 
          RowBox[{"{", 
            RowBox[{"40.06216272770607`", ",", "34.09537716581283`"}], "}"}]],
          Annotation[#, {40.06216272770607, 34.09537716581283}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{39.987976929405626`, 34.58633262268373}]}}, 
          RowBox[{"{", 
            RowBox[{"39.987976929405626`", ",", "34.58633262268373`"}], 
            "}"}]], Annotation[#, {39.987976929405626`, 34.58633262268373}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{37.30803453299109, 31.930494741993318`}]}}, 
          RowBox[{"{", 
            RowBox[{"37.30803453299109`", ",", "31.930494741993318`"}], 
            "}"}]], Annotation[#, {37.30803453299109, 31.930494741993318`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{37.35261145589806, 31.63307891583992}]}}, 
          RowBox[{"{", 
            RowBox[{"37.35261145589806`", ",", "31.63307891583992`"}], "}"}]],
          Annotation[#, {37.35261145589806, 31.63307891583992}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{34.47373245005641, 29.686592826206766`}]}}, 
          RowBox[{"{", 
            RowBox[{"34.47373245005641`", ",", "29.686592826206766`"}], 
            "}"}]], Annotation[#, {34.47373245005641, 29.686592826206766`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{34.42479411496236, 26.84481205379262}]}}, 
          RowBox[{"{", 
            RowBox[{"34.42479411496236`", ",", "26.84481205379262`"}], "}"}]],
          Annotation[#, {34.42479411496236, 26.84481205379262}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{34.24836457243631, 26.96541712463507}]}}, 
          RowBox[{"{", 
            RowBox[{"34.24836457243631`", ",", "26.96541712463507`"}], "}"}]],
          Annotation[#, {34.24836457243631, 26.96541712463507}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{33.19951414692983, 25.882580564732965`}]}}, 
          RowBox[{"{", 
            RowBox[{"33.19951414692983`", ",", "25.882580564732965`"}], 
            "}"}]], Annotation[#, {33.19951414692983, 25.882580564732965`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{36.77979840572128, 30.597671771787642`}]}}, 
          RowBox[{"{", 
            RowBox[{"36.77979840572128`", ",", "30.597671771787642`"}], 
            "}"}]], Annotation[#, {36.77979840572128, 30.597671771787642`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{35.349360573764116`, 29.963825098645334`}]}}, 
          RowBox[{"{", 
            RowBox[{"35.349360573764116`", ",", "29.963825098645334`"}], 
            "}"}]], Annotation[#, {35.349360573764116`, 29.963825098645334`}, 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{43.26407876883222, 37.84086811516892}]}}, 
          RowBox[{"{", 
            RowBox[{"43.26407876883222`", ",", "37.84086811516892`"}], "}"}]],
          Annotation[#, {43.26407876883222, 37.84086811516892}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{48.98215291620186, 43.178510168977915`}]}}, 
          RowBox[{"{", 
            RowBox[{"48.98215291620186`", ",", "43.178510168977915`"}], 
            "}"}]], Annotation[#, {48.98215291620186, 43.178510168977915`}, 
          "Tooltip"]& ]}}, {}, {}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           GrayLevel[0.2], 
           Opacity[0.5], 
           AbsoluteThickness[1.], 
           AbsoluteDashing[{2, 4}]], 
          LineBox[CompressedData["
1:eJxNxXss1AEcAPDLNe0QW4mNse7niO3sNHUUxx13x12OE1M28sorO9TcY51D
RLI8OiZbdW5kq3GRpjtqksoqj6VpUedR2LzGZSbZTPVH368/PvtQk3POppqR
SCTRX/9uKYie6BQw2f+fixkePCrCaQx+b5UYfzDt03zp3J7ZjhIiFW8y+0FS
F+Gashz3y3q8oapCznD1gQsFDheIw76wnK6sEP/EqSmlO8TgKbiXu2jI0p+G
JeHOPWu1frANWUdeKvaHUyzna8slLPi932pmcmgATNhHlneeDIT5lUGbGgob
HvN9MsiU4d+6w95SVvDlkY9J27EcWNp9jXAbxcdFN8xp/CCYK5NWBj7FPfJq
fOs9gmF787oyiwa8UPJmq9uGC/cVCKr8SnEKTT/wdR0f0kS6dGXy4AbdGKEb
x1lpbTw5jw/HbXTcyn+Ol9hpZI0eITDN2nB9R4tr2t2eedqFwtR5VYWyBHcy
7SvZv40T1dnOrRkCmDTOmHT5jJ/fdOr7IhTChocbvEcGXO21tdbFOANLw+b8
ZzT48UOuOqNlGJyuU3Nsi/EW44Ii04THf88a+50uglerg6PiJvHyT2SpURgO
310y9dx5hevrB5pzvSLgthVTu+N93NqKZiqiiOEPy68nitl44kiUQsHBf3XM
2mUH4TQZOTqWixeSgkcYofiJI/39xgi8MaCvlZmAM6liIT0RHyLPLFCT8O13
u64HU/DoqEDtbBpukdFbV5ONa4Xh3mU5uI/n1KgyF7+4vmOdfgV/mc+6yZLh
MQnDx7zl+AonfsBdgTscUJFtr+Idi1ZNFCUeMnSPvbvnqcf06Y18PO/2C9WS
Cv8DIIESeQ==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$398363#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {22.506282145509573`, 22.506282145509573`}, 
     PlotRange -> {{22.287884376914533`, 65.96743809592215}, {
      22.287884376914533`, 65.96743809592215}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, Axes -> {False, False},
      AxesLabel -> {None, None}, 
     AxesOrigin -> {22.506282145509573`, 22.506282145509573`}, 
     DisplayFunction :> Identity, Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{22.287884376914533`, 65.96743809592215}, {
      22.287884376914533`, 65.96743809592215}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}], ",", "Automatic"}], 
                    "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect prediction line\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.13333333333333336`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.2]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.2], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "4"}], "}"}], "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7932582160826335`*^9},ExpressionUUID->"34c8b6be-c053-4055-90a0-\
b8f163586197"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plottestdata", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"testdata", ",", "None", ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atestdata", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Take", "[", 
      RowBox[{"testdata", ",", "All", ",", "1"}], "]"}], "]"}], "//", 
    "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ptestdata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"pred", "[", 
      RowBox[{"plottestdata", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "testdata", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"atestdata", ",", "ptestdata"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Actual and Predicted data\>\"", ",", "15"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Actual\>\"", ",", "\"\<Predicted\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7932584631758876`*^9, 
  3.7932585354166822`*^9}},ExpressionUUID->"a6e68f6a-e9d1-47e2-a05a-\
a14fb2d80bd8"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
caKhJfyRcfQdi7dCNC63Pwx+kmWJ/wMExhzv
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
     PlotRange -> {{0., 401.}, {0, 63.88745934739798}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Actual and Predicted data\"", 15, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{0., 401.}, {0, 63.88745934739798}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Actual\"", "\"Predicted\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.793258544187356*^9},ExpressionUUID->"93f8763e-87fd-4e9a-9078-\
bb07d8da1a6d"]
}, Open  ]]
},
WindowSize->{859, 771},
WindowMargins->{{Automatic, 36}, {Automatic, 6}},
Magnification:>1.2 Inherited,
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 328, 9, 55, "Input",ExpressionUUID->"31858f0d-b669-41b0-9910-fd993653cf00"],
Cell[CellGroupData[{
Cell[911, 33, 155, 3, 35, "Input",ExpressionUUID->"32f9ed4f-ebb5-45d7-97c4-fecc9dc489b9"],
Cell[1069, 38, 8091, 213, 135, "Output",ExpressionUUID->"bd800e2b-96ba-4f61-82fa-5a11fdde143f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9197, 256, 326, 9, 35, "Input",ExpressionUUID->"7e66a058-fad4-460b-ac93-bdf04c4918df"],
Cell[9526, 267, 8074, 213, 135, "Output",ExpressionUUID->"25ced6d1-5c9c-4579-b84a-d9a6d18d705c"]
}, Open  ]],
Cell[17615, 483, 649, 19, 84, "Input",ExpressionUUID->"8dc89dcb-b2cf-48cc-bb0d-703e7db75b3c"],
Cell[18267, 504, 2050, 58, 352, "Input",ExpressionUUID->"9ced0bfd-2193-439b-9d3f-f7c115e818b6"],
Cell[CellGroupData[{
Cell[20342, 566, 1805, 42, 415, "Input",ExpressionUUID->"becc78a1-b968-4632-a5db-3938411db8f1"],
Cell[22150, 610, 456193, 8013, 600, "Output",ExpressionUUID->"71e89ae8-0cd1-487a-a962-dad3619d4163"]
}, Open  ]],
Cell[CellGroupData[{
Cell[478380, 8628, 360, 7, 100, "Input",ExpressionUUID->"da006f7d-f859-410b-a8a2-e7754be924a7"],
Cell[478743, 8637, 8892, 180, 79, "Output",ExpressionUUID->"c23c616d-2a40-48f9-9aa5-ee14dd280e1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487672, 8822, 131, 1, 55, "Input",ExpressionUUID->"3c68e110-d31b-4f41-82d3-27142f2dc757"],
Cell[487806, 8825, 59772, 1169, 617, "Output",ExpressionUUID->"c263045a-4f19-4437-9d51-c533528e2511"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547615, 9999, 1414, 40, 235, "Input",ExpressionUUID->"7e7b3a33-ed31-47aa-9125-cb86a9e9ca87"],
Cell[549032, 10041, 55195, 961, 430, "Output",ExpressionUUID->"df5fe266-e429-4dde-83c4-fac4da4586d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[604264, 11007, 188, 4, 55, "Input",ExpressionUUID->"0c0d1285-9b61-4377-a53c-95b454eac9d9"],
Cell[604455, 11013, 8475, 173, 79, "Output",ExpressionUUID->"a63e7e99-449b-4096-a033-0e6a47b6ccd3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[612967, 11191, 129, 1, 35, "Input",ExpressionUUID->"73e4e3ce-a33a-4326-b338-841326d1b001"],
Cell[613099, 11194, 22286, 362, 299, "Output",ExpressionUUID->"2a0a51df-13d3-441a-86bb-4541e9dd3fa9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[635422, 11561, 131, 1, 35, "Input",ExpressionUUID->"d7051f62-effe-49bd-a911-7faa4938a1e7"],
Cell[635556, 11564, 153549, 3508, 455, "Output",ExpressionUUID->"34c8b6be-c053-4055-90a0-b8f163586197"]
}, Open  ]],
Cell[CellGroupData[{
Cell[789142, 15077, 1389, 39, 280, "Input",ExpressionUUID->"a6e68f6a-e9d1-47e2-a05a-a14fb2d80bd8"],
Cell[790534, 15118, 22120, 418, 318, "Output",ExpressionUUID->"93f8763e-87fd-4e9a-9078-bb07d8da1a6d"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

